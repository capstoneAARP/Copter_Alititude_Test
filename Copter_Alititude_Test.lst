;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/24/2014 2:23:04 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x7FFC2001  	536969212
0x0004	0x23F90000  	9209
0x0008	0x23DD0000  	9181
0x000C	0x23DD0000  	9181
0x0010	0x23DD0000  	9181
0x0014	0x23DD0000  	9181
0x0018	0x23DD0000  	9181
0x001C	0x23DD0000  	9181
0x0020	0x23DD0000  	9181
0x0024	0x23DD0000  	9181
0x0028	0x23DD0000  	9181
0x002C	0x23DD0000  	9181
0x0030	0x23DD0000  	9181
0x0034	0x23DD0000  	9181
0x0038	0x23DD0000  	9181
0x003C	0x23890000  	9097
0x0040	0x23DD0000  	9181
0x0044	0x23DD0000  	9181
0x0048	0x23DD0000  	9181
0x004C	0x23DD0000  	9181
0x0050	0x23DD0000  	9181
0x0054	0x23DD0000  	9181
0x0058	0x23DD0000  	9181
0x005C	0x23DD0000  	9181
0x0060	0x23DD0000  	9181
0x0064	0x23DD0000  	9181
0x0068	0x23DD0000  	9181
0x006C	0x23DD0000  	9181
0x0070	0x23DD0000  	9181
0x0074	0x23DD0000  	9181
0x0078	0x23DD0000  	9181
0x007C	0x23DD0000  	9181
0x0080	0x23DD0000  	9181
0x0084	0x23DD0000  	9181
0x0088	0x23DD0000  	9181
0x008C	0x23DD0000  	9181
0x0090	0x23DD0000  	9181
0x0094	0x23DD0000  	9181
0x0098	0x23DD0000  	9181
0x009C	0x23DD0000  	9181
0x00A0	0x23DD0000  	9181
0x00A4	0x23DD0000  	9181
0x00A8	0x23DD0000  	9181
0x00AC	0x23DD0000  	9181
0x00B0	0x23DD0000  	9181
0x00B4	0x23DD0000  	9181
0x00B8	0x23DD0000  	9181
0x00BC	0x23DD0000  	9181
0x00C0	0x23DD0000  	9181
0x00C4	0x23DD0000  	9181
0x00C8	0x23DD0000  	9181
0x00CC	0x23DD0000  	9181
0x00D0	0x23DD0000  	9181
0x00D4	0x23DD0000  	9181
0x00D8	0x23DD0000  	9181
0x00DC	0x23DD0000  	9181
0x00E0	0x23DD0000  	9181
0x00E4	0x23DD0000  	9181
0x00E8	0x23DD0000  	9181
0x00EC	0x23DD0000  	9181
0x00F0	0x23DD0000  	9181
0x00F4	0x23DD0000  	9181
0x00F8	0x23DD0000  	9181
0x00FC	0x23DD0000  	9181
0x0100	0x23DD0000  	9181
0x0104	0x23DD0000  	9181
0x0108	0x23DD0000  	9181
0x010C	0x23DD0000  	9181
0x0110	0x23DD0000  	9181
0x0114	0x23DD0000  	9181
0x0118	0x23DD0000  	9181
0x011C	0x23DD0000  	9181
0x0120	0x23DD0000  	9181
0x0124	0x23DD0000  	9181
0x0128	0x23DD0000  	9181
0x012C	0x23DD0000  	9181
; end of ____SysVT
_main:
;main.c, 221 :: 		void main()
0x23F8	0xF000F80A  BL	9232
0x23FC	0xF000FAD2  BL	10660
0x2400	0xF7FFFFF0  BL	9188
0x2404	0xF000FA80  BL	10504
;main.c, 226 :: 		init_prog();
0x2408	0xF7FFFFA6  BL	_init_prog+0
;main.c, 240 :: 		}
L_end_main:
L__main_end_loop:
0x240C	0xE7FE    B	L__main_end_loop
; end of _main
_init_prog:
;main.c, 191 :: 		void init_prog()
0x2358	0xB081    SUB	SP, SP, #4
0x235A	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 203 :: 		UARTDebugInit();
0x235E	0xF7FFFF9D  BL	_UARTDebugInit+0
;main.c, 204 :: 		Delay_ms(250);
0x2362	0xF242579F  MOVW	R7, #9631
0x2366	0xF2C00726  MOVT	R7, #38
L_init_prog14:
0x236A	0x1E7F    SUBS	R7, R7, #1
0x236C	0xD1FD    BNE	L_init_prog14
0x236E	0xBF00    NOP
0x2370	0xBF00    NOP
0x2372	0xBF00    NOP
0x2374	0xBF00    NOP
0x2376	0xBF00    NOP
;main.c, 209 :: 		Flight_Control_Init();
0x2378	0xF7FFFF82  BL	_Flight_Control_Init+0
;main.c, 212 :: 		mainTestingThread();
0x237C	0xF7FFFF20  BL	_mainTestingThread+0
;main.c, 217 :: 		}
L_end_init_prog:
0x2380	0xF8DDE000  LDR	LR, [SP, #0]
0x2384	0xB001    ADD	SP, SP, #4
0x2386	0x4770    BX	LR
; end of _init_prog
_UARTDebugInit:
;UART.c, 4 :: 		void UARTDebugInit()
0x229C	0xB081    SUB	SP, SP, #4
0x229E	0xF8CDE000  STR	LR, [SP, #0]
;UART.c, 6 :: 		UART1_Init_Advanced(9600, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x22A2	0x4808    LDR	R0, [PC, #32]
0x22A4	0xB401    PUSH	(R0)
0x22A6	0xF2400300  MOVW	R3, #0
0x22AA	0xF2400200  MOVW	R2, #0
0x22AE	0xF2400100  MOVW	R1, #0
0x22B2	0xF2425080  MOVW	R0, #9600
0x22B6	0xF7FFFBF9  BL	_UART1_Init_Advanced+0
0x22BA	0xB001    ADD	SP, SP, #4
;UART.c, 7 :: 		}
L_end_UARTDebugInit:
0x22BC	0xF8DDE000  LDR	LR, [SP, #0]
0x22C0	0xB001    ADD	SP, SP, #4
0x22C2	0x4770    BX	LR
0x22C4	0x26C80000  	__GPIO_MODULE_USART1_PA9_10+0
; end of _UARTDebugInit
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1AAC	0xB081    SUB	SP, SP, #4
0x1AAE	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1AB2	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x1AB4	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1AB6	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1AB8	0xB408    PUSH	(R3)
0x1ABA	0xB293    UXTH	R3, R2
0x1ABC	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1ABE	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1AC0	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1AC2	0xF7FFFDC7  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1AC6	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x1AC8	0xF8DDE000  LDR	LR, [SP, #0]
0x1ACC	0xB001    ADD	SP, SP, #4
0x1ACE	0x4770    BX	LR
0x1AD0	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1654	0xB08A    SUB	SP, SP, #40
0x1656	0xF8CDE000  STR	LR, [SP, #0]
0x165A	0x4683    MOV	R11, R0
0x165C	0xB298    UXTH	R0, R3
0x165E	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x1660	0xF8BD1028  LDRH	R1, [SP, #40]
; module start address is: 24 (R6)
0x1664	0x9E0B    LDR	R6, [SP, #44]
;__Lib_UART_123_45.c, 298 :: 		
0x1666	0xAC04    ADD	R4, SP, #16
0x1668	0xF8AD1004  STRH	R1, [SP, #4]
0x166C	0xF8AD0008  STRH	R0, [SP, #8]
0x1670	0x4620    MOV	R0, R4
0x1672	0xF7FFFA39  BL	_RCC_GetClocksFrequency+0
0x1676	0xF8BD0008  LDRH	R0, [SP, #8]
0x167A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x167E	0x4C65    LDR	R4, [PC, #404]
0x1680	0x45A3    CMP	R11, R4
0x1682	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x1684	0x2501    MOVS	R5, #1
0x1686	0xB26D    SXTB	R5, R5
0x1688	0x4C63    LDR	R4, [PC, #396]
0x168A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x168C	0x4D63    LDR	R5, [PC, #396]
0x168E	0x4C64    LDR	R4, [PC, #400]
0x1690	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x1692	0x4D64    LDR	R5, [PC, #400]
0x1694	0x4C64    LDR	R4, [PC, #400]
0x1696	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x1698	0x4D64    LDR	R5, [PC, #400]
0x169A	0x4C65    LDR	R4, [PC, #404]
0x169C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x169E	0x4D65    LDR	R5, [PC, #404]
0x16A0	0x4C65    LDR	R4, [PC, #404]
0x16A2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x16A4	0x9C07    LDR	R4, [SP, #28]
0x16A6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x16A8	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x16AA	0x4C64    LDR	R4, [PC, #400]
0x16AC	0x45A3    CMP	R11, R4
0x16AE	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x16B0	0x2501    MOVS	R5, #1
0x16B2	0xB26D    SXTB	R5, R5
0x16B4	0x4C62    LDR	R4, [PC, #392]
0x16B6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x16B8	0x4D62    LDR	R5, [PC, #392]
0x16BA	0x4C59    LDR	R4, [PC, #356]
0x16BC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x16BE	0x4D62    LDR	R5, [PC, #392]
0x16C0	0x4C59    LDR	R4, [PC, #356]
0x16C2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x16C4	0x4D61    LDR	R5, [PC, #388]
0x16C6	0x4C5A    LDR	R4, [PC, #360]
0x16C8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x16CA	0x4D61    LDR	R5, [PC, #388]
0x16CC	0x4C5A    LDR	R4, [PC, #360]
0x16CE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x16D0	0x9C06    LDR	R4, [SP, #24]
0x16D2	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x16D4	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x16D6	0x4C5F    LDR	R4, [PC, #380]
0x16D8	0x45A3    CMP	R11, R4
0x16DA	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x16DC	0x2501    MOVS	R5, #1
0x16DE	0xB26D    SXTB	R5, R5
0x16E0	0x4C5D    LDR	R4, [PC, #372]
0x16E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x16E4	0x4D5D    LDR	R5, [PC, #372]
0x16E6	0x4C4E    LDR	R4, [PC, #312]
0x16E8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x16EA	0x4D5D    LDR	R5, [PC, #372]
0x16EC	0x4C4E    LDR	R4, [PC, #312]
0x16EE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x16F0	0x4D5C    LDR	R5, [PC, #368]
0x16F2	0x4C4F    LDR	R4, [PC, #316]
0x16F4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x16F6	0x4D5C    LDR	R5, [PC, #368]
0x16F8	0x4C4F    LDR	R4, [PC, #316]
0x16FA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x16FC	0x9C06    LDR	R4, [SP, #24]
0x16FE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x1700	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x1702	0x4C5A    LDR	R4, [PC, #360]
0x1704	0x45A3    CMP	R11, R4
0x1706	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x1708	0x2501    MOVS	R5, #1
0x170A	0xB26D    SXTB	R5, R5
0x170C	0x4C58    LDR	R4, [PC, #352]
0x170E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x1710	0x4D58    LDR	R5, [PC, #352]
0x1712	0x4C43    LDR	R4, [PC, #268]
0x1714	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x1716	0x4D58    LDR	R5, [PC, #352]
0x1718	0x4C43    LDR	R4, [PC, #268]
0x171A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x171C	0x4D57    LDR	R5, [PC, #348]
0x171E	0x4C44    LDR	R4, [PC, #272]
0x1720	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x1722	0x4D57    LDR	R5, [PC, #348]
0x1724	0x4C44    LDR	R4, [PC, #272]
0x1726	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x1728	0x9C06    LDR	R4, [SP, #24]
0x172A	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x172C	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x172E	0x4C55    LDR	R4, [PC, #340]
0x1730	0x45A3    CMP	R11, R4
0x1732	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x1734	0x2501    MOVS	R5, #1
0x1736	0xB26D    SXTB	R5, R5
0x1738	0x4C53    LDR	R4, [PC, #332]
0x173A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x173C	0x4D53    LDR	R5, [PC, #332]
0x173E	0x4C38    LDR	R4, [PC, #224]
0x1740	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x1742	0x4D53    LDR	R5, [PC, #332]
0x1744	0x4C38    LDR	R4, [PC, #224]
0x1746	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x1748	0x4D52    LDR	R5, [PC, #328]
0x174A	0x4C39    LDR	R4, [PC, #228]
0x174C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x174E	0x4D52    LDR	R5, [PC, #328]
0x1750	0x4C39    LDR	R4, [PC, #228]
0x1752	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x1754	0x9C06    LDR	R4, [SP, #24]
0x1756	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x1758	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x175C	0xF8AD0008  STRH	R0, [SP, #8]
0x1760	0x4630    MOV	R0, R6
0x1762	0xF7FFF939  BL	_GPIO_Alternate_Function_Enable+0
0x1766	0xF8BD0008  LDRH	R0, [SP, #8]
0x176A	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x176E	0xF10B0510  ADD	R5, R11, #16
0x1772	0x2400    MOVS	R4, #0
0x1774	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x1776	0xF10B0510  ADD	R5, R11, #16
0x177A	0x682C    LDR	R4, [R5, #0]
0x177C	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x177E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x1780	0xF10B050C  ADD	R5, R11, #12
0x1784	0x2400    MOVS	R4, #0
0x1786	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x1788	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x178A	0xF4406080  ORR	R0, R0, #1024
0x178E	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x1790	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x1792	0xF10B050C  ADD	R5, R11, #12
0x1796	0x682C    LDR	R4, [R5, #0]
0x1798	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x179A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x179C	0xF10B060C  ADD	R6, R11, #12
0x17A0	0x2501    MOVS	R5, #1
0x17A2	0x6834    LDR	R4, [R6, #0]
0x17A4	0xF365344D  BFI	R4, R5, #13, #1
0x17A8	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x17AA	0xF10B060C  ADD	R6, R11, #12
0x17AE	0x2501    MOVS	R5, #1
0x17B0	0x6834    LDR	R4, [R6, #0]
0x17B2	0xF36504C3  BFI	R4, R5, #3, #1
0x17B6	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x17B8	0xF10B060C  ADD	R6, R11, #12
0x17BC	0x2501    MOVS	R5, #1
0x17BE	0x6834    LDR	R4, [R6, #0]
0x17C0	0xF3650482  BFI	R4, R5, #2, #1
0x17C4	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x17C6	0xF10B0514  ADD	R5, R11, #20
0x17CA	0x2400    MOVS	R4, #0
0x17CC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x17CE	0x9D03    LDR	R5, [SP, #12]
0x17D0	0x2419    MOVS	R4, #25
0x17D2	0x4365    MULS	R5, R4, R5
0x17D4	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x17D8	0xFBB5F5F4  UDIV	R5, R5, R4
; integerdivider start address is: 0 (R0)
0x17DC	0x4628    MOV	R0, R5
;__Lib_UART_123_45.c, 363 :: 		
0x17DE	0x2464    MOVS	R4, #100
0x17E0	0xFBB5F4F4  UDIV	R4, R5, R4
0x17E4	0x0124    LSLS	R4, R4, #4
; tmpreg start address is: 4 (R1)
0x17E6	0x4621    MOV	R1, R4
;__Lib_UART_123_45.c, 365 :: 		
0x17E8	0x0925    LSRS	R5, R4, #4
0x17EA	0x2464    MOVS	R4, #100
0x17EC	0x436C    MULS	R4, R5, R4
0x17EE	0x1B04    SUB	R4, R0, R4
; integerdivider end address is: 0 (R0)
;__Lib_UART_123_45.c, 366 :: 		
0x17F0	0x0124    LSLS	R4, R4, #4
0x17F2	0xF2040532  ADDW	R5, R4, #50
0x17F6	0x2464    MOVS	R4, #100
0x17F8	0xFBB5F4F4  UDIV	R4, R5, R4
0x17FC	0xF004040F  AND	R4, R4, #15
0x1800	0xEA410404  ORR	R4, R1, R4, LSL #0
; tmpreg end address is: 4 (R1)
;__Lib_UART_123_45.c, 368 :: 		
0x1804	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x1808	0xB2A4    UXTH	R4, R4
0x180A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x180C	0xF8DDE000  LDR	LR, [SP, #0]
0x1810	0xB00A    ADD	SP, SP, #40
0x1812	0x4770    BX	LR
0x1814	0x38004001  	USART1_SR+0
0x1818	0x03384242  	RCC_APB2ENR+0
0x181C	0x12D90000  	_UART1_Write+0
0x1820	0x01782000  	_UART_Wr_Ptr+0
0x1824	0xFFFFFFFF  	_UART1_Read+0
0x1828	0x01742000  	_UART_Rd_Ptr+0
0x182C	0xFFFFFFFF  	_UART1_Data_Ready+0
0x1830	0x017C2000  	_UART_Rdy_Ptr+0
0x1834	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x1838	0x01802000  	_UART_Tx_Idle_Ptr+0
0x183C	0x44004000  	USART2_SR+0
0x1840	0x03C44242  	RCC_APB1ENR+0
0x1844	0xFFFFFFFF  	_UART2_Write+0
0x1848	0xFFFFFFFF  	_UART2_Read+0
0x184C	0xFFFFFFFF  	_UART2_Data_Ready+0
0x1850	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x1854	0x48004000  	USART3_SR+0
0x1858	0x03C84242  	RCC_APB1ENR+0
0x185C	0xFFFFFFFF  	_UART3_Write+0
0x1860	0xFFFFFFFF  	_UART3_Read+0
0x1864	0xFFFFFFFF  	_UART3_Data_Ready+0
0x1868	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x186C	0x4C004000  	UART4_SR+0
0x1870	0x03CC4242  	RCC_APB1ENR+0
0x1874	0xFFFFFFFF  	_UART4_Write+0
0x1878	0xFFFFFFFF  	_UART4_Read+0
0x187C	0xFFFFFFFF  	_UART4_Data_Ready+0
0x1880	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x1884	0x50004000  	UART5_SR+0
0x1888	0x03D04242  	RCC_APB1ENR+0
0x188C	0xFFFFFFFF  	_UART5_Write+0
0x1890	0xFFFFFFFF  	_UART5_Read+0
0x1894	0xFFFFFFFF  	_UART5_Data_Ready+0
0x1898	0xFFFFFFFF  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_101_102_103.c, 387 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0AE8	0xB082    SUB	SP, SP, #8
0x0AEA	0xF8CDE000  STR	LR, [SP, #0]
0x0AEE	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_101_102_103.c, 390 :: 		
0x0AF0	0x4619    MOV	R1, R3
0x0AF2	0x9101    STR	R1, [SP, #4]
0x0AF4	0xF7FFFC68  BL	_Get_Fosc_kHz+0
0x0AF8	0xF24031E8  MOVW	R1, #1000
0x0AFC	0xFB00F201  MUL	R2, R0, R1
0x0B00	0x9901    LDR	R1, [SP, #4]
0x0B02	0x600A    STR	R2, [R1, #0]
;__Lib_System_101_102_103.c, 393 :: 		
0x0B04	0x491F    LDR	R1, [PC, #124]
0x0B06	0x7809    LDRB	R1, [R1, #0]
0x0B08	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0B0C	0xB2C8    UXTB	R0, R1
;__Lib_System_101_102_103.c, 394 :: 		
0x0B0E	0x491E    LDR	R1, [PC, #120]
0x0B10	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0B12	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0B14	0xB2C0    UXTB	R0, R0
;__Lib_System_101_102_103.c, 396 :: 		
0x0B16	0x1D1A    ADDS	R2, R3, #4
0x0B18	0x6819    LDR	R1, [R3, #0]
0x0B1A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0B1C	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 398 :: 		
0x0B1E	0x4919    LDR	R1, [PC, #100]
0x0B20	0x8809    LDRH	R1, [R1, #0]
0x0B22	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0B26	0xB288    UXTH	R0, R1
;__Lib_System_101_102_103.c, 399 :: 		
0x0B28	0x4917    LDR	R1, [PC, #92]
0x0B2A	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0B2C	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0B2E	0xB2C0    UXTB	R0, R0
;__Lib_System_101_102_103.c, 401 :: 		
0x0B30	0xF2030208  ADDW	R2, R3, #8
0x0B34	0x1D19    ADDS	R1, R3, #4
0x0B36	0x6809    LDR	R1, [R1, #0]
0x0B38	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0B3A	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 403 :: 		
0x0B3C	0x4911    LDR	R1, [PC, #68]
0x0B3E	0x8809    LDRH	R1, [R1, #0]
0x0B40	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0B44	0xB288    UXTH	R0, R1
;__Lib_System_101_102_103.c, 404 :: 		
0x0B46	0x4910    LDR	R1, [PC, #64]
0x0B48	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0B4A	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0B4C	0xB2C0    UXTB	R0, R0
;__Lib_System_101_102_103.c, 406 :: 		
0x0B4E	0xF203020C  ADDW	R2, R3, #12
0x0B52	0x1D19    ADDS	R1, R3, #4
0x0B54	0x6809    LDR	R1, [R1, #0]
0x0B56	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0B58	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 408 :: 		
0x0B5A	0x490A    LDR	R1, [PC, #40]
0x0B5C	0x8809    LDRH	R1, [R1, #0]
0x0B5E	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x0B62	0xB288    UXTH	R0, R1
;__Lib_System_101_102_103.c, 409 :: 		
0x0B64	0x4909    LDR	R1, [PC, #36]
0x0B66	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0B68	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0B6A	0xB2C8    UXTB	R0, R1
;__Lib_System_101_102_103.c, 411 :: 		
0x0B6C	0xF2030210  ADDW	R2, R3, #16
0x0B70	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0B74	0x6809    LDR	R1, [R1, #0]
0x0B76	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0B7A	0x6011    STR	R1, [R2, #0]
;__Lib_System_101_102_103.c, 412 :: 		
L_end_RCC_GetClocksFrequency:
0x0B7C	0xF8DDE000  LDR	LR, [SP, #0]
0x0B80	0xB002    ADD	SP, SP, #8
0x0B82	0x4770    BX	LR
0x0B84	0x10044002  	RCC_CFGRbits+0
0x0B88	0x28F80000  	__Lib_System_101_102_103_APBAHBPrescTable+0
0x0B8C	0x1AD40000  	__Lib_System_101_102_103_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x03C8	0x4801    LDR	R0, [PC, #4]
0x03CA	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x03CC	0x4770    BX	LR
0x03CE	0xBF00    NOP
0x03D0	0x01702000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x09D8	0xB081    SUB	SP, SP, #4
0x09DA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x09DE	0x2201    MOVS	R2, #1
0x09E0	0xB252    SXTB	R2, R2
0x09E2	0x493E    LDR	R1, [PC, #248]
0x09E4	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x09E6	0xF2000168  ADDW	R1, R0, #104
0x09EA	0x680B    LDR	R3, [R1, #0]
0x09EC	0xF06F6100  MVN	R1, #134217728
0x09F0	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x09F4	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x09F6	0xF0036100  AND	R1, R3, #134217728
0x09FA	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x09FC	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x09FE	0xF0024100  AND	R1, R2, #-2147483648
0x0A02	0xF1B14F00  CMP	R1, #-2147483648
0x0A06	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0A08	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0A0A	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0A0C	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0A0E	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0A10	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x0A12	0xF4042170  AND	R1, R4, #983040
0x0A16	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0A18	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0A1A	0xF64F71FF  MOVW	R1, #65535
0x0A1E	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x0A22	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0A24	0xF4041140  AND	R1, R4, #3145728
0x0A28	0xF5B11F40  CMP	R1, #3145728
0x0A2C	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0A2E	0xF06F6170  MVN	R1, #251658240
0x0A32	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x0A36	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0A38	0x492A    LDR	R1, [PC, #168]
0x0A3A	0x680A    LDR	R2, [R1, #0]
0x0A3C	0xF06F6170  MVN	R1, #251658240
0x0A40	0x400A    ANDS	R2, R1
0x0A42	0x4928    LDR	R1, [PC, #160]
0x0A44	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x0A46	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0A48	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0A4A	0xF4041180  AND	R1, R4, #1048576
0x0A4E	0xF5B11F80  CMP	R1, #1048576
0x0A52	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0A54	0xF04F0103  MOV	R1, #3
0x0A58	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0A5A	0x43C9    MVN	R1, R1
0x0A5C	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0A60	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0A64	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0A66	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0A68	0x0D61    LSRS	R1, R4, #21
0x0A6A	0x0109    LSLS	R1, R1, #4
0x0A6C	0xFA05F101  LSL	R1, R5, R1
0x0A70	0x43C9    MVN	R1, R1
0x0A72	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0A74	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0A78	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0A7A	0x0D61    LSRS	R1, R4, #21
0x0A7C	0x0109    LSLS	R1, R1, #4
0x0A7E	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0A82	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0A84	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0A86	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0A8A	0xF1B14F00  CMP	R1, #-2147483648
0x0A8E	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0A90	0x4913    LDR	R1, [PC, #76]
0x0A92	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0A94	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0A96	0x4913    LDR	R1, [PC, #76]
0x0A98	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x0A9A	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0A9E	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0AA0	0xEA4F018A  LSL	R1, R10, #2
0x0AA4	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0AA8	0x6809    LDR	R1, [R1, #0]
0x0AAA	0xF1B13FFF  CMP	R1, #-1
0x0AAE	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0AB0	0xF1090134  ADD	R1, R9, #52
0x0AB4	0xEA4F038A  LSL	R3, R10, #2
0x0AB8	0x18C9    ADDS	R1, R1, R3
0x0ABA	0x6809    LDR	R1, [R1, #0]
0x0ABC	0x460A    MOV	R2, R1
0x0ABE	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0AC2	0x6809    LDR	R1, [R1, #0]
0x0AC4	0x4608    MOV	R0, R1
0x0AC6	0x4611    MOV	R1, R2
0x0AC8	0xF7FFFC84  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0ACC	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0AD0	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0AD2	0xF8DDE000  LDR	LR, [SP, #0]
0x0AD6	0xB001    ADD	SP, SP, #4
0x0AD8	0x4770    BX	LR
0x0ADA	0xBF00    NOP
0x0ADC	0x03004242  	RCC_APB2ENRbits+0
0x0AE0	0x001C4001  	AFIO_MAPR2+0
0x0AE4	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x03D4	0xB083    SUB	SP, SP, #12
0x03D6	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x03DA	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x03DE	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x03E0	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x03E2	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x03E6	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x03E8	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x03EA	0x4A19    LDR	R2, [PC, #100]
0x03EC	0x9202    STR	R2, [SP, #8]
0x03EE	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x03F0	0x4A18    LDR	R2, [PC, #96]
0x03F2	0x9202    STR	R2, [SP, #8]
0x03F4	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x03F6	0x4A18    LDR	R2, [PC, #96]
0x03F8	0x9202    STR	R2, [SP, #8]
0x03FA	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x03FC	0x4A17    LDR	R2, [PC, #92]
0x03FE	0x9202    STR	R2, [SP, #8]
0x0400	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0402	0x4A17    LDR	R2, [PC, #92]
0x0404	0x9202    STR	R2, [SP, #8]
0x0406	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0408	0x4A16    LDR	R2, [PC, #88]
0x040A	0x9202    STR	R2, [SP, #8]
0x040C	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x040E	0x4A16    LDR	R2, [PC, #88]
0x0410	0x9202    STR	R2, [SP, #8]
0x0412	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0414	0x2800    CMP	R0, #0
0x0416	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0418	0x2801    CMP	R0, #1
0x041A	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x041C	0x2802    CMP	R0, #2
0x041E	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x0420	0x2803    CMP	R0, #3
0x0422	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x0424	0x2804    CMP	R0, #4
0x0426	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x0428	0x2805    CMP	R0, #5
0x042A	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x042C	0x2806    CMP	R0, #6
0x042E	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x0430	0x2201    MOVS	R2, #1
0x0432	0xB212    SXTH	R2, R2
0x0434	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x0436	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x043A	0x9802    LDR	R0, [SP, #8]
0x043C	0x460A    MOV	R2, R1
0x043E	0xF8BD1004  LDRH	R1, [SP, #4]
0x0442	0xF7FFFEBB  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x0446	0xF8DDE000  LDR	LR, [SP, #0]
0x044A	0xB003    ADD	SP, SP, #12
0x044C	0x4770    BX	LR
0x044E	0xBF00    NOP
0x0450	0x08004001  	#1073809408
0x0454	0x0C004001  	#1073810432
0x0458	0x10004001  	#1073811456
0x045C	0x14004001  	#1073812480
0x0460	0x18004001  	#1073813504
0x0464	0x1C004001  	#1073814528
0x0468	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x01BC	0xB081    SUB	SP, SP, #4
0x01BE	0xF8CDE000  STR	LR, [SP, #0]
0x01C2	0xB28C    UXTH	R4, R1
0x01C4	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x01C6	0x4B77    LDR	R3, [PC, #476]
0x01C8	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x01CC	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x01CE	0x4618    MOV	R0, R3
0x01D0	0xF7FFFFAE  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x01D4	0xF1B40FFF  CMP	R4, #255
0x01D8	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x01DA	0x4B73    LDR	R3, [PC, #460]
0x01DC	0x429D    CMP	R5, R3
0x01DE	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x01E0	0xF04F3333  MOV	R3, #858993459
0x01E4	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x01E6	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x01E8	0x2D42    CMP	R5, #66
0x01EA	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x01EC	0xF04F3344  MOV	R3, #1145324612
0x01F0	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x01F2	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x01F4	0xF64F73FF  MOVW	R3, #65535
0x01F8	0x429C    CMP	R4, R3
0x01FA	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x01FC	0x4B6A    LDR	R3, [PC, #424]
0x01FE	0x429D    CMP	R5, R3
0x0200	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0202	0xF04F3333  MOV	R3, #858993459
0x0206	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0208	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x020A	0xF04F3333  MOV	R3, #858993459
0x020E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0210	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0212	0x2D42    CMP	R5, #66
0x0214	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0216	0xF04F3344  MOV	R3, #1145324612
0x021A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x021C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x021E	0xF04F3344  MOV	R3, #1145324612
0x0222	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0224	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0226	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0228	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x022A	0xF0050301  AND	R3, R5, #1
0x022E	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0230	0x2100    MOVS	R1, #0
0x0232	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0234	0xF0050302  AND	R3, R5, #2
0x0238	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x023A	0xF40573C0  AND	R3, R5, #384
0x023E	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0240	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0242	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0244	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0246	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0248	0xF0050304  AND	R3, R5, #4
0x024C	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x024E	0xF0050320  AND	R3, R5, #32
0x0252	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0254	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0256	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0258	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x025A	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x025C	0xF0050308  AND	R3, R5, #8
0x0260	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0262	0xF0050320  AND	R3, R5, #32
0x0266	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0268	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x026A	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x026C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x026E	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0270	0x4B4E    LDR	R3, [PC, #312]
0x0272	0xEA050303  AND	R3, R5, R3, LSL #0
0x0276	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0278	0x2003    MOVS	R0, #3
0x027A	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x027C	0xF4057300  AND	R3, R5, #512
0x0280	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0282	0x2002    MOVS	R0, #2
0x0284	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x0286	0xF4056380  AND	R3, R5, #1024
0x028A	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x028C	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x028E	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0290	0xF005030C  AND	R3, R5, #12
0x0294	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x0296	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x0298	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x029A	0xF00403FF  AND	R3, R4, #255
0x029E	0xB29B    UXTH	R3, R3
0x02A0	0x2B00    CMP	R3, #0
0x02A2	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x02A4	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x02A6	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x02A8	0xFA1FF884  UXTH	R8, R4
0x02AC	0x4632    MOV	R2, R6
0x02AE	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x02B0	0x2808    CMP	R0, #8
0x02B2	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x02B4	0xF04F0301  MOV	R3, #1
0x02B8	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x02BC	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x02C0	0x42A3    CMP	R3, R4
0x02C2	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x02C4	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x02C6	0xF04F030F  MOV	R3, #15
0x02CA	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x02CC	0x43DB    MVN	R3, R3
0x02CE	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x02D2	0xFA01F305  LSL	R3, R1, R5
0x02D6	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x02DA	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x02DC	0xF4067381  AND	R3, R6, #258
0x02E0	0xF5B37F81  CMP	R3, #258
0x02E4	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x02E6	0xF2020414  ADDW	R4, R2, #20
0x02EA	0xF04F0301  MOV	R3, #1
0x02EE	0x4083    LSLS	R3, R0
0x02F0	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x02F2	0xF0060382  AND	R3, R6, #130
0x02F6	0x2B82    CMP	R3, #130
0x02F8	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x02FA	0xF2020410  ADDW	R4, R2, #16
0x02FE	0xF04F0301  MOV	R3, #1
0x0302	0x4083    LSLS	R3, R0
0x0304	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0306	0x462F    MOV	R7, R5
0x0308	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x030A	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x030C	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x030E	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0310	0xFA1FF088  UXTH	R0, R8
0x0314	0x460F    MOV	R7, R1
0x0316	0x4631    MOV	R1, R6
0x0318	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x031A	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x031C	0x460F    MOV	R7, R1
0x031E	0x4629    MOV	R1, R5
0x0320	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0322	0xF1B00FFF  CMP	R0, #255
0x0326	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0328	0x1D33    ADDS	R3, R6, #4
0x032A	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x032E	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0330	0x2A08    CMP	R2, #8
0x0332	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0334	0xF2020408  ADDW	R4, R2, #8
0x0338	0xF04F0301  MOV	R3, #1
0x033C	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0340	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0344	0x42A3    CMP	R3, R4
0x0346	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0348	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x034A	0xF04F030F  MOV	R3, #15
0x034E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0350	0x43DB    MVN	R3, R3
0x0352	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0356	0xFA07F305  LSL	R3, R7, R5
0x035A	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x035E	0xF4017381  AND	R3, R1, #258
0x0362	0xF5B37F81  CMP	R3, #258
0x0366	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0368	0xF2060514  ADDW	R5, R6, #20
0x036C	0xF2020408  ADDW	R4, R2, #8
0x0370	0xF04F0301  MOV	R3, #1
0x0374	0x40A3    LSLS	R3, R4
0x0376	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0378	0xF0010382  AND	R3, R1, #130
0x037C	0x2B82    CMP	R3, #130
0x037E	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x0380	0xF2060510  ADDW	R5, R6, #16
0x0384	0xF2020408  ADDW	R4, R2, #8
0x0388	0xF04F0301  MOV	R3, #1
0x038C	0x40A3    LSLS	R3, R4
0x038E	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x0390	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x0392	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0394	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x0396	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x0398	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x039C	0xF8DDE000  LDR	LR, [SP, #0]
0x03A0	0xB001    ADD	SP, SP, #4
0x03A2	0x4770    BX	LR
0x03A4	0xFC00FFFF  	#-1024
0x03A8	0x00140008  	#524308
0x03AC	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0130	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0132	0x4919    LDR	R1, [PC, #100]
0x0134	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0138	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x013A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x013C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x013E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0140	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0142	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0144	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0146	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0148	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x014A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x014C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x014E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0150	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0152	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0154	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0156	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x015A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x015C	0x490F    LDR	R1, [PC, #60]
0x015E	0x4288    CMP	R0, R1
0x0160	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0162	0x490F    LDR	R1, [PC, #60]
0x0164	0x4288    CMP	R0, R1
0x0166	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0168	0x490E    LDR	R1, [PC, #56]
0x016A	0x4288    CMP	R0, R1
0x016C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x016E	0x490E    LDR	R1, [PC, #56]
0x0170	0x4288    CMP	R0, R1
0x0172	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0174	0x490D    LDR	R1, [PC, #52]
0x0176	0x4288    CMP	R0, R1
0x0178	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x017A	0x490D    LDR	R1, [PC, #52]
0x017C	0x4288    CMP	R0, R1
0x017E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0180	0x490C    LDR	R1, [PC, #48]
0x0182	0x4288    CMP	R0, R1
0x0184	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0186	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0188	0x490B    LDR	R1, [PC, #44]
0x018A	0x6809    LDR	R1, [R1, #0]
0x018C	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0190	0x4909    LDR	R1, [PC, #36]
0x0192	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0194	0xB001    ADD	SP, SP, #4
0x0196	0x4770    BX	LR
0x0198	0xFC00FFFF  	#-1024
0x019C	0x08004001  	#1073809408
0x01A0	0x0C004001  	#1073810432
0x01A4	0x10004001  	#1073811456
0x01A8	0x14004001  	#1073812480
0x01AC	0x18004001  	#1073813504
0x01B0	0x1C004001  	#1073814528
0x01B4	0x20004001  	#1073815552
0x01B8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_Flight_Control_Init:
;FlightControl.c, 16 :: 		void Flight_Control_Init()
0x2280	0xB081    SUB	SP, SP, #4
0x2282	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 18 :: 		Init_ADC();
0x2286	0xF7FFFD8B  BL	_Init_ADC+0
;FlightControl.c, 19 :: 		Init_Pwm();
0x228A	0xF7FFFF11  BL	_Init_Pwm+0
;FlightControl.c, 20 :: 		Init_LED();
0x228E	0xF7FFFC23  BL	_Init_LED+0
;FlightControl.c, 21 :: 		}
L_end_Flight_Control_Init:
0x2292	0xF8DDE000  LDR	LR, [SP, #0]
0x2296	0xB001    ADD	SP, SP, #4
0x2298	0x4770    BX	LR
; end of _Flight_Control_Init
_Init_ADC:
;FlightControl.c, 31 :: 		void Init_ADC(){
0x1DA0	0xB081    SUB	SP, SP, #4
0x1DA2	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 33 :: 		ADC_Set_Input_Channel(_ADC_CHANNEL_13);                     // Choose ADC channel
0x1DA6	0xF2420000  MOVW	R0, #8192
0x1DAA	0xF7FFFBA9  BL	_ADC_Set_Input_Channel+0
;FlightControl.c, 34 :: 		ADC1_Init();
0x1DAE	0xF7FFFD83  BL	_ADC1_Init+0
;FlightControl.c, 35 :: 		Delay_ms(100);
0x1DB2	0xF244273F  MOVW	R7, #16959
0x1DB6	0xF2C0070F  MOVT	R7, #15
L_Init_ADC2:
0x1DBA	0x1E7F    SUBS	R7, R7, #1
0x1DBC	0xD1FD    BNE	L_Init_ADC2
0x1DBE	0xBF00    NOP
0x1DC0	0xBF00    NOP
0x1DC2	0xBF00    NOP
0x1DC4	0xBF00    NOP
0x1DC6	0xBF00    NOP
;FlightControl.c, 36 :: 		}
L_end_Init_ADC:
0x1DC8	0xF8DDE000  LDR	LR, [SP, #0]
0x1DCC	0xB001    ADD	SP, SP, #4
0x1DCE	0x4770    BX	LR
; end of _Init_ADC
_ADC_Set_Input_Channel:
;__Lib_ADC_123_32F10x_16ch.c, 41 :: 		
; input_mask start address is: 0 (R0)
0x1500	0xB081    SUB	SP, SP, #4
0x1502	0xF8CDE000  STR	LR, [SP, #0]
0x1506	0xFA1FF980  UXTH	R9, R0
; input_mask end address is: 0 (R0)
; input_mask start address is: 36 (R9)
;__Lib_ADC_123_32F10x_16ch.c, 42 :: 		
0x150A	0xF3C90100  UBFX	R1, R9, #0, #1
0x150E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel0
;__Lib_ADC_123_32F10x_16ch.c, 43 :: 		
0x1510	0xF2400101  MOVW	R1, #1
0x1514	0x484B    LDR	R0, [PC, #300]
0x1516	0xF7FFFBA5  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel0:
;__Lib_ADC_123_32F10x_16ch.c, 44 :: 		
0x151A	0xF3C90140  UBFX	R1, R9, #1, #1
0x151E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel1
;__Lib_ADC_123_32F10x_16ch.c, 45 :: 		
0x1520	0xF2400102  MOVW	R1, #2
0x1524	0x4847    LDR	R0, [PC, #284]
0x1526	0xF7FFFB9D  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel1:
;__Lib_ADC_123_32F10x_16ch.c, 46 :: 		
0x152A	0xF3C90180  UBFX	R1, R9, #2, #1
0x152E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel2
;__Lib_ADC_123_32F10x_16ch.c, 47 :: 		
0x1530	0xF2400104  MOVW	R1, #4
0x1534	0x4843    LDR	R0, [PC, #268]
0x1536	0xF7FFFB95  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel2:
;__Lib_ADC_123_32F10x_16ch.c, 48 :: 		
0x153A	0xF3C901C0  UBFX	R1, R9, #3, #1
0x153E	0xB121    CBZ	R1, L_ADC_Set_Input_Channel3
;__Lib_ADC_123_32F10x_16ch.c, 49 :: 		
0x1540	0xF2400108  MOVW	R1, #8
0x1544	0x483F    LDR	R0, [PC, #252]
0x1546	0xF7FFFB8D  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel3:
;__Lib_ADC_123_32F10x_16ch.c, 50 :: 		
0x154A	0xF3C91100  UBFX	R1, R9, #4, #1
0x154E	0xB149    CBZ	R1, L_ADC_Set_Input_Channel4
;__Lib_ADC_123_32F10x_16ch.c, 51 :: 		
0x1550	0xF2400110  MOVW	R1, #16
0x1554	0x483B    LDR	R0, [PC, #236]
0x1556	0xF7FFFB85  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 52 :: 		
0x155A	0xF2400140  MOVW	R1, #64
0x155E	0x483A    LDR	R0, [PC, #232]
0x1560	0xF7FFFB80  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 53 :: 		
L_ADC_Set_Input_Channel4:
;__Lib_ADC_123_32F10x_16ch.c, 54 :: 		
0x1564	0xF3C91140  UBFX	R1, R9, #5, #1
0x1568	0xB149    CBZ	R1, L_ADC_Set_Input_Channel5
;__Lib_ADC_123_32F10x_16ch.c, 55 :: 		
0x156A	0xF2400120  MOVW	R1, #32
0x156E	0x4835    LDR	R0, [PC, #212]
0x1570	0xF7FFFB78  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 56 :: 		
0x1574	0xF2400180  MOVW	R1, #128
0x1578	0x4833    LDR	R0, [PC, #204]
0x157A	0xF7FFFB73  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 57 :: 		
L_ADC_Set_Input_Channel5:
;__Lib_ADC_123_32F10x_16ch.c, 58 :: 		
0x157E	0xF3C91180  UBFX	R1, R9, #6, #1
0x1582	0xB149    CBZ	R1, L_ADC_Set_Input_Channel6
;__Lib_ADC_123_32F10x_16ch.c, 59 :: 		
0x1584	0xF2400140  MOVW	R1, #64
0x1588	0x482E    LDR	R0, [PC, #184]
0x158A	0xF7FFFB6B  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 60 :: 		
0x158E	0xF2401100  MOVW	R1, #256
0x1592	0x482D    LDR	R0, [PC, #180]
0x1594	0xF7FFFB66  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 61 :: 		
L_ADC_Set_Input_Channel6:
;__Lib_ADC_123_32F10x_16ch.c, 62 :: 		
0x1598	0xF3C911C0  UBFX	R1, R9, #7, #1
0x159C	0xB149    CBZ	R1, L_ADC_Set_Input_Channel7
;__Lib_ADC_123_32F10x_16ch.c, 63 :: 		
0x159E	0xF2400180  MOVW	R1, #128
0x15A2	0x4828    LDR	R0, [PC, #160]
0x15A4	0xF7FFFB5E  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 64 :: 		
0x15A8	0xF2402100  MOVW	R1, #512
0x15AC	0x4826    LDR	R0, [PC, #152]
0x15AE	0xF7FFFB59  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 65 :: 		
L_ADC_Set_Input_Channel7:
;__Lib_ADC_123_32F10x_16ch.c, 66 :: 		
0x15B2	0xF3C92100  UBFX	R1, R9, #8, #1
0x15B6	0xB149    CBZ	R1, L_ADC_Set_Input_Channel8
;__Lib_ADC_123_32F10x_16ch.c, 67 :: 		
0x15B8	0xF2400101  MOVW	R1, #1
0x15BC	0x4823    LDR	R0, [PC, #140]
0x15BE	0xF7FFFB51  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 68 :: 		
0x15C2	0xF2404100  MOVW	R1, #1024
0x15C6	0x4820    LDR	R0, [PC, #128]
0x15C8	0xF7FFFB4C  BL	_GPIO_Analog_Input+0
;__Lib_ADC_123_32F10x_16ch.c, 69 :: 		
L_ADC_Set_Input_Channel8:
;__Lib_ADC_123_32F10x_16ch.c, 70 :: 		
0x15CC	0xF3C92140  UBFX	R1, R9, #9, #1
0x15D0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel9
;__Lib_ADC_123_32F10x_16ch.c, 71 :: 		
0x15D2	0xF2400102  MOVW	R1, #2
0x15D6	0x481D    LDR	R0, [PC, #116]
0x15D8	0xF7FFFB44  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel9:
;__Lib_ADC_123_32F10x_16ch.c, 72 :: 		
0x15DC	0xF3C92180  UBFX	R1, R9, #10, #1
0x15E0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel10
;__Lib_ADC_123_32F10x_16ch.c, 73 :: 		
0x15E2	0xF2400101  MOVW	R1, #1
0x15E6	0x481A    LDR	R0, [PC, #104]
0x15E8	0xF7FFFB3C  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel10:
;__Lib_ADC_123_32F10x_16ch.c, 74 :: 		
0x15EC	0xF3C921C0  UBFX	R1, R9, #11, #1
0x15F0	0xB121    CBZ	R1, L_ADC_Set_Input_Channel11
;__Lib_ADC_123_32F10x_16ch.c, 75 :: 		
0x15F2	0xF2400102  MOVW	R1, #2
0x15F6	0x4816    LDR	R0, [PC, #88]
0x15F8	0xF7FFFB34  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel11:
;__Lib_ADC_123_32F10x_16ch.c, 76 :: 		
0x15FC	0xF3C93100  UBFX	R1, R9, #12, #1
0x1600	0xB121    CBZ	R1, L_ADC_Set_Input_Channel12
;__Lib_ADC_123_32F10x_16ch.c, 77 :: 		
0x1602	0xF2400104  MOVW	R1, #4
0x1606	0x4812    LDR	R0, [PC, #72]
0x1608	0xF7FFFB2C  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel12:
;__Lib_ADC_123_32F10x_16ch.c, 78 :: 		
0x160C	0xF3C93140  UBFX	R1, R9, #13, #1
0x1610	0xB121    CBZ	R1, L_ADC_Set_Input_Channel13
;__Lib_ADC_123_32F10x_16ch.c, 79 :: 		
0x1612	0xF2400108  MOVW	R1, #8
0x1616	0x480E    LDR	R0, [PC, #56]
0x1618	0xF7FFFB24  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel13:
;__Lib_ADC_123_32F10x_16ch.c, 80 :: 		
0x161C	0xF3C93180  UBFX	R1, R9, #14, #1
0x1620	0xB121    CBZ	R1, L_ADC_Set_Input_Channel14
;__Lib_ADC_123_32F10x_16ch.c, 81 :: 		
0x1622	0xF2400110  MOVW	R1, #16
0x1626	0x480A    LDR	R0, [PC, #40]
0x1628	0xF7FFFB1C  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel14:
;__Lib_ADC_123_32F10x_16ch.c, 82 :: 		
0x162C	0xF3C931C0  UBFX	R1, R9, #15, #1
; input_mask end address is: 36 (R9)
0x1630	0xB121    CBZ	R1, L_ADC_Set_Input_Channel15
;__Lib_ADC_123_32F10x_16ch.c, 83 :: 		
0x1632	0xF2400120  MOVW	R1, #32
0x1636	0x4806    LDR	R0, [PC, #24]
0x1638	0xF7FFFB14  BL	_GPIO_Analog_Input+0
L_ADC_Set_Input_Channel15:
;__Lib_ADC_123_32F10x_16ch.c, 84 :: 		
L_end_ADC_Set_Input_Channel:
0x163C	0xF8DDE000  LDR	LR, [SP, #0]
0x1640	0xB001    ADD	SP, SP, #4
0x1642	0x4770    BX	LR
0x1644	0x08004001  	GPIOA_BASE+0
0x1648	0x1C004001  	GPIOF_BASE+0
0x164C	0x0C004001  	GPIOB_BASE+0
0x1650	0x10004001  	GPIOC_BASE+0
; end of _ADC_Set_Input_Channel
_GPIO_Analog_Input:
;__Lib_GPIO_32F10x.c, 373 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0C64	0xB081    SUB	SP, SP, #4
0x0C66	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 374 :: 		
0x0C6A	0xF04F0201  MOV	R2, #1
0x0C6E	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0C70	0xF7FFFAA4  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 375 :: 		
L_end_GPIO_Analog_Input:
0x0C74	0xF8DDE000  LDR	LR, [SP, #0]
0x0C78	0xB001    ADD	SP, SP, #4
0x0C7A	0x4770    BX	LR
; end of _GPIO_Analog_Input
_ADC1_Init:
;__Lib_ADC_123_32F10x_16ch.c, 156 :: 		
0x18B8	0xB081    SUB	SP, SP, #4
0x18BA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_123_32F10x_16ch.c, 157 :: 		
0x18BE	0x4907    LDR	R1, [PC, #28]
0x18C0	0x4807    LDR	R0, [PC, #28]
0x18C2	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_123_32F10x_16ch.c, 159 :: 		
0x18C4	0x2101    MOVS	R1, #1
0x18C6	0xB249    SXTB	R1, R1
0x18C8	0x4806    LDR	R0, [PC, #24]
0x18CA	0x6001    STR	R1, [R0, #0]
;__Lib_ADC_123_32F10x_16ch.c, 161 :: 		
0x18CC	0x4806    LDR	R0, [PC, #24]
0x18CE	0xF7FEFF19  BL	__Lib_ADC_123_32F10x_16ch_ADCx_Init+0
;__Lib_ADC_123_32F10x_16ch.c, 194 :: 		
L_end_ADC1_Init:
0x18D2	0xF8DDE000  LDR	LR, [SP, #0]
0x18D6	0xB001    ADD	SP, SP, #4
0x18D8	0x4770    BX	LR
0x18DA	0xBF00    NOP
0x18DC	0x082D0000  	_ADC1_Get_Sample+0
0x18E0	0x016C2000  	_ADC_Get_Sample_Ptr+0
0x18E4	0x03244242  	RCC_APB2ENRbits+0
0x18E8	0x24004001  	ADC1_SR+0
; end of _ADC1_Init
__Lib_ADC_123_32F10x_16ch_ADCx_Init:
;__Lib_ADC_123_32F10x_16ch.c, 86 :: 		
; base start address is: 0 (R0)
0x0704	0xB081    SUB	SP, SP, #4
; base end address is: 0 (R0)
; base start address is: 0 (R0)
;__Lib_ADC_123_32F10x_16ch.c, 90 :: 		
0x0706	0x1D03    ADDS	R3, R0, #4
0x0708	0x681A    LDR	R2, [R3, #0]
0x070A	0x4946    LDR	R1, [PC, #280]
0x070C	0xEA020101  AND	R1, R2, R1, LSL #0
0x0710	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 92 :: 		
0x0712	0xF2000308  ADDW	R3, R0, #8
0x0716	0x681A    LDR	R2, [R3, #0]
0x0718	0x4943    LDR	R1, [PC, #268]
0x071A	0xEA020101  AND	R1, R2, R1, LSL #0
0x071E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 94 :: 		
0x0720	0x1D03    ADDS	R3, R0, #4
0x0722	0x2200    MOVS	R2, #0
0x0724	0x6819    LDR	R1, [R3, #0]
0x0726	0xF3624110  BFI	R1, R2, #16, #1
0x072A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 95 :: 		
0x072C	0x1D03    ADDS	R3, R0, #4
0x072E	0x2200    MOVS	R2, #0
0x0730	0x6819    LDR	R1, [R3, #0]
0x0732	0xF3624151  BFI	R1, R2, #17, #1
0x0736	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 96 :: 		
0x0738	0x1D03    ADDS	R3, R0, #4
0x073A	0x2200    MOVS	R2, #0
0x073C	0x6819    LDR	R1, [R3, #0]
0x073E	0xF3624192  BFI	R1, R2, #18, #1
0x0742	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 97 :: 		
0x0744	0x1D03    ADDS	R3, R0, #4
0x0746	0x2200    MOVS	R2, #0
0x0748	0x6819    LDR	R1, [R3, #0]
0x074A	0xF36241D3  BFI	R1, R2, #19, #1
0x074E	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 99 :: 		
0x0750	0x1D03    ADDS	R3, R0, #4
0x0752	0x2200    MOVS	R2, #0
0x0754	0x6819    LDR	R1, [R3, #0]
0x0756	0xF3622108  BFI	R1, R2, #8, #1
0x075A	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 102 :: 		
0x075C	0xF2000308  ADDW	R3, R0, #8
0x0760	0x2200    MOVS	R2, #0
0x0762	0x6819    LDR	R1, [R3, #0]
0x0764	0xF3620141  BFI	R1, R2, #1, #1
0x0768	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 104 :: 		
0x076A	0xF2000308  ADDW	R3, R0, #8
0x076E	0x2200    MOVS	R2, #0
0x0770	0x6819    LDR	R1, [R3, #0]
0x0772	0xF36221CB  BFI	R1, R2, #11, #1
0x0776	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 106 :: 		
0x0778	0xF2000308  ADDW	R3, R0, #8
0x077C	0x2201    MOVS	R2, #1
0x077E	0x6819    LDR	R1, [R3, #0]
0x0780	0xF3624151  BFI	R1, R2, #17, #1
0x0784	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 107 :: 		
0x0786	0xF2000308  ADDW	R3, R0, #8
0x078A	0x2201    MOVS	R2, #1
0x078C	0x6819    LDR	R1, [R3, #0]
0x078E	0xF3624192  BFI	R1, R2, #18, #1
0x0792	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 108 :: 		
0x0794	0xF2000308  ADDW	R3, R0, #8
0x0798	0x2201    MOVS	R2, #1
0x079A	0x6819    LDR	R1, [R3, #0]
0x079C	0xF36241D3  BFI	R1, R2, #19, #1
0x07A0	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 111 :: 		
0x07A2	0xF200032C  ADDW	R3, R0, #44
0x07A6	0x2200    MOVS	R2, #0
0x07A8	0x6819    LDR	R1, [R3, #0]
0x07AA	0xF3625114  BFI	R1, R2, #20, #1
0x07AE	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 112 :: 		
0x07B0	0xF200032C  ADDW	R3, R0, #44
0x07B4	0x2200    MOVS	R2, #0
0x07B6	0x6819    LDR	R1, [R3, #0]
0x07B8	0xF3625155  BFI	R1, R2, #21, #1
0x07BC	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 113 :: 		
0x07BE	0xF200032C  ADDW	R3, R0, #44
0x07C2	0x2200    MOVS	R2, #0
0x07C4	0x6819    LDR	R1, [R3, #0]
0x07C6	0xF3625196  BFI	R1, R2, #22, #1
0x07CA	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 114 :: 		
0x07CC	0xF200032C  ADDW	R3, R0, #44
0x07D0	0x2200    MOVS	R2, #0
0x07D2	0x6819    LDR	R1, [R3, #0]
0x07D4	0xF36251D7  BFI	R1, R2, #23, #1
0x07D8	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 120 :: 		
0x07DA	0xF2000308  ADDW	R3, R0, #8
0x07DE	0x2201    MOVS	R2, #1
0x07E0	0x6819    LDR	R1, [R3, #0]
0x07E2	0xF3620100  BFI	R1, R2, #0, #1
0x07E6	0x6019    STR	R1, [R3, #0]
;__Lib_ADC_123_32F10x_16ch.c, 123 :: 		
0x07E8	0xF2000308  ADDW	R3, R0, #8
0x07EC	0x2201    MOVS	R2, #1
0x07EE	0x6819    LDR	R1, [R3, #0]
0x07F0	0xF36201C3  BFI	R1, R2, #3, #1
0x07F4	0x6019    STR	R1, [R3, #0]
; base end address is: 0 (R0)
;__Lib_ADC_123_32F10x_16ch.c, 124 :: 		
L___Lib_ADC_123_32F10x_16ch_ADCx_Init16:
; base start address is: 0 (R0)
0x07F6	0xF2000108  ADDW	R1, R0, #8
0x07FA	0x680A    LDR	R2, [R1, #0]
0x07FC	0xF3C201C0  UBFX	R1, R2, #3, #1
0x0800	0xB101    CBZ	R1, L___Lib_ADC_123_32F10x_16ch_ADCx_Init17
0x0802	0xE7F8    B	L___Lib_ADC_123_32F10x_16ch_ADCx_Init16
L___Lib_ADC_123_32F10x_16ch_ADCx_Init17:
;__Lib_ADC_123_32F10x_16ch.c, 127 :: 		
0x0804	0xF2000308  ADDW	R3, R0, #8
0x0808	0x2201    MOVS	R2, #1
0x080A	0x6819    LDR	R1, [R3, #0]
0x080C	0xF3620182  BFI	R1, R2, #2, #1
0x0810	0x6019    STR	R1, [R3, #0]
; base end address is: 0 (R0)
;__Lib_ADC_123_32F10x_16ch.c, 128 :: 		
L___Lib_ADC_123_32F10x_16ch_ADCx_Init18:
; base start address is: 0 (R0)
0x0812	0xF2000108  ADDW	R1, R0, #8
0x0816	0x680A    LDR	R2, [R1, #0]
0x0818	0xF3C20180  UBFX	R1, R2, #2, #1
0x081C	0xB101    CBZ	R1, L___Lib_ADC_123_32F10x_16ch_ADCx_Init19
; base end address is: 0 (R0)
0x081E	0xE7F8    B	L___Lib_ADC_123_32F10x_16ch_ADCx_Init18
L___Lib_ADC_123_32F10x_16ch_ADCx_Init19:
;__Lib_ADC_123_32F10x_16ch.c, 130 :: 		
L_end_ADCx_Init:
0x0820	0xB001    ADD	SP, SP, #4
0x0822	0x4770    BX	LR
0x0824	0xFEFFFFF0  	#-983297
0x0828	0xF7FDFFF1  	#-919555
; end of __Lib_ADC_123_32F10x_16ch_ADCx_Init
_Init_Pwm:
;FlightControl.c, 38 :: 		void Init_Pwm(){
0x20B0	0xB083    SUB	SP, SP, #12
0x20B2	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 40 :: 		pwm_period1 = PWM_TIM3_Init(49);     //AUX channel(s) timer
0x20B6	0x2031    MOVS	R0, #49
0x20B8	0xF7FFFBF0  BL	_PWM_TIM3_Init+0
0x20BC	0xF7FFFC5C  BL	__UnsignedIntegralToFloat+0
0x20C0	0x4932    LDR	R1, [PC, #200]
0x20C2	0x6008    STR	R0, [R1, #0]
;FlightControl.c, 41 :: 		pwm_period2 = PWM_TIM2_Init(49);     //Throttle, Yaw, Pitch, Roll timer
0x20C4	0x2031    MOVS	R0, #49
0x20C6	0xF7FFF9EF  BL	_PWM_TIM2_Init+0
0x20CA	0xF7FFFC55  BL	__UnsignedIntegralToFloat+0
0x20CE	0x4930    LDR	R1, [PC, #192]
0x20D0	0x9101    STR	R1, [SP, #4]
0x20D2	0x6008    STR	R0, [R1, #0]
;FlightControl.c, 43 :: 		DC_time = (current_DC*pwm_period2)/100;       //Set Yaw, Pitch and Roll to mid stick
0x20D4	0x492F    LDR	R1, [PC, #188]
0x20D6	0x680A    LDR	R2, [R1, #0]
0x20D8	0xF7FFFC08  BL	__Mul_FP+0
0x20DC	0x4A2E    LDR	R2, [PC, #184]
0x20DE	0xF7FFFC85  BL	__Div_FP+0
0x20E2	0xF7FFFC5F  BL	__FloatToUnsignedIntegral+0
0x20E6	0xB280    UXTH	R0, R0
0x20E8	0x492C    LDR	R1, [PC, #176]
0x20EA	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 44 :: 		DC_time_2 = (current_DC_2*pwm_period2)/100;    //Set the duty cycle to very low - for initial THROTTLE settings
0x20EC	0x9801    LDR	R0, [SP, #4]
0x20EE	0x6802    LDR	R2, [R0, #0]
0x20F0	0x482B    LDR	R0, [PC, #172]
0x20F2	0x6800    LDR	R0, [R0, #0]
0x20F4	0xF7FFFBFA  BL	__Mul_FP+0
0x20F8	0x9002    STR	R0, [SP, #8]
0x20FA	0x4A27    LDR	R2, [PC, #156]
0x20FC	0xF7FFFC76  BL	__Div_FP+0
0x2100	0xF7FFFC50  BL	__FloatToUnsignedIntegral+0
0x2104	0xB280    UXTH	R0, R0
0x2106	0x4927    LDR	R1, [PC, #156]
0x2108	0x9101    STR	R1, [SP, #4]
0x210A	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 45 :: 		DC_time_3 = (current_DC_2*pwm_period2)/100;    //Set the duty cycle to very low for AUX1 - (channel 5)
0x210C	0x4A22    LDR	R2, [PC, #136]
0x210E	0x9802    LDR	R0, [SP, #8]
0x2110	0xF7FFFC6C  BL	__Div_FP+0
0x2114	0xF7FFFC46  BL	__FloatToUnsignedIntegral+0
0x2118	0xB280    UXTH	R0, R0
0x211A	0x4923    LDR	R1, [PC, #140]
0x211C	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 48 :: 		PWM_TIM2_Set_Duty(DC_time_2, _PWM_NON_INVERTED, _PWM_CHANNEL1);     //for THROTTLE
0x211E	0x9801    LDR	R0, [SP, #4]
0x2120	0x8800    LDRH	R0, [R0, #0]
0x2122	0x2200    MOVS	R2, #0
0x2124	0x2100    MOVS	R1, #0
0x2126	0xF7FFF9AF  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 49 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL2);       //for YAW
0x212A	0x481C    LDR	R0, [PC, #112]
0x212C	0x8800    LDRH	R0, [R0, #0]
0x212E	0x2201    MOVS	R2, #1
0x2130	0x2100    MOVS	R1, #0
0x2132	0xF7FFF9A9  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 50 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL3);       //for PITCH
0x2136	0x4819    LDR	R0, [PC, #100]
0x2138	0x8800    LDRH	R0, [R0, #0]
0x213A	0x2202    MOVS	R2, #2
0x213C	0x2100    MOVS	R1, #0
0x213E	0xF7FFF9A3  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 51 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL4);       //for ROLL
0x2142	0x4816    LDR	R0, [PC, #88]
0x2144	0x8800    LDRH	R0, [R0, #0]
0x2146	0x2203    MOVS	R2, #3
0x2148	0x2100    MOVS	R1, #0
0x214A	0xF7FFF99D  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 52 :: 		PWM_TIM3_Set_Duty(DC_time_3, _PWM_NON_INVERTED, _PWM_CHANNEL1);     //set AUX1 to low for gyro stabilization
0x214E	0x4816    LDR	R0, [PC, #88]
0x2150	0x8800    LDRH	R0, [R0, #0]
0x2152	0x2200    MOVS	R2, #0
0x2154	0x2100    MOVS	R1, #0
0x2156	0xF7FFF9C3  BL	_PWM_TIM3_Set_Duty+0
;FlightControl.c, 54 :: 		PWM_TIM2_Start(_PWM_CHANNEL1, &_GPIO_MODULE_TIM2_CH1_PA0);    //for THROTTLE
0x215A	0x4914    LDR	R1, [PC, #80]
0x215C	0x2000    MOVS	R0, #0
0x215E	0xF7FFF9B1  BL	_PWM_TIM2_Start+0
;FlightControl.c, 55 :: 		PWM_TIM2_Start(_PWM_CHANNEL2, &_GPIO_MODULE_TIM2_CH2_PA1);    //for YAW
0x2162	0x4913    LDR	R1, [PC, #76]
0x2164	0x2001    MOVS	R0, #1
0x2166	0xF7FFF9AD  BL	_PWM_TIM2_Start+0
;FlightControl.c, 56 :: 		PWM_TIM2_Start(_PWM_CHANNEL3, &_GPIO_MODULE_TIM2_CH3_PA2);    //for PITCH
0x216A	0x4912    LDR	R1, [PC, #72]
0x216C	0x2002    MOVS	R0, #2
0x216E	0xF7FFF9A9  BL	_PWM_TIM2_Start+0
;FlightControl.c, 57 :: 		PWM_TIM2_Start(_PWM_CHANNEL4, &_GPIO_MODULE_TIM2_CH4_PA3);    //for ROLL
0x2172	0x4911    LDR	R1, [PC, #68]
0x2174	0x2003    MOVS	R0, #3
0x2176	0xF7FFF9A5  BL	_PWM_TIM2_Start+0
;FlightControl.c, 58 :: 		PWM_TIM3_Start(_PWM_CHANNEL1, &_GPIO_MODULE_TIM3_CH1_PA6);    //set AUX1 to low for gyro stabilization
0x217A	0x4910    LDR	R1, [PC, #64]
0x217C	0x2000    MOVS	R0, #0
0x217E	0xF7FFFC87  BL	_PWM_TIM3_Start+0
;FlightControl.c, 59 :: 		}
L_end_Init_Pwm:
0x2182	0xF8DDE000  LDR	LR, [SP, #0]
0x2186	0xB003    ADD	SP, SP, #12
0x2188	0x4770    BX	LR
0x218A	0xBF00    NOP
0x218C	0x01642000  	_pwm_period1+0
0x2190	0x01602000  	_pwm_period2+0
0x2194	0x00082000  	_current_DC+0
0x2198	0x000042C8  	#1120403456
0x219C	0x015A2000  	_DC_time+0
0x21A0	0x00002000  	_current_DC_2+0
0x21A4	0x01682000  	_DC_time_2+0
0x21A8	0x016A2000  	_DC_time_3+0
0x21AC	0x27A00000  	__GPIO_MODULE_TIM2_CH1_PA0+0
0x21B0	0x280C0000  	__GPIO_MODULE_TIM2_CH2_PA1+0
0x21B4	0x28780000  	__GPIO_MODULE_TIM2_CH3_PA2+0
0x21B8	0x27340000  	__GPIO_MODULE_TIM2_CH4_PA3+0
0x21BC	0x265C0000  	__GPIO_MODULE_TIM3_CH1_PA6+0
; end of _Init_Pwm
_PWM_TIM3_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 234 :: 		
; freq_hz start address is: 0 (R0)
0x189C	0xB081    SUB	SP, SP, #4
0x189E	0xF8CDE000  STR	LR, [SP, #0]
; freq_hz end address is: 0 (R0)
; freq_hz start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 235 :: 		
0x18A2	0x4601    MOV	R1, R0
; freq_hz end address is: 0 (R0)
0x18A4	0x4803    LDR	R0, [PC, #12]
0x18A6	0xF7FEFFCF  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 236 :: 		
L_end_PWM_TIM3_Init:
0x18AA	0xF8DDE000  LDR	LR, [SP, #0]
0x18AE	0xB001    ADD	SP, SP, #4
0x18B0	0x4770    BX	LR
0x18B2	0xBF00    NOP
0x18B4	0x04004000  	TIM3_CR1+0
; end of _PWM_TIM3_Init
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 35 :: 		
; freq_hz start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0848	0xB081    SUB	SP, SP, #4
0x084A	0xF8CDE000  STR	LR, [SP, #0]
0x084E	0x460C    MOV	R4, R1
0x0850	0x4601    MOV	R1, R0
; freq_hz end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 4 (R1)
; freq_hz start address is: 16 (R4)
;__Lib_PWM_1234589_12_10_11_13_14.c, 39 :: 		
0x0852	0xF06F02FF  MVN	R2, #255
0x0856	0xEA010202  AND	R2, R1, R2, LSL #0
; _PWM_Base start address is: 0 (R0)
0x085A	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 41 :: 		
0x085C	0xE03B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0
; _PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 43 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2:
;__Lib_PWM_1234589_12_10_11_13_14.c, 44 :: 		
0x085E	0x2301    MOVS	R3, #1
0x0860	0xB25B    SXTB	R3, R3
0x0862	0x4A41    LDR	R2, [PC, #260]
0x0864	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 45 :: 		
0x0866	0xE05A    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 48 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3:
;__Lib_PWM_1234589_12_10_11_13_14.c, 49 :: 		
0x0868	0x2301    MOVS	R3, #1
0x086A	0xB25B    SXTB	R3, R3
0x086C	0x4A3F    LDR	R2, [PC, #252]
0x086E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 50 :: 		
0x0870	0xE055    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 53 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4:
;__Lib_PWM_1234589_12_10_11_13_14.c, 54 :: 		
0x0872	0x2301    MOVS	R3, #1
0x0874	0xB25B    SXTB	R3, R3
0x0876	0x4A3E    LDR	R2, [PC, #248]
0x0878	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 55 :: 		
0x087A	0xE050    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 58 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5:
;__Lib_PWM_1234589_12_10_11_13_14.c, 59 :: 		
0x087C	0x2301    MOVS	R3, #1
0x087E	0xB25B    SXTB	R3, R3
0x0880	0x4A3C    LDR	R2, [PC, #240]
0x0882	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 60 :: 		
0x0884	0xE04B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 63 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6:
;__Lib_PWM_1234589_12_10_11_13_14.c, 64 :: 		
0x0886	0x2301    MOVS	R3, #1
0x0888	0xB25B    SXTB	R3, R3
0x088A	0x4A3B    LDR	R2, [PC, #236]
0x088C	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 65 :: 		
0x088E	0xE046    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 68 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7:
;__Lib_PWM_1234589_12_10_11_13_14.c, 69 :: 		
0x0890	0x2301    MOVS	R3, #1
0x0892	0xB25B    SXTB	R3, R3
0x0894	0x4A39    LDR	R2, [PC, #228]
0x0896	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 70 :: 		
0x0898	0xE041    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 73 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8:
;__Lib_PWM_1234589_12_10_11_13_14.c, 74 :: 		
0x089A	0x2301    MOVS	R3, #1
0x089C	0xB25B    SXTB	R3, R3
0x089E	0x4A38    LDR	R2, [PC, #224]
0x08A0	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 75 :: 		
0x08A2	0xE03C    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 78 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9:
;__Lib_PWM_1234589_12_10_11_13_14.c, 79 :: 		
0x08A4	0x2301    MOVS	R3, #1
0x08A6	0xB25B    SXTB	R3, R3
0x08A8	0x4A36    LDR	R2, [PC, #216]
0x08AA	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 80 :: 		
0x08AC	0xE037    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 83 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10:
;__Lib_PWM_1234589_12_10_11_13_14.c, 84 :: 		
0x08AE	0x2301    MOVS	R3, #1
0x08B0	0xB25B    SXTB	R3, R3
0x08B2	0x4A35    LDR	R2, [PC, #212]
0x08B4	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 85 :: 		
0x08B6	0xE032    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 88 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11:
;__Lib_PWM_1234589_12_10_11_13_14.c, 89 :: 		
0x08B8	0x2301    MOVS	R3, #1
0x08BA	0xB25B    SXTB	R3, R3
0x08BC	0x4A33    LDR	R2, [PC, #204]
0x08BE	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 90 :: 		
0x08C0	0xE02D    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 93 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12:
;__Lib_PWM_1234589_12_10_11_13_14.c, 94 :: 		
0x08C2	0x2301    MOVS	R3, #1
0x08C4	0xB25B    SXTB	R3, R3
0x08C6	0x4A32    LDR	R2, [PC, #200]
0x08C8	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 95 :: 		
0x08CA	0xE028    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 98 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13:
;__Lib_PWM_1234589_12_10_11_13_14.c, 99 :: 		
0x08CC	0x2301    MOVS	R3, #1
0x08CE	0xB25B    SXTB	R3, R3
0x08D0	0x4A30    LDR	R2, [PC, #192]
0x08D2	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 100 :: 		
0x08D4	0xE023    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 102 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0:
; _PWM_Base start address is: 0 (R0)
0x08D6	0x4A30    LDR	R2, [PC, #192]
0x08D8	0x4290    CMP	R0, R2
0x08DA	0xD0C0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2
0x08DC	0xF1B04F80  CMP	R0, #1073741824
0x08E0	0xD0C2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3
0x08E2	0x4A2E    LDR	R2, [PC, #184]
0x08E4	0x4290    CMP	R0, R2
0x08E6	0xD0C4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4
0x08E8	0x4A2D    LDR	R2, [PC, #180]
0x08EA	0x4290    CMP	R0, R2
0x08EC	0xD0C6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5
0x08EE	0x4A2D    LDR	R2, [PC, #180]
0x08F0	0x4290    CMP	R0, R2
0x08F2	0xD0C8    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6
0x08F4	0x4A2C    LDR	R2, [PC, #176]
0x08F6	0x4290    CMP	R0, R2
0x08F8	0xD0CA    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7
0x08FA	0x4A2C    LDR	R2, [PC, #176]
0x08FC	0x4290    CMP	R0, R2
0x08FE	0xD0CC    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8
0x0900	0x4A2B    LDR	R2, [PC, #172]
0x0902	0x4290    CMP	R0, R2
0x0904	0xD0CE    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9
0x0906	0x4A2B    LDR	R2, [PC, #172]
0x0908	0x4290    CMP	R0, R2
0x090A	0xD0D0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10
0x090C	0x4A2A    LDR	R2, [PC, #168]
0x090E	0x4290    CMP	R0, R2
0x0910	0xD0D2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11
0x0912	0x4A2A    LDR	R2, [PC, #168]
0x0914	0x4290    CMP	R0, R2
0x0916	0xD0D4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12
0x0918	0x4A29    LDR	R2, [PC, #164]
0x091A	0x4290    CMP	R0, R2
0x091C	0xD0D6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13
; _PWM_Base end address is: 0 (R0)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1:
;__Lib_PWM_1234589_12_10_11_13_14.c, 104 :: 		
0x091E	0xF7FFFD53  BL	_Get_Fosc_kHz+0
; clk start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 106 :: 		
0x0922	0x680B    LDR	R3, [R1, #0]
0x0924	0xF06F0210  MVN	R2, #16
0x0928	0xEA030202  AND	R2, R3, R2, LSL #0
0x092C	0x600A    STR	R2, [R1, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 108 :: 		
0x092E	0xF24032E8  MOVW	R2, #1000
0x0932	0x4342    MULS	R2, R0, R2
; clk end address is: 0 (R0)
0x0934	0xFBB2F3F4  UDIV	R3, R2, R4
; freq_hz end address is: 16 (R4)
; per_reg start address is: 0 (R0)
0x0938	0x4618    MOV	R0, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 109 :: 		
0x093A	0xF64F72FF  MOVW	R2, #65535
0x093E	0xFBB3F2F2  UDIV	R2, R3, R2
; prescaler start address is: 16 (R4)
0x0942	0x4614    MOV	R4, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 110 :: 		
0x0944	0xF2010328  ADDW	R3, R1, #40
0x0948	0xB292    UXTH	R2, R2
0x094A	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 112 :: 		
0x094C	0x1C62    ADDS	R2, R4, #1
; prescaler end address is: 16 (R4)
0x094E	0xFBB0F2F2  UDIV	R2, R0, R2
0x0952	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 114 :: 		
0x0954	0xF201032C  ADDW	R3, R1, #44
; PWM_Base end address is: 4 (R1)
0x0958	0xB292    UXTH	R2, R2
0x095A	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 116 :: 		
0x095C	0xB280    UXTH	R0, R0
; per_reg end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 117 :: 		
L_end_PWM_TIMx_Init:
0x095E	0xF8DDE000  LDR	LR, [SP, #0]
0x0962	0xB001    ADD	SP, SP, #4
0x0964	0x4770    BX	LR
0x0966	0xBF00    NOP
0x0968	0x03004242  	RCC_APB2ENR+0
0x096C	0x03804242  	RCC_APB1ENR+0
0x0970	0x03844242  	RCC_APB1ENR+0
0x0974	0x03884242  	RCC_APB1ENR+0
0x0978	0x038C4242  	RCC_APB1ENR+0
0x097C	0x03044242  	RCC_APB2ENR+0
0x0980	0x03404242  	RCC_APB2ENR+0
0x0984	0x03444242  	RCC_APB2ENR+0
0x0988	0x03484242  	RCC_APB2ENR+0
0x098C	0x03984242  	RCC_APB1ENR+0
0x0990	0x039C4242  	RCC_APB1ENR+0
0x0994	0x03A04242  	RCC_APB1ENR+0
0x0998	0x00004001  	#1073807360
0x099C	0x04004000  	#1073742848
0x09A0	0x08004000  	#1073743872
0x09A4	0x0C004000  	#1073744896
0x09A8	0x04004001  	#1073808384
0x09AC	0x40004001  	#1073823744
0x09B0	0x44004001  	#1073824768
0x09B4	0x48004001  	#1073825792
0x09B8	0x18004001  	#1073813504
0x09BC	0x1C004000  	#1073748992
0x09C0	0x20004000  	#1073750016
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
_PWM_TIM2_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 214 :: 		
; freq_hz start address is: 0 (R0)
0x14A8	0xB081    SUB	SP, SP, #4
0x14AA	0xF8CDE000  STR	LR, [SP, #0]
; freq_hz end address is: 0 (R0)
; freq_hz start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 215 :: 		
0x14AE	0x4601    MOV	R1, R0
; freq_hz end address is: 0 (R0)
0x14B0	0x4803    LDR	R0, [PC, #12]
0x14B2	0xF7FFF9C9  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 216 :: 		
L_end_PWM_TIM2_Init:
0x14B6	0xF8DDE000  LDR	LR, [SP, #0]
0x14BA	0xB001    ADD	SP, SP, #4
0x14BC	0x4770    BX	LR
0x14BE	0xBF00    NOP
0x14C0	0x00004000  	TIM2_CR1+0
; end of _PWM_TIM2_Init
_PWM_TIM2_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 218 :: 		
; channel start address is: 8 (R2)
; inverted start address is: 4 (R1)
; duty_ratio start address is: 0 (R0)
0x1488	0xB081    SUB	SP, SP, #4
0x148A	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 8 (R2)
; inverted end address is: 4 (R1)
; duty_ratio end address is: 0 (R0)
; duty_ratio start address is: 0 (R0)
; inverted start address is: 4 (R1)
; channel start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 219 :: 		
0x148E	0xB2D3    UXTB	R3, R2
; channel end address is: 8 (R2)
0x1490	0xB2CA    UXTB	R2, R1
; inverted end address is: 4 (R1)
0x1492	0xB281    UXTH	R1, R0
; duty_ratio end address is: 0 (R0)
0x1494	0x4803    LDR	R0, [PC, #12]
0x1496	0xF7FFFBF1  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 220 :: 		
L_end_PWM_TIM2_Set_Duty:
0x149A	0xF8DDE000  LDR	LR, [SP, #0]
0x149E	0xB001    ADD	SP, SP, #4
0x14A0	0x4770    BX	LR
0x14A2	0xBF00    NOP
0x14A4	0x00004000  	TIM2_CR1+0
; end of _PWM_TIM2_Set_Duty
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 121 :: 		
; channel start address is: 12 (R3)
; inverted start address is: 8 (R2)
; duty_ratio start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0C7C	0xB081    SUB	SP, SP, #4
0x0C7E	0xB2D5    UXTB	R5, R2
; channel end address is: 12 (R3)
; inverted end address is: 8 (R2)
; duty_ratio end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; duty_ratio start address is: 4 (R1)
; inverted start address is: 20 (R5)
; channel start address is: 12 (R3)
;__Lib_PWM_1234589_12_10_11_13_14.c, 126 :: 		
0x0C80	0xF2000420  ADDW	R4, R0, #32
0x0C84	0x6822    LDR	R2, [R4, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 127 :: 		
0x0C86	0x2D01    CMP	R5, #1
0x0C88	0xD108    BNE	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14
; inverted end address is: 20 (R5)
;__Lib_PWM_1234589_12_10_11_13_14.c, 128 :: 		
0x0C8A	0x009C    LSLS	R4, R3, #2
0x0C8C	0xB224    SXTH	R4, R4
0x0C8E	0x1C65    ADDS	R5, R4, #1
0x0C90	0xB22D    SXTH	R5, R5
0x0C92	0xF04F0401  MOV	R4, #1
0x0C96	0x40AC    LSLS	R4, R5
0x0C98	0x4322    ORRS	R2, R4
0x0C9A	0xE008    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14:
;__Lib_PWM_1234589_12_10_11_13_14.c, 130 :: 		
0x0C9C	0x009C    LSLS	R4, R3, #2
0x0C9E	0xB224    SXTH	R4, R4
0x0CA0	0x1C65    ADDS	R5, R4, #1
0x0CA2	0xB22D    SXTH	R5, R5
0x0CA4	0xF04F0401  MOV	R4, #1
0x0CA8	0x40AC    LSLS	R4, R5
0x0CAA	0x43E4    MVN	R4, R4
0x0CAC	0x4022    ANDS	R2, R4
; tmpLong end address is: 8 (R2)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15:
;__Lib_PWM_1234589_12_10_11_13_14.c, 131 :: 		
; tmpLong start address is: 8 (R2)
0x0CAE	0xF2000420  ADDW	R4, R0, #32
0x0CB2	0x6022    STR	R2, [R4, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 134 :: 		
0x0CB4	0xF2000534  ADDW	R5, R0, #52
; PWM_Base end address is: 0 (R0)
0x0CB8	0x009C    LSLS	R4, R3, #2
; channel end address is: 12 (R3)
0x0CBA	0x192C    ADDS	R4, R5, R4
0x0CBC	0x6021    STR	R1, [R4, #0]
; duty_ratio end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 135 :: 		
L_end_PWM_TIMx_Set_Duty:
0x0CBE	0xB001    ADD	SP, SP, #4
0x0CC0	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
_PWM_TIM3_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 238 :: 		
; channel start address is: 8 (R2)
; inverted start address is: 4 (R1)
; duty_ratio start address is: 0 (R0)
0x14E0	0xB081    SUB	SP, SP, #4
0x14E2	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 8 (R2)
; inverted end address is: 4 (R1)
; duty_ratio end address is: 0 (R0)
; duty_ratio start address is: 0 (R0)
; inverted start address is: 4 (R1)
; channel start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 239 :: 		
0x14E6	0xB2D3    UXTB	R3, R2
; channel end address is: 8 (R2)
0x14E8	0xB2CA    UXTB	R2, R1
; inverted end address is: 4 (R1)
0x14EA	0xB281    UXTH	R1, R0
; duty_ratio end address is: 0 (R0)
0x14EC	0x4803    LDR	R0, [PC, #12]
0x14EE	0xF7FFFBC5  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 240 :: 		
L_end_PWM_TIM3_Set_Duty:
0x14F2	0xF8DDE000  LDR	LR, [SP, #0]
0x14F6	0xB001    ADD	SP, SP, #4
0x14F8	0x4770    BX	LR
0x14FA	0xBF00    NOP
0x14FC	0x04004000  	TIM3_CR1+0
; end of _PWM_TIM3_Set_Duty
_PWM_TIM2_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 222 :: 		
; module start address is: 4 (R1)
; channel start address is: 0 (R0)
0x14C4	0xB081    SUB	SP, SP, #4
0x14C6	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 223 :: 		
0x14CA	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x14CC	0xB2C1    UXTB	R1, R0
; channel end address is: 0 (R0)
0x14CE	0x4803    LDR	R0, [PC, #12]
0x14D0	0xF7FFFB5E  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 224 :: 		
L_end_PWM_TIM2_Start:
0x14D4	0xF8DDE000  LDR	LR, [SP, #0]
0x14D8	0xB001    ADD	SP, SP, #4
0x14DA	0x4770    BX	LR
0x14DC	0x00004000  	TIM2_CR1+0
; end of _PWM_TIM2_Start
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 139 :: 		
; module start address is: 8 (R2)
; channel start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0B90	0xB083    SUB	SP, SP, #12
0x0B92	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 8 (R2)
; channel end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; channel start address is: 4 (R1)
; module start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 142 :: 		
0x0B96	0xF88D1004  STRB	R1, [SP, #4]
; module end address is: 8 (R2)
0x0B9A	0x9002    STR	R0, [SP, #8]
0x0B9C	0x4610    MOV	R0, R2
0x0B9E	0xF7FFFF1B  BL	_GPIO_Alternate_Function_Enable+0
0x0BA2	0x9802    LDR	R0, [SP, #8]
0x0BA4	0xF89D1004  LDRB	R1, [SP, #4]
;__Lib_PWM_1234589_12_10_11_13_14.c, 145 :: 		
0x0BA8	0xF2000320  ADDW	R3, R0, #32
0x0BAC	0x681A    LDR	R2, [R3, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 146 :: 		
0x0BAE	0x008C    LSLS	R4, R1, #2
0x0BB0	0xB224    SXTH	R4, R4
0x0BB2	0xF04F0301  MOV	R3, #1
0x0BB6	0x40A3    LSLS	R3, R4
0x0BB8	0x431A    ORRS	R2, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 147 :: 		
0x0BBA	0xF2000320  ADDW	R3, R0, #32
0x0BBE	0x601A    STR	R2, [R3, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 150 :: 		
0x0BC0	0xF2000444  ADDW	R4, R0, #68
0x0BC4	0x6823    LDR	R3, [R4, #0]
0x0BC6	0xF4434300  ORR	R3, R3, #32768
0x0BCA	0x6023    STR	R3, [R4, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 152 :: 		
0x0BCC	0xF2000218  ADDW	R2, R0, #24
; tmpLongPtr start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
0x0BD0	0x2901    CMP	R1, #1
0x0BD2	0xD901    BLS	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
0x0BD4	0x1D12    ADDS	R2, R2, #4
; tmpLongPtr end address is: 8 (R2)
0x0BD6	0xE7FF    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19:
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16:
;__Lib_PWM_1234589_12_10_11_13_14.c, 157 :: 		
; tmpLongPtr start address is: 8 (R2)
0x0BD8	0x084B    LSRS	R3, R1, #1
0x0BDA	0xB2DB    UXTB	R3, R3
0x0BDC	0x005B    LSLS	R3, R3, #1
0x0BDE	0xB21B    SXTH	R3, R3
0x0BE0	0x428B    CMP	R3, R1
0x0BE2	0xD00A    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17
; channel end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 159 :: 		
0x0BE4	0x6814    LDR	R4, [R2, #0]
0x0BE6	0xF46F53D8  MVN	R3, #6912
0x0BEA	0xEA040303  AND	R3, R4, R3, LSL #0
0x0BEE	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 161 :: 		
0x0BF0	0x6813    LDR	R3, [R2, #0]
0x0BF2	0xF44343C0  ORR	R3, R3, #24576
0x0BF6	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 162 :: 		
0x0BF8	0xE009    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17:
;__Lib_PWM_1234589_12_10_11_13_14.c, 165 :: 		
; tmpLongPtr start address is: 8 (R2)
0x0BFA	0x6814    LDR	R4, [R2, #0]
0x0BFC	0xF06F031B  MVN	R3, #27
0x0C00	0xEA040303  AND	R3, R4, R3, LSL #0
0x0C04	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 167 :: 		
0x0C06	0x6813    LDR	R3, [R2, #0]
0x0C08	0xF0430360  ORR	R3, R3, #96
0x0C0C	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 168 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18:
;__Lib_PWM_1234589_12_10_11_13_14.c, 171 :: 		
0x0C0E	0x6803    LDR	R3, [R0, #0]
0x0C10	0xF0430301  ORR	R3, R3, #1
0x0C14	0x6003    STR	R3, [R0, #0]
; PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 172 :: 		
L_end_PWM_TIMx_Start:
0x0C16	0xF8DDE000  LDR	LR, [SP, #0]
0x0C1A	0xB003    ADD	SP, SP, #12
0x0C1C	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
_PWM_TIM3_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 242 :: 		
; module start address is: 4 (R1)
; channel start address is: 0 (R0)
0x1A90	0xB081    SUB	SP, SP, #4
0x1A92	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 243 :: 		
0x1A96	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1A98	0xB2C1    UXTB	R1, R0
; channel end address is: 0 (R0)
0x1A9A	0x4803    LDR	R0, [PC, #12]
0x1A9C	0xF7FFF878  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 244 :: 		
L_end_PWM_TIM3_Start:
0x1AA0	0xF8DDE000  LDR	LR, [SP, #0]
0x1AA4	0xB001    ADD	SP, SP, #4
0x1AA6	0x4770    BX	LR
0x1AA8	0x04004000  	TIM3_CR1+0
; end of _PWM_TIM3_Start
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1978	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x197A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x197C	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x197E	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1980	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x1982	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x1986	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x1988	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x198A	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x198C	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x198E	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x1990	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x1992	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x1994	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x1996	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x1998	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x199C	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x19A0	0xB001    ADD	SP, SP, #4
0x19A2	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x18EC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x18EE	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x18F0	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x18F4	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x18F6	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x18FA	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x18FE	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x1902	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x1906	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x1908	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x190A	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x190E	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x1912	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x1914	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x1916	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x1918	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x191C	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x1920	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x1922	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x1924	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x1928	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x192C	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x192E	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x1930	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x1932	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x1934	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x1938	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x193A	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x193C	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x193E	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x1940	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x1942	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x1944	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x1946	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x1948	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x194A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x194C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x1950	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x1952	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x1954	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x1956	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x195A	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x195E	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x1962	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x1964	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x1966	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x1968	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x196A	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x196E	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x1972	0xB001    ADD	SP, SP, #4
0x1974	0x4770    BX	LR
; end of __Mul_FP
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x19EC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x19EE	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x19F0	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x19F4	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x19F6	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x19FA	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x19FE	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x1A00	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x1A02	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x1A04	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x1A06	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x1A0A	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x1A0E	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x1A10	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x1A12	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x1A14	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x1A18	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x1A1C	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x1A20	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x1A22	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x1A26	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x1A2A	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x1A2C	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x1A2E	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x1A30	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x1A32	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x1A34	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x1A36	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x1A38	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x1A3A	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x1A3C	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x1A3E	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x1A42	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x1A44	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x1A46	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x1A48	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x1A4A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x1A4C	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x1A4E	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1A50	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x1A52	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x1A54	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x1A58	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x1A5A	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x1A5C	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x1A60	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x1A62	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x1A64	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x1A66	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x1A68	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x1A6A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x1A6C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x1A70	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x1A72	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x1A74	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x1A76	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x1A78	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x1A7C	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x1A7E	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x1A80	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x1A82	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x1A84	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x1A88	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x1A8C	0xB001    ADD	SP, SP, #4
0x1A8E	0x4770    BX	LR
; end of __Div_FP
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 45 :: 		
0x19A4	0xB081    SUB	SP, SP, #4
0x19A6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 47 :: 		
0x19AA	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 49 :: 		
0x19AC	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 50 :: 		
0x19AE	0xD502    BPL	__me_label_pos
;__Lib_MathDouble.c, 51 :: 		
0x19B0	0xF7FFF936  BL	__FloatToSignedIntegral+0
;__Lib_MathDouble.c, 52 :: 		
0x19B4	0xE013    B	__me_endLab
;__Lib_MathDouble.c, 55 :: 		
__me_label_pos:
0x19B6	0xEA4F0140  LSL	R1, R0, #1
;__Lib_MathDouble.c, 56 :: 		
0x19BA	0xEA4F6111  LSR	R1, R1, #24
;__Lib_MathDouble.c, 58 :: 		
0x19BE	0x397F    SUBS	R1, #127
;__Lib_MathDouble.c, 59 :: 		
0x19C0	0xBF3C    ITT	CC
;__Lib_MathDouble.c, 60 :: 		
0x19C2	0xF04F0000  MOVCC	R0, #0
;__Lib_MathDouble.c, 62 :: 		
0x19C6	0xE00A    BCC	__me_endLab
;__Lib_MathDouble.c, 64 :: 		
0x19C8	0xF1D1011F  RSBS	R1, R1, #31
;__Lib_MathDouble.c, 65 :: 		
0x19CC	0xD305    BCC	__me_ovfl
;__Lib_MathDouble.c, 67 :: 		
0x19CE	0xEA4F2000  LSL	R0, R0, #8
;__Lib_MathDouble.c, 68 :: 		
0x19D2	0xF0404000  ORR	R0, R0, #-2147483648
;__Lib_MathDouble.c, 70 :: 		
0x19D6	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 73 :: 		
0x19D8	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 75 :: 		
__me_ovfl:
0x19DA	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 76 :: 		
0x19DC	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 78 :: 		
__me_endLab:
;__Lib_MathDouble.c, 79 :: 		
0x19DE	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 82 :: 		
L_end__FloatToUnsignedIntegral:
0x19E2	0xF8DDE000  LDR	LR, [SP, #0]
0x19E6	0xB001    ADD	SP, SP, #4
0x19E8	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0C20	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x0C22	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x0C24	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0C28	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0C2C	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0C2E	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0C30	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x0C34	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x0C36	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0C3A	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0C3C	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0C40	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x0C44	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x0C46	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0C48	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0C4A	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0C4C	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0C4E	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0C50	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x0C52	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x0C56	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0C58	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0C5A	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0C5E	0xB001    ADD	SP, SP, #4
0x0C60	0x4770    BX	LR
; end of __FloatToSignedIntegral
_Init_LED:
;FlightControl.c, 23 :: 		void Init_LED(){
0x1AD8	0xB081    SUB	SP, SP, #4
0x1ADA	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 24 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_8 | _GPIO_PINMASK_9); // Set PORTC as digital output
0x1ADE	0xF2403100  MOVW	R1, #768
0x1AE2	0x480E    LDR	R0, [PC, #56]
0x1AE4	0xF7FFF92E  BL	_GPIO_Digital_Output+0
;FlightControl.c, 25 :: 		GPIOC_ODR.B8 = 0;
0x1AE8	0x2100    MOVS	R1, #0
0x1AEA	0xB249    SXTB	R1, R1
0x1AEC	0x480C    LDR	R0, [PC, #48]
0x1AEE	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 26 :: 		GPIOC_ODR.B9 = 0;
0x1AF0	0x480C    LDR	R0, [PC, #48]
0x1AF2	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 27 :: 		Delay_ms(250);
0x1AF4	0xF242579F  MOVW	R7, #9631
0x1AF8	0xF2C00726  MOVT	R7, #38
0x1AFC	0xBF00    NOP
0x1AFE	0xBF00    NOP
L_Init_LED0:
0x1B00	0x1E7F    SUBS	R7, R7, #1
0x1B02	0xD1FD    BNE	L_Init_LED0
0x1B04	0xBF00    NOP
0x1B06	0xBF00    NOP
0x1B08	0xBF00    NOP
;FlightControl.c, 28 :: 		GPIOC_ODR.B8 = 1;
0x1B0A	0x2101    MOVS	R1, #1
0x1B0C	0xB249    SXTB	R1, R1
0x1B0E	0x4804    LDR	R0, [PC, #16]
0x1B10	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 29 :: 		}
L_end_Init_LED:
0x1B12	0xF8DDE000  LDR	LR, [SP, #0]
0x1B16	0xB001    ADD	SP, SP, #4
0x1B18	0x4770    BX	LR
0x1B1A	0xBF00    NOP
0x1B1C	0x10004001  	GPIOC_BASE+0
0x1B20	0x01A04222  	GPIOC_ODR+0
0x1B24	0x01A44222  	GPIOC_ODR+0
; end of _Init_LED
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0D44	0xB081    SUB	SP, SP, #4
0x0D46	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x0D4A	0x4A04    LDR	R2, [PC, #16]
0x0D4C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0D4E	0xF7FFFA35  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x0D52	0xF8DDE000  LDR	LR, [SP, #0]
0x0D56	0xB001    ADD	SP, SP, #4
0x0D58	0x4770    BX	LR
0x0D5A	0xBF00    NOP
0x0D5C	0x00140008  	#524308
; end of _GPIO_Digital_Output
_mainTestingThread:
;main.c, 49 :: 		void mainTestingThread()
0x21C0	0xB081    SUB	SP, SP, #4
0x21C2	0xF8CDE000  STR	LR, [SP, #0]
;main.c, 56 :: 		UARTSendString("Delay for GPS Signal.");
0x21C6	0x482B    LDR	R0, [PC, #172]
0x21C8	0xF7FFFED0  BL	_UARTSendString+0
;main.c, 57 :: 		Delay_ms(10000);
0x21CC	0xF24E07FF  MOVW	R7, #57599
0x21D0	0xF2C057F5  MOVT	R7, #1525
0x21D4	0xBF00    NOP
0x21D6	0xBF00    NOP
L_mainTestingThread0:
0x21D8	0x1E7F    SUBS	R7, R7, #1
0x21DA	0xD1FD    BNE	L_mainTestingThread0
0x21DC	0xBF00    NOP
0x21DE	0xBF00    NOP
0x21E0	0xBF00    NOP
;main.c, 58 :: 		UARTSendString("Starting test10.");
0x21E2	0x4825    LDR	R0, [PC, #148]
0x21E4	0xF7FFFEC2  BL	_UARTSendString+0
;main.c, 60 :: 		StabilizeMode();  //Set to Stabilize mode for takeoff (Only needed for loop mode - the StabilizeMode() above will place the quad in correct mode for arming
0x21E8	0xF7FFFEE0  BL	_StabilizeMode+0
;main.c, 61 :: 		Delay_ms(500);
0x21EC	0xF644373F  MOVW	R7, #19263
0x21F0	0xF2C0074C  MOVT	R7, #76
0x21F4	0xBF00    NOP
0x21F6	0xBF00    NOP
L_mainTestingThread2:
0x21F8	0x1E7F    SUBS	R7, R7, #1
0x21FA	0xD1FD    BNE	L_mainTestingThread2
0x21FC	0xBF00    NOP
0x21FE	0xBF00    NOP
0x2200	0xBF00    NOP
;main.c, 62 :: 		Arm();            //Arm the quad rotors
0x2202	0xF7FFFEF5  BL	_Arm+0
;main.c, 63 :: 		success = TakeOff();
0x2206	0xF7FFFDE3  BL	_TakeOff+0
;main.c, 65 :: 		if(success == true)
0x220A	0xB980    CBNZ	R0, L_mainTestingThread4
;main.c, 67 :: 		LoiterMode();
0x220C	0xF7FFFC8C  BL	_LoiterMode+0
;main.c, 68 :: 		Stabilize_Alt();
0x2210	0xF7FFFCAC  BL	_Stabilize_Alt+0
;main.c, 69 :: 		LoiterMode();
0x2214	0xF7FFFC88  BL	_LoiterMode+0
;main.c, 70 :: 		Delay_ms(10000);
0x2218	0xF24E07FF  MOVW	R7, #57599
0x221C	0xF2C057F5  MOVT	R7, #1525
L_mainTestingThread5:
0x2220	0x1E7F    SUBS	R7, R7, #1
0x2222	0xD1FD    BNE	L_mainTestingThread5
0x2224	0xBF00    NOP
0x2226	0xBF00    NOP
0x2228	0xBF00    NOP
0x222A	0xBF00    NOP
0x222C	0xBF00    NOP
;main.c, 108 :: 		}
L_mainTestingThread4:
;main.c, 109 :: 		UARTSendString("Returning to base.");
0x222E	0x4813    LDR	R0, [PC, #76]
0x2230	0xF7FFFE9C  BL	_UARTSendString+0
;main.c, 110 :: 		LandingMode();
0x2234	0xF7FFFD3A  BL	_LandingMode+0
;main.c, 111 :: 		Delay_ms(20000);
0x2238	0xF24C17FF  MOVW	R7, #49663
0x223C	0xF6C037EB  MOVT	R7, #3051
L_mainTestingThread7:
0x2240	0x1E7F    SUBS	R7, R7, #1
0x2242	0xD1FD    BNE	L_mainTestingThread7
0x2244	0xBF00    NOP
0x2246	0xBF00    NOP
0x2248	0xBF00    NOP
0x224A	0xBF00    NOP
0x224C	0xBF00    NOP
;main.c, 112 :: 		DisArm();
0x224E	0xF7FFFD4F  BL	_DisArm+0
;main.c, 114 :: 		while(1)
L_mainTestingThread9:
;main.c, 116 :: 		Delay_ms(500);
0x2252	0xF644373F  MOVW	R7, #19263
0x2256	0xF2C0074C  MOVT	R7, #76
L_mainTestingThread11:
0x225A	0x1E7F    SUBS	R7, R7, #1
0x225C	0xD1FD    BNE	L_mainTestingThread11
0x225E	0xBF00    NOP
0x2260	0xBF00    NOP
0x2262	0xBF00    NOP
0x2264	0xBF00    NOP
0x2266	0xBF00    NOP
;main.c, 117 :: 		}
0x2268	0xE7F3    B	L_mainTestingThread9
;main.c, 118 :: 		}
L_end_mainTestingThread:
0x226A	0xF8DDE000  LDR	LR, [SP, #0]
0x226E	0xB001    ADD	SP, SP, #4
0x2270	0x4770    BX	LR
0x2272	0xBF00    NOP
0x2274	0x01202000  	?lstr1_main+0
0x2278	0x01362000  	?lstr2_main+0
0x227C	0x01472000  	?lstr3_main+0
; end of _mainTestingThread
_UARTSendString:
;UART.c, 9 :: 		void UARTSendString(uint8 * stringToSend)
; stringToSend start address is: 0 (R0)
0x1F6C	0xB081    SUB	SP, SP, #4
0x1F6E	0xF8CDE000  STR	LR, [SP, #0]
0x1F72	0x4605    MOV	R5, R0
; stringToSend end address is: 0 (R0)
; stringToSend start address is: 20 (R5)
;UART.c, 11 :: 		UART_Set_Active(&UART1_Read, &UART1_Write, &UART1_Data_Ready, &UART1_Tx_Idle); // set UART1 active
0x1F74	0x4B09    LDR	R3, [PC, #36]
0x1F76	0x4A0A    LDR	R2, [PC, #40]
0x1F78	0x490A    LDR	R1, [PC, #40]
0x1F7A	0x480B    LDR	R0, [PC, #44]
0x1F7C	0xF7FEFEF0  BL	_UART_Set_Active+0
;UART.c, 12 :: 		UART1_Write_Text(stringToSend);
0x1F80	0x4628    MOV	R0, R5
; stringToSend end address is: 20 (R5)
0x1F82	0xF7FEFF01  BL	_UART1_Write_Text+0
;UART.c, 13 :: 		UART1_Write(13);                             // put cursor back at left
0x1F86	0x200D    MOVS	R0, #13
0x1F88	0xF7FFF9A6  BL	_UART1_Write+0
;UART.c, 14 :: 		UART1_Write(10);                             // newline
0x1F8C	0x200A    MOVS	R0, #10
0x1F8E	0xF7FFF9A3  BL	_UART1_Write+0
;UART.c, 15 :: 		}
L_end_UARTSendString:
0x1F92	0xF8DDE000  LDR	LR, [SP, #0]
0x1F96	0xB001    ADD	SP, SP, #4
0x1F98	0x4770    BX	LR
0x1F9A	0xBF00    NOP
0x1F9C	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x1FA0	0xFFFFFFFF  	_UART1_Data_Ready+0
0x1FA4	0x12D90000  	_UART1_Write+0
0x1FA8	0xFFFFFFFF  	_UART1_Read+0
; end of _UARTSendString
_UART_Set_Active:
;__Lib_UART_123_45.c, 424 :: 		
; tx_idle_ptr start address is: 12 (R3)
; ready_ptr start address is: 8 (R2)
; write_ptr start address is: 4 (R1)
; read_ptr start address is: 0 (R0)
0x0D60	0xB081    SUB	SP, SP, #4
; tx_idle_ptr end address is: 12 (R3)
; ready_ptr end address is: 8 (R2)
; write_ptr end address is: 4 (R1)
; read_ptr end address is: 0 (R0)
; read_ptr start address is: 0 (R0)
; write_ptr start address is: 4 (R1)
; ready_ptr start address is: 8 (R2)
; tx_idle_ptr start address is: 12 (R3)
;__Lib_UART_123_45.c, 425 :: 		
0x0D62	0x4C05    LDR	R4, [PC, #20]
0x0D64	0x6020    STR	R0, [R4, #0]
; read_ptr end address is: 0 (R0)
;__Lib_UART_123_45.c, 426 :: 		
0x0D66	0x4C05    LDR	R4, [PC, #20]
0x0D68	0x6021    STR	R1, [R4, #0]
; write_ptr end address is: 4 (R1)
;__Lib_UART_123_45.c, 427 :: 		
0x0D6A	0x4C05    LDR	R4, [PC, #20]
0x0D6C	0x6022    STR	R2, [R4, #0]
; ready_ptr end address is: 8 (R2)
;__Lib_UART_123_45.c, 428 :: 		
0x0D6E	0x4C05    LDR	R4, [PC, #20]
0x0D70	0x6023    STR	R3, [R4, #0]
; tx_idle_ptr end address is: 12 (R3)
;__Lib_UART_123_45.c, 429 :: 		
L_end_UART_Set_Active:
0x0D72	0xB001    ADD	SP, SP, #4
0x0D74	0x4770    BX	LR
0x0D76	0xBF00    NOP
0x0D78	0x01742000  	_UART_Rd_Ptr+0
0x0D7C	0x01782000  	_UART_Wr_Ptr+0
0x0D80	0x017C2000  	_UART_Rdy_Ptr+0
0x0D84	0x01802000  	_UART_Tx_Idle_Ptr+0
; end of _UART_Set_Active
_UART1_Write_Text:
;__Lib_UART_123_45.c, 75 :: 		
; uart_text start address is: 0 (R0)
0x0D88	0xB081    SUB	SP, SP, #4
0x0D8A	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45.c, 76 :: 		
0x0D8E	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x0D90	0x4803    LDR	R0, [PC, #12]
0x0D92	0xF7FFFC9D  BL	__Lib_UART_123_45_UARTx_Write_Text+0
;__Lib_UART_123_45.c, 77 :: 		
L_end_UART1_Write_Text:
0x0D96	0xF8DDE000  LDR	LR, [SP, #0]
0x0D9A	0xB001    ADD	SP, SP, #4
0x0D9C	0x4770    BX	LR
0x0D9E	0xBF00    NOP
0x0DA0	0x38004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_UARTx_Write_Text:
;__Lib_UART_123_45.c, 64 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x06D0	0xB081    SUB	SP, SP, #4
0x06D2	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45.c, 65 :: 		
; counter start address is: 24 (R6)
0x06D6	0x2600    MOVS	R6, #0
;__Lib_UART_123_45.c, 67 :: 		
0x06D8	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x06DA	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x06DC	0x4605    MOV	R5, R0
0x06DE	0xB2D8    UXTB	R0, R3
0x06E0	0x460C    MOV	R4, R1
;__Lib_UART_123_45.c, 68 :: 		
L___Lib_UART_123_45_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x06E2	0xB150    CBZ	R0, L___Lib_UART_123_45_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45.c, 69 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x06E4	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x06E6	0x4628    MOV	R0, R5
0x06E8	0xF7FFFEC0  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 70 :: 		
0x06EC	0x1C72    ADDS	R2, R6, #1
0x06EE	0xB2D2    UXTB	R2, R2
0x06F0	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45.c, 71 :: 		
0x06F2	0x18A2    ADDS	R2, R4, R2
0x06F4	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x06F6	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45.c, 72 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x06F8	0xE7F3    B	L___Lib_UART_123_45_UARTx_Write_Text2
L___Lib_UART_123_45_UARTx_Write_Text3:
;__Lib_UART_123_45.c, 73 :: 		
L_end_UARTx_Write_Text:
0x06FA	0xF8DDE000  LDR	LR, [SP, #0]
0x06FE	0xB001    ADD	SP, SP, #4
0x0700	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write_Text
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x046C	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x046E	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0472	0x4601    MOV	R1, R0
0x0474	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0478	0x680B    LDR	R3, [R1, #0]
0x047A	0xF3C312C0  UBFX	R2, R3, #7, #1
0x047E	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x0480	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x0482	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0484	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x0486	0xB001    ADD	SP, SP, #4
0x0488	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x12D8	0xB081    SUB	SP, SP, #4
0x12DA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x12DE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x12E0	0x4803    LDR	R0, [PC, #12]
0x12E2	0xF7FFF8C3  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x12E6	0xF8DDE000  LDR	LR, [SP, #0]
0x12EA	0xB001    ADD	SP, SP, #4
0x12EC	0x4770    BX	LR
0x12EE	0xBF00    NOP
0x12F0	0x38004001  	USART1_SR+0
; end of _UART1_Write
_StabilizeMode:
;FlightControl.c, 156 :: 		void StabilizeMode(){
0x1FAC	0xB081    SUB	SP, SP, #4
0x1FAE	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 157 :: 		DC_time = (current_DC_3*pwm_period2)/100;
0x1FB2	0x480B    LDR	R0, [PC, #44]
0x1FB4	0x6802    LDR	R2, [R0, #0]
0x1FB6	0x480B    LDR	R0, [PC, #44]
0x1FB8	0x6800    LDR	R0, [R0, #0]
0x1FBA	0xF7FFFC97  BL	__Mul_FP+0
0x1FBE	0x4A0A    LDR	R2, [PC, #40]
0x1FC0	0xF7FFFD14  BL	__Div_FP+0
0x1FC4	0xF7FFFCEE  BL	__FloatToUnsignedIntegral+0
0x1FC8	0xB280    UXTH	R0, R0
0x1FCA	0x4908    LDR	R1, [PC, #32]
0x1FCC	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 158 :: 		PWM_TIM3_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x1FCE	0x2200    MOVS	R2, #0
0x1FD0	0x2100    MOVS	R1, #0
0x1FD2	0xF7FFFA85  BL	_PWM_TIM3_Set_Duty+0
;FlightControl.c, 159 :: 		}
L_end_StabilizeMode:
0x1FD6	0xF8DDE000  LDR	LR, [SP, #0]
0x1FDA	0xB001    ADD	SP, SP, #4
0x1FDC	0x4770    BX	LR
0x1FDE	0xBF00    NOP
0x1FE0	0x01602000  	_pwm_period2+0
0x1FE4	0x00042000  	_current_DC_3+0
0x1FE8	0x000042C8  	#1120403456
0x1FEC	0x015A2000  	_DC_time+0
; end of _StabilizeMode
_Arm:
;FlightControl.c, 61 :: 		void Arm(){
0x1FF0	0xB081    SUB	SP, SP, #4
0x1FF2	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 63 :: 		DC_time = (current_DC_2*pwm_period2)/100;
0x1FF6	0x4828    LDR	R0, [PC, #160]
0x1FF8	0x6802    LDR	R2, [R0, #0]
0x1FFA	0x4828    LDR	R0, [PC, #160]
0x1FFC	0x6800    LDR	R0, [R0, #0]
0x1FFE	0xF7FFFC75  BL	__Mul_FP+0
0x2002	0x4A27    LDR	R2, [PC, #156]
0x2004	0xF7FFFCF2  BL	__Div_FP+0
0x2008	0xF7FFFCCC  BL	__FloatToUnsignedIntegral+0
0x200C	0xB280    UXTH	R0, R0
0x200E	0x4925    LDR	R1, [PC, #148]
0x2010	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 64 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);   //for THROTTLE
0x2012	0x2200    MOVS	R2, #0
0x2014	0x2100    MOVS	R1, #0
0x2016	0xF7FFFA37  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 67 :: 		DC_time = (current_DC_4*pwm_period2)/100;
0x201A	0x481F    LDR	R0, [PC, #124]
0x201C	0x6802    LDR	R2, [R0, #0]
0x201E	0x4822    LDR	R0, [PC, #136]
0x2020	0x6800    LDR	R0, [R0, #0]
0x2022	0xF7FFFC63  BL	__Mul_FP+0
0x2026	0x4A1E    LDR	R2, [PC, #120]
0x2028	0xF7FFFCE0  BL	__Div_FP+0
0x202C	0xF7FFFCBA  BL	__FloatToUnsignedIntegral+0
0x2030	0xB280    UXTH	R0, R0
0x2032	0x491C    LDR	R1, [PC, #112]
0x2034	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 68 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL2);   //for YAW
0x2036	0x2201    MOVS	R2, #1
0x2038	0x2100    MOVS	R1, #0
0x203A	0xF7FFFA25  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 69 :: 		delay_ms(5000);  //Delay for Arducopter to notice 'ARM motors' command  (~2500ms is the smallest amount I found to work) however Arducopter says 5000ms
0x203E	0xF24F077F  MOVW	R7, #61567
0x2042	0xF2C027FA  MOVT	R7, #762
0x2046	0xBF00    NOP
0x2048	0xBF00    NOP
L_Arm4:
0x204A	0x1E7F    SUBS	R7, R7, #1
0x204C	0xD1FD    BNE	L_Arm4
0x204E	0xBF00    NOP
0x2050	0xBF00    NOP
0x2052	0xBF00    NOP
;FlightControl.c, 71 :: 		DC_time = (current_DC*pwm_period2)/100;
0x2054	0x4810    LDR	R0, [PC, #64]
0x2056	0x6802    LDR	R2, [R0, #0]
0x2058	0x4814    LDR	R0, [PC, #80]
0x205A	0x6800    LDR	R0, [R0, #0]
0x205C	0xF7FFFC46  BL	__Mul_FP+0
0x2060	0x4A0F    LDR	R2, [PC, #60]
0x2062	0xF7FFFCC3  BL	__Div_FP+0
0x2066	0xF7FFFC9D  BL	__FloatToUnsignedIntegral+0
0x206A	0xB280    UXTH	R0, R0
0x206C	0x490D    LDR	R1, [PC, #52]
0x206E	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 72 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL2);       //for YAW
0x2070	0x2201    MOVS	R2, #1
0x2072	0x2100    MOVS	R1, #0
0x2074	0xF7FFFA08  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 73 :: 		Delay_ms(6000);  //When APM is first turned on - need this interval to allow for APM auto-calibration
0x2078	0xF24867FF  MOVW	R7, #34559
0x207C	0xF2C03793  MOVT	R7, #915
L_Arm6:
0x2080	0x1E7F    SUBS	R7, R7, #1
0x2082	0xD1FD    BNE	L_Arm6
0x2084	0xBF00    NOP
0x2086	0xBF00    NOP
0x2088	0xBF00    NOP
0x208A	0xBF00    NOP
0x208C	0xBF00    NOP
;FlightControl.c, 75 :: 		}
L_end_Arm:
0x208E	0xF8DDE000  LDR	LR, [SP, #0]
0x2092	0xB001    ADD	SP, SP, #4
0x2094	0x4770    BX	LR
0x2096	0xBF00    NOP
0x2098	0x01602000  	_pwm_period2+0
0x209C	0x00002000  	_current_DC_2+0
0x20A0	0x000042C8  	#1120403456
0x20A4	0x015A2000  	_DC_time+0
0x20A8	0x000C2000  	_current_DC_4+0
0x20AC	0x00082000  	_current_DC+0
; end of _Arm
_TakeOff:
;FlightControl.c, 99 :: 		boolean TakeOff()
0x1DD0	0xB083    SUB	SP, SP, #12
0x1DD2	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 102 :: 		current_DC_3 = STARTING_THROTTLE_VALUE;  //Start motors at this value to predict timing-iterations in launch sequence
0x1DD6	0x4955    LDR	R1, [PC, #340]
0x1DD8	0x4855    LDR	R0, [PC, #340]
0x1DDA	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 103 :: 		UARTSendString("Taking off7.");
0x1DDC	0x4855    LDR	R0, [PC, #340]
0x1DDE	0xF000F8C5  BL	_UARTSendString+0
;FlightControl.c, 104 :: 		while(current_DC_3 < MAX_THROTTLE_VALUE){
L_TakeOff14:
0x1DE2	0x4853    LDR	R0, [PC, #332]
0x1DE4	0x6802    LDR	R2, [R0, #0]
0x1DE6	0x4854    LDR	R0, [PC, #336]
0x1DE8	0xF7FEFBF2  BL	__Compare_FP+0
0x1DEC	0xF2400000  MOVW	R0, #0
0x1DF0	0xDD00    BLE	L__TakeOff59
0x1DF2	0x2001    MOVS	R0, #1
L__TakeOff59:
0x1DF4	0xB2C0    UXTB	R0, R0
0x1DF6	0x2800    CMP	R0, #0
0x1DF8	0xF0008094  BEQ	L_TakeOff15
;FlightControl.c, 105 :: 		current_DC_3 += THROTLE_STEP_SIZE;
0x1DFC	0x484C    LDR	R0, [PC, #304]
0x1DFE	0x9002    STR	R0, [SP, #8]
0x1E00	0x6802    LDR	R2, [R0, #0]
0x1E02	0x484E    LDR	R0, [PC, #312]
0x1E04	0xF7FFF9CC  BL	__Add_FP+0
0x1E08	0x9902    LDR	R1, [SP, #8]
0x1E0A	0x6008    STR	R0, [R1, #0]
;FlightControl.c, 107 :: 		DC_time = (current_DC_3*pwm_period2)/100;
0x1E0C	0x494C    LDR	R1, [PC, #304]
0x1E0E	0x680A    LDR	R2, [R1, #0]
0x1E10	0xF7FFFD6C  BL	__Mul_FP+0
0x1E14	0x4A4B    LDR	R2, [PC, #300]
0x1E16	0xF7FFFDE9  BL	__Div_FP+0
0x1E1A	0xF7FFFDC3  BL	__FloatToUnsignedIntegral+0
0x1E1E	0xB280    UXTH	R0, R0
0x1E20	0x4949    LDR	R1, [PC, #292]
0x1E22	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 108 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x1E24	0x2200    MOVS	R2, #0
0x1E26	0x2100    MOVS	R1, #0
0x1E28	0xF7FFFB2E  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 110 :: 		if(current_DC_3 >= LIMIT_THROTTLE_VALUE)
0x1E2C	0x4840    LDR	R0, [PC, #256]
0x1E2E	0x6802    LDR	R2, [R0, #0]
0x1E30	0x4846    LDR	R0, [PC, #280]
0x1E32	0xF7FEFBCD  BL	__Compare_FP+0
0x1E36	0xF2400000  MOVW	R0, #0
0x1E3A	0xDC00    BGT	L__TakeOff60
0x1E3C	0x2001    MOVS	R0, #1
L__TakeOff60:
0x1E3E	0xB2C0    UXTB	R0, R0
0x1E40	0x2800    CMP	R0, #0
0x1E42	0xF000805D  BEQ	L_TakeOff16
;FlightControl.c, 112 :: 		sonarReadValue = alitudeSonarRead();
0x1E46	0xF7FFFA57  BL	_alitudeSonarRead+0
0x1E4A	0xF8AD0004  STRH	R0, [SP, #4]
;FlightControl.c, 113 :: 		UARTSendString("Sonar average.");
0x1E4E	0x4840    LDR	R0, [PC, #256]
0x1E50	0xF000F88C  BL	_UARTSendString+0
;FlightControl.c, 114 :: 		UARTSendUint16(sonarReadValue);
0x1E54	0xF8BD0004  LDRH	R0, [SP, #4]
0x1E58	0xF7FFFABA  BL	_UARTSendUint16+0
;FlightControl.c, 115 :: 		UARTSendNewLine();
0x1E5C	0xF7FFFA20  BL	_UARTSendNewLine+0
;FlightControl.c, 116 :: 		UARTSendString("Throttle");
0x1E60	0x483C    LDR	R0, [PC, #240]
0x1E62	0xF000F883  BL	_UARTSendString+0
;FlightControl.c, 117 :: 		UARTSendDouble(current_DC_3);
0x1E66	0x4832    LDR	R0, [PC, #200]
0x1E68	0x6800    LDR	R0, [R0, #0]
0x1E6A	0xF7FEFF9B  BL	_UARTSendDouble+0
;FlightControl.c, 120 :: 		if (sonarReadValue <= MINIMUM_ALITITUDE && current_DC_3 >= MAX_THROTTLE_VALUE)
0x1E6E	0xF8BD0004  LDRH	R0, [SP, #4]
0x1E72	0x280C    CMP	R0, #12
0x1E74	0xD815    BHI	L__TakeOff47
0x1E76	0x482E    LDR	R0, [PC, #184]
0x1E78	0x6802    LDR	R2, [R0, #0]
0x1E7A	0x482F    LDR	R0, [PC, #188]
0x1E7C	0xF7FEFBA8  BL	__Compare_FP+0
0x1E80	0xF2400000  MOVW	R0, #0
0x1E84	0xDC00    BGT	L__TakeOff61
0x1E86	0x2001    MOVS	R0, #1
L__TakeOff61:
0x1E88	0xB2C0    UXTB	R0, R0
0x1E8A	0xB150    CBZ	R0, L__TakeOff46
L__TakeOff45:
;FlightControl.c, 122 :: 		UARTSendString("Failed to reach altitude.");
0x1E8C	0x4832    LDR	R0, [PC, #200]
0x1E8E	0xF000F86D  BL	_UARTSendString+0
;FlightControl.c, 123 :: 		Throttle_Off();
0x1E92	0xF7FFF95F  BL	_Throttle_Off+0
;FlightControl.c, 124 :: 		GPIOC_ODR.B9 = 0; //Green LED Off - Indicates that the max throttle was reached but height off ground not acheived
0x1E96	0x2100    MOVS	R1, #0
0x1E98	0xB249    SXTB	R1, R1
0x1E9A	0x4830    LDR	R0, [PC, #192]
0x1E9C	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 125 :: 		return false;
0x1E9E	0x2001    MOVS	R0, #1
0x1EA0	0xE040    B	L_end_TakeOff
;FlightControl.c, 120 :: 		if (sonarReadValue <= MINIMUM_ALITITUDE && current_DC_3 >= MAX_THROTTLE_VALUE)
L__TakeOff47:
L__TakeOff46:
;FlightControl.c, 127 :: 		if (current_DC_3 >= MAX_THROTTLE_VALUE)
0x1EA2	0x4823    LDR	R0, [PC, #140]
0x1EA4	0x6802    LDR	R2, [R0, #0]
0x1EA6	0x4824    LDR	R0, [PC, #144]
0x1EA8	0xF7FEFB92  BL	__Compare_FP+0
0x1EAC	0xF2400000  MOVW	R0, #0
0x1EB0	0xDC00    BGT	L__TakeOff62
0x1EB2	0x2001    MOVS	R0, #1
L__TakeOff62:
0x1EB4	0xB2C0    UXTB	R0, R0
0x1EB6	0xB140    CBZ	R0, L_TakeOff20
;FlightControl.c, 129 :: 		UARTSendString("Max Throttle.");
0x1EB8	0x4829    LDR	R0, [PC, #164]
0x1EBA	0xF000F857  BL	_UARTSendString+0
;FlightControl.c, 130 :: 		GPIOC_ODR.B9 = 1;
0x1EBE	0x2101    MOVS	R1, #1
0x1EC0	0xB249    SXTB	R1, R1
0x1EC2	0x4826    LDR	R0, [PC, #152]
0x1EC4	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 131 :: 		return true;
0x1EC6	0x2000    MOVS	R0, #0
0x1EC8	0xE02C    B	L_end_TakeOff
;FlightControl.c, 132 :: 		}
L_TakeOff20:
;FlightControl.c, 133 :: 		if(sonarReadValue == 255)
0x1ECA	0xF8BD0004  LDRH	R0, [SP, #4]
0x1ECE	0xF1B00FFF  CMP	R0, #255
0x1ED2	0xD108    BNE	L_TakeOff21
;FlightControl.c, 135 :: 		UARTSendString("Sonar reads 255 return false.");
0x1ED4	0x4823    LDR	R0, [PC, #140]
0x1ED6	0xF000F849  BL	_UARTSendString+0
;FlightControl.c, 136 :: 		GPIOC_ODR.B9 = 0; //Green LED Off - Indicates that the max throttle was reached but height off ground not acheived
0x1EDA	0x2100    MOVS	R1, #0
0x1EDC	0xB249    SXTB	R1, R1
0x1EDE	0x481F    LDR	R0, [PC, #124]
0x1EE0	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 137 :: 		return false;
0x1EE2	0x2001    MOVS	R0, #1
0x1EE4	0xE01E    B	L_end_TakeOff
;FlightControl.c, 138 :: 		}
L_TakeOff21:
;FlightControl.c, 139 :: 		if (sonarReadValue >= TAKEOFF_ALITITUDE)
0x1EE6	0xF8BD0004  LDRH	R0, [SP, #4]
0x1EEA	0x281E    CMP	R0, #30
0x1EEC	0xD308    BCC	L_TakeOff22
;FlightControl.c, 141 :: 		UARTSendString("Reached Alitutude.");
0x1EEE	0x481E    LDR	R0, [PC, #120]
0x1EF0	0xF000F83C  BL	_UARTSendString+0
;FlightControl.c, 142 :: 		GPIOC_ODR.B9 = 1;   //Green LED Solid On - Indicates that target height off ground acheived
0x1EF4	0x2101    MOVS	R1, #1
0x1EF6	0xB249    SXTB	R1, R1
0x1EF8	0x4818    LDR	R0, [PC, #96]
0x1EFA	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 143 :: 		return true;
0x1EFC	0x2000    MOVS	R0, #0
0x1EFE	0xE011    B	L_end_TakeOff
;FlightControl.c, 144 :: 		}
L_TakeOff22:
;FlightControl.c, 145 :: 		}
L_TakeOff16:
;FlightControl.c, 146 :: 		GPIOC_ODR.B9 = ~GPIOC_ODR.B9; // Toggle PORTC
0x1F00	0x4916    LDR	R1, [PC, #88]
0x1F02	0x6808    LDR	R0, [R1, #0]
0x1F04	0xF0800101  EOR	R1, R0, #1
0x1F08	0x4814    LDR	R0, [PC, #80]
0x1F0A	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 147 :: 		Delay_ms(TAKEOFF_LOOP_DELAY_MS);
0x1F0C	0xF644373F  MOVW	R7, #19263
0x1F10	0xF2C0074C  MOVT	R7, #76
0x1F14	0xBF00    NOP
0x1F16	0xBF00    NOP
L_TakeOff23:
0x1F18	0x1E7F    SUBS	R7, R7, #1
0x1F1A	0xD1FD    BNE	L_TakeOff23
0x1F1C	0xBF00    NOP
0x1F1E	0xBF00    NOP
0x1F20	0xBF00    NOP
;FlightControl.c, 148 :: 		}
0x1F22	0xE75E    B	L_TakeOff14
L_TakeOff15:
;FlightControl.c, 149 :: 		}
L_end_TakeOff:
0x1F24	0xF8DDE000  LDR	LR, [SP, #0]
0x1F28	0xB003    ADD	SP, SP, #12
0x1F2A	0x4770    BX	LR
0x1F2C	0x999A40B9  	#1085905306
0x1F30	0x00042000  	_current_DC_3+0
0x1F34	0x00102000  	?lstr1_FlightControl+0
0x1F38	0xCCCD40DC  	#1088212173
0x1F3C	0xCCCD3D4C  	#1028443341
0x1F40	0x01602000  	_pwm_period2+0
0x1F44	0x000042C8  	#1120403456
0x1F48	0x015A2000  	_DC_time+0
0x1F4C	0x333340D3  	#1087583027
0x1F50	0x001D2000  	?lstr2_FlightControl+0
0x1F54	0x002C2000  	?lstr3_FlightControl+0
0x1F58	0x00352000  	?lstr4_FlightControl+0
0x1F5C	0x01A44222  	GPIOC_ODR+0
0x1F60	0x004F2000  	?lstr5_FlightControl+0
0x1F64	0x005D2000  	?lstr6_FlightControl+0
0x1F68	0x007B2000  	?lstr7_FlightControl+0
; end of _TakeOff
_alitudeSonarRead:
;FlightControl.c, 201 :: 		uint16 alitudeSonarRead()
0x12F8	0xB088    SUB	SP, SP, #32
0x12FA	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 203 :: 		uint16 sonarArray[SONAR_ITERATIONS] = {0};
0x12FE	0xF10D0B04  ADD	R11, SP, #4
0x1302	0xF10B0A14  ADD	R10, R11, #20
0x1306	0xF8DFC0C4  LDR	R12, [PC, #196]
0x130A	0xF7FFFB5B  BL	___CC2DW+0
;FlightControl.c, 204 :: 		int16 i = 0;
;FlightControl.c, 205 :: 		uint32 sonarAvg = 0;
; sonarAvg start address is: 32 (R8)
0x130E	0xF04F0800  MOV	R8, #0
;FlightControl.c, 206 :: 		uint32 secondAvg = 0;
;FlightControl.c, 207 :: 		uint8 anomolyCount = 0;
; anomolyCount start address is: 24 (R6)
0x1312	0x2600    MOVS	R6, #0
;FlightControl.c, 210 :: 		for(i=0; i < SONAR_ITERATIONS; i++)
; i start address is: 20 (R5)
0x1314	0x2500    MOVS	R5, #0
0x1316	0xB22D    SXTH	R5, R5
; sonarAvg end address is: 32 (R8)
; anomolyCount end address is: 24 (R6)
; i end address is: 20 (R5)
L_alitudeSonarRead25:
; i start address is: 20 (R5)
; anomolyCount start address is: 24 (R6)
; sonarAvg start address is: 32 (R8)
0x1318	0x2D0A    CMP	R5, #10
0x131A	0xDA33    BGE	L_alitudeSonarRead26
;FlightControl.c, 212 :: 		sonarArray[i] = ADC1_Get_Sample(13);                          // Get ADC value from corresponding channel
0x131C	0xA901    ADD	R1, SP, #4
0x131E	0x9107    STR	R1, [SP, #28]
0x1320	0x0068    LSLS	R0, R5, #1
0x1322	0x1808    ADDS	R0, R1, R0
0x1324	0x9006    STR	R0, [SP, #24]
0x1326	0x200D    MOVS	R0, #13
0x1328	0xF7FFFA80  BL	_ADC1_Get_Sample+0
0x132C	0x9906    LDR	R1, [SP, #24]
0x132E	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 213 :: 		sonarArray[i] >>= 4;
0x1330	0x0068    LSLS	R0, R5, #1
0x1332	0x9A07    LDR	R2, [SP, #28]
0x1334	0x1811    ADDS	R1, R2, R0
0x1336	0x8808    LDRH	R0, [R1, #0]
0x1338	0x0900    LSRS	R0, R0, #4
0x133A	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 215 :: 		if(sonarArray[i] >= SONAR_MAX_VALUE)
0x133C	0x0068    LSLS	R0, R5, #1
0x133E	0x1810    ADDS	R0, R2, R0
0x1340	0x8800    LDRH	R0, [R0, #0]
0x1342	0x28F0    CMP	R0, #240
0x1344	0xD309    BCC	L_alitudeSonarRead28
;FlightControl.c, 218 :: 		i--;
0x1346	0x1E69    SUBS	R1, R5, #1
0x1348	0xB209    SXTH	R1, R1
; i end address is: 20 (R5)
; i start address is: 4 (R1)
;FlightControl.c, 219 :: 		anomolyCount++;
0x134A	0x1C70    ADDS	R0, R6, #1
0x134C	0xB2C0    UXTB	R0, R0
0x134E	0xB2C6    UXTB	R6, R0
;FlightControl.c, 220 :: 		if(anomolyCount > 20)
0x1350	0x2814    CMP	R0, #20
0x1352	0xD901    BLS	L_alitudeSonarRead29
; sonarAvg end address is: 32 (R8)
; anomolyCount end address is: 24 (R6)
; i end address is: 4 (R1)
;FlightControl.c, 222 :: 		return 255;
0x1354	0x20FF    MOVS	R0, #255
0x1356	0xE035    B	L_end_alitudeSonarRead
;FlightControl.c, 223 :: 		}
L_alitudeSonarRead29:
;FlightControl.c, 224 :: 		}
; i start address is: 4 (R1)
; anomolyCount start address is: 24 (R6)
; sonarAvg start address is: 32 (R8)
; i end address is: 4 (R1)
0x1358	0xE006    B	L_alitudeSonarRead30
L_alitudeSonarRead28:
;FlightControl.c, 227 :: 		sonarAvg += sonarArray[i];
; i start address is: 20 (R5)
0x135A	0xA901    ADD	R1, SP, #4
0x135C	0x0068    LSLS	R0, R5, #1
0x135E	0x1808    ADDS	R0, R1, R0
0x1360	0x8800    LDRH	R0, [R0, #0]
0x1362	0xEB080800  ADD	R8, R8, R0, LSL #0
; sonarAvg end address is: 32 (R8)
; anomolyCount end address is: 24 (R6)
; i end address is: 20 (R5)
0x1366	0xB229    SXTH	R1, R5
;FlightControl.c, 228 :: 		}
L_alitudeSonarRead30:
;FlightControl.c, 229 :: 		Delay_ms(ALITUDE_SONAR_READ_DELAY);
; sonarAvg start address is: 32 (R8)
; anomolyCount start address is: 24 (R6)
; i start address is: 4 (R1)
0x1368	0xF24A171F  MOVW	R7, #41247
0x136C	0xF2C00707  MOVT	R7, #7
L_alitudeSonarRead31:
0x1370	0x1E7F    SUBS	R7, R7, #1
0x1372	0xD1FD    BNE	L_alitudeSonarRead31
0x1374	0xBF00    NOP
0x1376	0xBF00    NOP
0x1378	0xBF00    NOP
0x137A	0xBF00    NOP
0x137C	0xBF00    NOP
;FlightControl.c, 210 :: 		for(i=0; i < SONAR_ITERATIONS; i++)
0x137E	0x1C48    ADDS	R0, R1, #1
; i end address is: 4 (R1)
; i start address is: 20 (R5)
0x1380	0xB205    SXTH	R5, R0
;FlightControl.c, 230 :: 		}
; anomolyCount end address is: 24 (R6)
; i end address is: 20 (R5)
0x1382	0xE7C9    B	L_alitudeSonarRead25
L_alitudeSonarRead26:
;FlightControl.c, 231 :: 		sonarAvg = sonarAvg/SONAR_ITERATIONS;
0x1384	0x200A    MOVS	R0, #10
0x1386	0xFBB8F2F0  UDIV	R2, R8, R0
; sonarAvg end address is: 32 (R8)
; sonarAvg start address is: 8 (R2)
;FlightControl.c, 232 :: 		secondAvg = 0;
; secondAvg start address is: 16 (R4)
0x138A	0x2400    MOVS	R4, #0
;FlightControl.c, 233 :: 		for(i=0; i < SONAR_ITERATIONS; i++)
; i start address is: 12 (R3)
0x138C	0x2300    MOVS	R3, #0
0x138E	0xB21B    SXTH	R3, R3
; secondAvg end address is: 16 (R4)
; i end address is: 12 (R3)
L_alitudeSonarRead33:
; i start address is: 12 (R3)
; secondAvg start address is: 16 (R4)
; sonarAvg start address is: 8 (R2)
; sonarAvg end address is: 8 (R2)
0x1390	0x2B0A    CMP	R3, #10
0x1392	0xDA13    BGE	L_alitudeSonarRead34
; sonarAvg end address is: 8 (R2)
;FlightControl.c, 235 :: 		if(sonarArray[i] >= sonarAvg + SONAR_OUTLIER_OFFSET)
; sonarAvg start address is: 8 (R2)
0x1394	0xA901    ADD	R1, SP, #4
0x1396	0x0058    LSLS	R0, R3, #1
0x1398	0x1808    ADDS	R0, R1, R0
0x139A	0x8801    LDRH	R1, [R0, #0]
0x139C	0xF2020028  ADDW	R0, R2, #40
0x13A0	0x4281    CMP	R1, R0
0x13A2	0xD303    BCC	L_alitudeSonarRead36
;FlightControl.c, 237 :: 		sonarArray[i] = sonarAvg;
0x13A4	0xA901    ADD	R1, SP, #4
0x13A6	0x0058    LSLS	R0, R3, #1
0x13A8	0x1808    ADDS	R0, R1, R0
0x13AA	0x8002    STRH	R2, [R0, #0]
;FlightControl.c, 238 :: 		}
L_alitudeSonarRead36:
;FlightControl.c, 239 :: 		secondAvg += sonarArray[i];
0x13AC	0xA901    ADD	R1, SP, #4
0x13AE	0x0058    LSLS	R0, R3, #1
0x13B0	0x1808    ADDS	R0, R1, R0
0x13B2	0x8800    LDRH	R0, [R0, #0]
0x13B4	0x1824    ADDS	R4, R4, R0
;FlightControl.c, 233 :: 		for(i=0; i < SONAR_ITERATIONS; i++)
0x13B6	0x1C5B    ADDS	R3, R3, #1
0x13B8	0xB21B    SXTH	R3, R3
;FlightControl.c, 240 :: 		}
; sonarAvg end address is: 8 (R2)
; i end address is: 12 (R3)
0x13BA	0xE7E9    B	L_alitudeSonarRead33
L_alitudeSonarRead34:
;FlightControl.c, 241 :: 		return((uint16)secondAvg/SONAR_ITERATIONS);
0x13BC	0xB2A1    UXTH	R1, R4
; secondAvg end address is: 16 (R4)
0x13BE	0x200A    MOVS	R0, #10
0x13C0	0xFBB1F0F0  UDIV	R0, R1, R0
;FlightControl.c, 242 :: 		}
L_end_alitudeSonarRead:
0x13C4	0xF8DDE000  LDR	LR, [SP, #0]
0x13C8	0xB008    ADD	SP, SP, #32
0x13CA	0x4770    BX	LR
0x13CC	0x28E40000  	?ICSalitudeSonarRead_sonarArray_L0+0
; end of _alitudeSonarRead
_ADC1_Get_Sample:
;__Lib_ADC_123_32F10x_16ch.c, 146 :: 		
; channel start address is: 0 (R0)
0x082C	0xB081    SUB	SP, SP, #4
0x082E	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
;__Lib_ADC_123_32F10x_16ch.c, 147 :: 		
0x0832	0xB281    UXTH	R1, R0
; channel end address is: 0 (R0)
0x0834	0x4803    LDR	R0, [PC, #12]
0x0836	0xF7FFFEFF  BL	__Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample+0
;__Lib_ADC_123_32F10x_16ch.c, 154 :: 		
L_end_ADC1_Get_Sample:
0x083A	0xF8DDE000  LDR	LR, [SP, #0]
0x083E	0xB001    ADD	SP, SP, #4
0x0840	0x4770    BX	LR
0x0842	0xBF00    NOP
0x0844	0x24004001  	ADC1_SR+0
; end of _ADC1_Get_Sample
__Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample:
;__Lib_ADC_123_32F10x_16ch.c, 132 :: 		
; channel start address is: 4 (R1)
; base start address is: 0 (R0)
0x0638	0xB081    SUB	SP, SP, #4
0x063A	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; channel start address is: 4 (R1)
;__Lib_ADC_123_32F10x_16ch.c, 133 :: 		
0x063E	0xF2000434  ADDW	R4, R0, #52
0x0642	0x090A    LSRS	R2, R1, #4
0x0644	0xB292    UXTH	R2, R2
0x0646	0xB293    UXTH	R3, R2
0x0648	0x6822    LDR	R2, [R4, #0]
0x064A	0xF3631204  BFI	R2, R3, #4, #1
0x064E	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 134 :: 		
0x0650	0xF2000434  ADDW	R4, R0, #52
0x0654	0x08CA    LSRS	R2, R1, #3
0x0656	0xB292    UXTH	R2, R2
0x0658	0xB293    UXTH	R3, R2
0x065A	0x6822    LDR	R2, [R4, #0]
0x065C	0xF36302C3  BFI	R2, R3, #3, #1
0x0660	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 135 :: 		
0x0662	0xF2000434  ADDW	R4, R0, #52
0x0666	0x088A    LSRS	R2, R1, #2
0x0668	0xB292    UXTH	R2, R2
0x066A	0xB293    UXTH	R3, R2
0x066C	0x6822    LDR	R2, [R4, #0]
0x066E	0xF3630282  BFI	R2, R3, #2, #1
0x0672	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 136 :: 		
0x0674	0xF2000434  ADDW	R4, R0, #52
0x0678	0x084A    LSRS	R2, R1, #1
0x067A	0xB292    UXTH	R2, R2
0x067C	0xB293    UXTH	R3, R2
0x067E	0x6822    LDR	R2, [R4, #0]
0x0680	0xF3630241  BFI	R2, R3, #1, #1
0x0684	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 137 :: 		
0x0686	0xF2000434  ADDW	R4, R0, #52
0x068A	0xB28B    UXTH	R3, R1
; channel end address is: 4 (R1)
0x068C	0x6822    LDR	R2, [R4, #0]
0x068E	0xF3630200  BFI	R2, R3, #0, #1
0x0692	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 138 :: 		
0x0694	0xF2000408  ADDW	R4, R0, #8
0x0698	0x2301    MOVS	R3, #1
0x069A	0x6822    LDR	R2, [R4, #0]
0x069C	0xF3630200  BFI	R2, R3, #0, #1
0x06A0	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 139 :: 		
0x06A2	0xF2000408  ADDW	R4, R0, #8
0x06A6	0x2301    MOVS	R3, #1
0x06A8	0x6822    LDR	R2, [R4, #0]
0x06AA	0xF3635296  BFI	R2, R3, #22, #1
0x06AE	0x6022    STR	R2, [R4, #0]
;__Lib_ADC_123_32F10x_16ch.c, 140 :: 		
0x06B0	0xF7FFFE7E  BL	_Delay_1us+0
; base end address is: 0 (R0)
;__Lib_ADC_123_32F10x_16ch.c, 141 :: 		
L___Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample20:
; base start address is: 0 (R0)
0x06B4	0x6803    LDR	R3, [R0, #0]
0x06B6	0xF3C30240  UBFX	R2, R3, #1, #1
0x06BA	0xB902    CBNZ	R2, L___Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample21
0x06BC	0xE7FA    B	L___Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample20
L___Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample21:
;__Lib_ADC_123_32F10x_16ch.c, 142 :: 		
0x06BE	0xF200024C  ADDW	R2, R0, #76
; base end address is: 0 (R0)
0x06C2	0x6812    LDR	R2, [R2, #0]
0x06C4	0xB290    UXTH	R0, R2
;__Lib_ADC_123_32F10x_16ch.c, 143 :: 		
L_end_ADCx_Get_Sample:
0x06C6	0xF8DDE000  LDR	LR, [SP, #0]
0x06CA	0xB001    ADD	SP, SP, #4
0x06CC	0x4770    BX	LR
; end of __Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x03B0	0xF2400709  MOVW	R7, #9
0x03B4	0xF2C00700  MOVT	R7, #0
L_Delay_1us0:
0x03B8	0x1E7F    SUBS	R7, R7, #1
0x03BA	0xD1FD    BNE	L_Delay_1us0
0x03BC	0xBF00    NOP
0x03BE	0xBF00    NOP
0x03C0	0xBF00    NOP
0x03C2	0xBF00    NOP
0x03C4	0xBF00    NOP
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x03C6	0x4770    BX	LR
; end of _Delay_1us
___CC2DW:
;__Lib_System_101_102_103.c, 21 :: 		
0x09C4	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 23 :: 		
L_loopDW:
;__Lib_System_101_102_103.c, 24 :: 		
0x09C6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_101_102_103.c, 25 :: 		
0x09CA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_101_102_103.c, 26 :: 		
0x09CE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 27 :: 		
0x09D2	0xD1F8    BNE	L_loopDW
;__Lib_System_101_102_103.c, 29 :: 		
L_end___CC2DW:
0x09D4	0xB001    ADD	SP, SP, #4
0x09D6	0x4770    BX	LR
; end of ___CC2DW
_UARTSendUint16:
;UART.c, 30 :: 		void UARTSendUint16(uint16 dataToSend)
; dataToSend start address is: 0 (R0)
0x13D0	0xB081    SUB	SP, SP, #4
0x13D2	0xF8CDE000  STR	LR, [SP, #0]
0x13D6	0xB285    UXTH	R5, R0
; dataToSend end address is: 0 (R0)
; dataToSend start address is: 20 (R5)
;UART.c, 32 :: 		UART_Set_Active(&UART1_Read, &UART1_Write, &UART1_Data_Ready, &UART1_Tx_Idle); // set UART1 active
0x13D8	0x4B27    LDR	R3, [PC, #156]
0x13DA	0x4A28    LDR	R2, [PC, #160]
0x13DC	0x4928    LDR	R1, [PC, #160]
0x13DE	0x4829    LDR	R0, [PC, #164]
0x13E0	0xF7FFFCBE  BL	_UART_Set_Active+0
;UART.c, 33 :: 		UART1_Write((dataToSend/10000)+48);
0x13E4	0xF2427110  MOVW	R1, #10000
0x13E8	0xFBB5F1F1  UDIV	R1, R5, R1
0x13EC	0xB289    UXTH	R1, R1
0x13EE	0x3130    ADDS	R1, #48
0x13F0	0xB288    UXTH	R0, R1
0x13F2	0xF7FFFF71  BL	_UART1_Write+0
;UART.c, 34 :: 		UART1_Write(((dataToSend%10000)/1000)+48);
0x13F6	0xF2427110  MOVW	R1, #10000
0x13FA	0xFBB5F2F1  UDIV	R2, R5, R1
0x13FE	0xFB015212  MLS	R2, R1, R2, R5
0x1402	0xB292    UXTH	R2, R2
0x1404	0xF24031E8  MOVW	R1, #1000
0x1408	0xFBB2F1F1  UDIV	R1, R2, R1
0x140C	0xB289    UXTH	R1, R1
0x140E	0x3130    ADDS	R1, #48
0x1410	0xB288    UXTH	R0, R1
0x1412	0xF7FFFF61  BL	_UART1_Write+0
;UART.c, 35 :: 		UART1_Write(((dataToSend%1000)/100)+48);
0x1416	0xF24031E8  MOVW	R1, #1000
0x141A	0xFBB5F2F1  UDIV	R2, R5, R1
0x141E	0xFB015212  MLS	R2, R1, R2, R5
0x1422	0xB292    UXTH	R2, R2
0x1424	0x2164    MOVS	R1, #100
0x1426	0xFBB2F1F1  UDIV	R1, R2, R1
0x142A	0xB289    UXTH	R1, R1
0x142C	0x3130    ADDS	R1, #48
0x142E	0xB288    UXTH	R0, R1
0x1430	0xF7FFFF52  BL	_UART1_Write+0
;UART.c, 36 :: 		UART1_Write(((dataToSend%100)/10)+48);
0x1434	0x2164    MOVS	R1, #100
0x1436	0xFBB5F2F1  UDIV	R2, R5, R1
0x143A	0xFB015212  MLS	R2, R1, R2, R5
0x143E	0xB292    UXTH	R2, R2
0x1440	0x210A    MOVS	R1, #10
0x1442	0xFBB2F1F1  UDIV	R1, R2, R1
0x1446	0xB289    UXTH	R1, R1
0x1448	0x3130    ADDS	R1, #48
0x144A	0xB288    UXTH	R0, R1
0x144C	0xF7FFFF44  BL	_UART1_Write+0
;UART.c, 37 :: 		UART1_Write((dataToSend%10)+48);
0x1450	0x220A    MOVS	R2, #10
0x1452	0xFBB5F1F2  UDIV	R1, R5, R2
0x1456	0xFB025111  MLS	R1, R2, R1, R5
0x145A	0xB289    UXTH	R1, R1
; dataToSend end address is: 20 (R5)
0x145C	0x3130    ADDS	R1, #48
0x145E	0xB288    UXTH	R0, R1
0x1460	0xF7FFFF3A  BL	_UART1_Write+0
;UART.c, 38 :: 		UART1_Write(10);
0x1464	0x200A    MOVS	R0, #10
0x1466	0xF7FFFF37  BL	_UART1_Write+0
;UART.c, 39 :: 		UART1_Write(13);
0x146A	0x200D    MOVS	R0, #13
0x146C	0xF7FFFF34  BL	_UART1_Write+0
;UART.c, 40 :: 		}
L_end_UARTSendUint16:
0x1470	0xF8DDE000  LDR	LR, [SP, #0]
0x1474	0xB001    ADD	SP, SP, #4
0x1476	0x4770    BX	LR
0x1478	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x147C	0xFFFFFFFF  	_UART1_Data_Ready+0
0x1480	0x12D90000  	_UART1_Write+0
0x1484	0xFFFFFFFF  	_UART1_Read+0
; end of _UARTSendUint16
_UARTSendNewLine:
;UART.c, 23 :: 		void UARTSendNewLine(void)
0x12A0	0xB081    SUB	SP, SP, #4
0x12A2	0xF8CDE000  STR	LR, [SP, #0]
;UART.c, 25 :: 		UART_Set_Active(&UART1_Read, &UART1_Write, &UART1_Data_Ready, &UART1_Tx_Idle); // set UART1 active
0x12A6	0x4B08    LDR	R3, [PC, #32]
0x12A8	0x4A08    LDR	R2, [PC, #32]
0x12AA	0x4909    LDR	R1, [PC, #36]
0x12AC	0x4809    LDR	R0, [PC, #36]
0x12AE	0xF7FFFD57  BL	_UART_Set_Active+0
;UART.c, 26 :: 		UART1_Write(10);
0x12B2	0x200A    MOVS	R0, #10
0x12B4	0xF000F810  BL	_UART1_Write+0
;UART.c, 27 :: 		UART1_Write(13);
0x12B8	0x200D    MOVS	R0, #13
0x12BA	0xF000F80D  BL	_UART1_Write+0
;UART.c, 28 :: 		}
L_end_UARTSendNewLine:
0x12BE	0xF8DDE000  LDR	LR, [SP, #0]
0x12C2	0xB001    ADD	SP, SP, #4
0x12C4	0x4770    BX	LR
0x12C6	0xBF00    NOP
0x12C8	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x12CC	0xFFFFFFFF  	_UART1_Data_Ready+0
0x12D0	0x12D90000  	_UART1_Write+0
0x12D4	0xFFFFFFFF  	_UART1_Read+0
; end of _UARTSendNewLine
_UARTSendDouble:
;UART.c, 42 :: 		void UARTSendDouble(double dataToSend)
; dataToSend start address is: 0 (R0)
0x0DA4	0xB083    SUB	SP, SP, #12
0x0DA6	0xF8CDE000  STR	LR, [SP, #0]
0x0DAA	0x4681    MOV	R9, R0
; dataToSend end address is: 0 (R0)
; dataToSend start address is: 36 (R9)
;UART.c, 44 :: 		char test = 0;
;UART.c, 47 :: 		UART_Set_Active(&UART1_Read, &UART1_Write, &UART1_Data_Ready, &UART1_Tx_Idle); // set UART1 active
0x0DAC	0x4BD3    LDR	R3, [PC, #844]
0x0DAE	0x4AD4    LDR	R2, [PC, #848]
0x0DB0	0x49D4    LDR	R1, [PC, #848]
0x0DB2	0x48D5    LDR	R0, [PC, #852]
0x0DB4	0xF7FFFFD4  BL	_UART_Set_Active+0
;UART.c, 49 :: 		dataHolder = (long)(dataToSend/100000);
0x0DB8	0x4AD4    LDR	R2, [PC, #848]
0x0DBA	0x4648    MOV	R0, R9
0x0DBC	0xF000FE16  BL	__Div_FP+0
0x0DC0	0xF7FFFF2E  BL	__FloatToSignedIntegral+0
; dataHolder start address is: 16 (R4)
0x0DC4	0x4604    MOV	R4, R0
;UART.c, 50 :: 		test = (char)(dataHolder+48);
0x0DC6	0xF2000130  ADDW	R1, R0, #48
;UART.c, 51 :: 		UART1_Write(test);
0x0DCA	0xB2C8    UXTB	R0, R1
0x0DCC	0xF000FA84  BL	_UART1_Write+0
;UART.c, 53 :: 		dataHolder = ((long)floor(dataToSend - ((double)(dataHolder) * 100000)))/10000;
0x0DD0	0x4620    MOV	R0, R4
0x0DD2	0xF7FFFB5B  BL	__SignedIntegralToFloat+0
; dataHolder end address is: 16 (R4)
0x0DD6	0x4ACD    LDR	R2, [PC, #820]
0x0DD8	0xF000FD88  BL	__Mul_FP+0
0x0DDC	0x9002    STR	R0, [SP, #8]
0x0DDE	0x9101    STR	R1, [SP, #4]
0x0DE0	0x9902    LDR	R1, [SP, #8]
0x0DE2	0x460A    MOV	R2, R1
0x0DE4	0x4648    MOV	R0, R9
0x0DE6	0xF7FFFB71  BL	__Sub_FP+0
0x0DEA	0x9901    LDR	R1, [SP, #4]
0x0DEC	0xF7FFFF6A  BL	_floor+0
0x0DF0	0xF7FFFF16  BL	__FloatToSignedIntegral+0
0x0DF4	0xF2427110  MOVW	R1, #10000
0x0DF8	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 54 :: 		test = (char)(dataHolder+48);
0x0DFC	0x3130    ADDS	R1, #48
;UART.c, 55 :: 		UART1_Write(test);
0x0DFE	0xB2C8    UXTB	R0, R1
0x0E00	0xF000FA6A  BL	_UART1_Write+0
;UART.c, 57 :: 		dataHolder = (long)(dataToSend/10000);
0x0E04	0x4AC2    LDR	R2, [PC, #776]
0x0E06	0x4648    MOV	R0, R9
0x0E08	0xF000FDF0  BL	__Div_FP+0
0x0E0C	0xF7FFFF08  BL	__FloatToSignedIntegral+0
;UART.c, 58 :: 		dataHolder = ((long)floor(dataToSend - ((double)(dataHolder) * 10000)))/1000;
0x0E10	0xF7FFFB3C  BL	__SignedIntegralToFloat+0
0x0E14	0x4ABE    LDR	R2, [PC, #760]
0x0E16	0xF000FD69  BL	__Mul_FP+0
0x0E1A	0x9002    STR	R0, [SP, #8]
0x0E1C	0x9101    STR	R1, [SP, #4]
0x0E1E	0x9902    LDR	R1, [SP, #8]
0x0E20	0x460A    MOV	R2, R1
0x0E22	0x4648    MOV	R0, R9
0x0E24	0xF7FFFB52  BL	__Sub_FP+0
0x0E28	0x9901    LDR	R1, [SP, #4]
0x0E2A	0xF7FFFF4B  BL	_floor+0
0x0E2E	0xF7FFFEF7  BL	__FloatToSignedIntegral+0
0x0E32	0xF24031E8  MOVW	R1, #1000
0x0E36	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 59 :: 		test = (char)(dataHolder+48);
0x0E3A	0x3130    ADDS	R1, #48
;UART.c, 60 :: 		UART1_Write(test);
0x0E3C	0xB2C8    UXTB	R0, R1
0x0E3E	0xF000FA4B  BL	_UART1_Write+0
;UART.c, 62 :: 		dataHolder = (long)(dataToSend/1000);
0x0E42	0x4AB4    LDR	R2, [PC, #720]
0x0E44	0x4648    MOV	R0, R9
0x0E46	0xF000FDD1  BL	__Div_FP+0
0x0E4A	0xF7FFFEE9  BL	__FloatToSignedIntegral+0
;UART.c, 63 :: 		dataHolder = ((long)floor(dataToSend - ((double)(dataHolder) * 1000)))/100;
0x0E4E	0xF7FFFB1D  BL	__SignedIntegralToFloat+0
0x0E52	0x4AB0    LDR	R2, [PC, #704]
0x0E54	0xF000FD4A  BL	__Mul_FP+0
0x0E58	0x9002    STR	R0, [SP, #8]
0x0E5A	0x9101    STR	R1, [SP, #4]
0x0E5C	0x9902    LDR	R1, [SP, #8]
0x0E5E	0x460A    MOV	R2, R1
0x0E60	0x4648    MOV	R0, R9
0x0E62	0xF7FFFB33  BL	__Sub_FP+0
0x0E66	0x9901    LDR	R1, [SP, #4]
0x0E68	0xF7FFFF2C  BL	_floor+0
0x0E6C	0xF7FFFED8  BL	__FloatToSignedIntegral+0
0x0E70	0x2164    MOVS	R1, #100
0x0E72	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 64 :: 		test = (char)(dataHolder+48);
0x0E76	0x3130    ADDS	R1, #48
;UART.c, 65 :: 		UART1_Write(test);
0x0E78	0xB2C8    UXTB	R0, R1
0x0E7A	0xF000FA2D  BL	_UART1_Write+0
;UART.c, 67 :: 		dataHolder = (long)(dataToSend/100);
0x0E7E	0x4AA6    LDR	R2, [PC, #664]
0x0E80	0x4648    MOV	R0, R9
0x0E82	0xF000FDB3  BL	__Div_FP+0
0x0E86	0xF7FFFECB  BL	__FloatToSignedIntegral+0
;UART.c, 68 :: 		dataHolder = ((long)floor(dataToSend - ((double)(dataHolder) * 100)))/10;
0x0E8A	0xF7FFFAFF  BL	__SignedIntegralToFloat+0
0x0E8E	0x4AA2    LDR	R2, [PC, #648]
0x0E90	0xF000FD2C  BL	__Mul_FP+0
0x0E94	0x9002    STR	R0, [SP, #8]
0x0E96	0x9101    STR	R1, [SP, #4]
0x0E98	0x9902    LDR	R1, [SP, #8]
0x0E9A	0x460A    MOV	R2, R1
0x0E9C	0x4648    MOV	R0, R9
0x0E9E	0xF7FFFB15  BL	__Sub_FP+0
0x0EA2	0x9901    LDR	R1, [SP, #4]
0x0EA4	0xF7FFFF0E  BL	_floor+0
0x0EA8	0xF7FFFEBA  BL	__FloatToSignedIntegral+0
0x0EAC	0x210A    MOVS	R1, #10
0x0EAE	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 69 :: 		test = (char)(dataHolder+48);
0x0EB2	0x3130    ADDS	R1, #48
;UART.c, 70 :: 		UART1_Write(test);
0x0EB4	0xB2C8    UXTB	R0, R1
0x0EB6	0xF000FA0F  BL	_UART1_Write+0
;UART.c, 72 :: 		dataHolder = (long)(dataToSend/10);
0x0EBA	0x4A98    LDR	R2, [PC, #608]
0x0EBC	0x4648    MOV	R0, R9
0x0EBE	0xF000FD95  BL	__Div_FP+0
0x0EC2	0xF7FFFEAD  BL	__FloatToSignedIntegral+0
;UART.c, 73 :: 		dataHolder = ((long)floor(dataToSend - ((double)(dataHolder) * 10)));
0x0EC6	0xF7FFFAE1  BL	__SignedIntegralToFloat+0
0x0ECA	0x4A94    LDR	R2, [PC, #592]
0x0ECC	0xF000FD0E  BL	__Mul_FP+0
0x0ED0	0x9002    STR	R0, [SP, #8]
0x0ED2	0x9101    STR	R1, [SP, #4]
0x0ED4	0x9902    LDR	R1, [SP, #8]
0x0ED6	0x460A    MOV	R2, R1
0x0ED8	0x4648    MOV	R0, R9
0x0EDA	0xF7FFFAF7  BL	__Sub_FP+0
0x0EDE	0x9901    LDR	R1, [SP, #4]
0x0EE0	0xF7FFFEF0  BL	_floor+0
0x0EE4	0xF7FFFE9C  BL	__FloatToSignedIntegral+0
;UART.c, 74 :: 		test = (char)(dataHolder+48);
0x0EE8	0xF2000130  ADDW	R1, R0, #48
;UART.c, 75 :: 		UART1_Write(test);
0x0EEC	0xB2C8    UXTB	R0, R1
0x0EEE	0xF000F9F3  BL	_UART1_Write+0
;UART.c, 76 :: 		UART1_Write('.');
0x0EF2	0x202E    MOVS	R0, #46
0x0EF4	0xF000F9F0  BL	_UART1_Write+0
;UART.c, 78 :: 		floatHolder = (long)(dataToSend/.1);
0x0EF8	0x4A89    LDR	R2, [PC, #548]
0x0EFA	0x4648    MOV	R0, R9
0x0EFC	0xF000FD76  BL	__Div_FP+0
0x0F00	0xF7FFFE8E  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x0F04	0x4680    MOV	R8, R0
;UART.c, 79 :: 		dataHolder = (long)(floatHolder/10);
0x0F06	0x210A    MOVS	R1, #10
0x0F08	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 80 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x0F0C	0x4608    MOV	R0, R1
0x0F0E	0xF7FFFABD  BL	__SignedIntegralToFloat+0
0x0F12	0x4A82    LDR	R2, [PC, #520]
0x0F14	0xF000FCEA  BL	__Mul_FP+0
0x0F18	0x9002    STR	R0, [SP, #8]
0x0F1A	0x4640    MOV	R0, R8
0x0F1C	0xF7FFFAB6  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x0F20	0x9A02    LDR	R2, [SP, #8]
0x0F22	0xF7FFFAD3  BL	__Sub_FP+0
0x0F26	0xF7FFFECD  BL	_floor+0
0x0F2A	0xF7FFFE79  BL	__FloatToSignedIntegral+0
;UART.c, 81 :: 		test = (char)(dataHolder+48);
0x0F2E	0xF2000130  ADDW	R1, R0, #48
;UART.c, 82 :: 		UART1_Write(test);
0x0F32	0xB2C8    UXTB	R0, R1
0x0F34	0xF000F9D0  BL	_UART1_Write+0
;UART.c, 84 :: 		floatHolder = (long)(dataToSend/.01);
0x0F38	0x4A7A    LDR	R2, [PC, #488]
0x0F3A	0x4648    MOV	R0, R9
0x0F3C	0xF000FD56  BL	__Div_FP+0
0x0F40	0xF7FFFE6E  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x0F44	0x4680    MOV	R8, R0
;UART.c, 85 :: 		dataHolder = (long)(floatHolder/10);
0x0F46	0x210A    MOVS	R1, #10
0x0F48	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 86 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x0F4C	0x4608    MOV	R0, R1
0x0F4E	0xF7FFFA9D  BL	__SignedIntegralToFloat+0
0x0F52	0x4A72    LDR	R2, [PC, #456]
0x0F54	0xF000FCCA  BL	__Mul_FP+0
0x0F58	0x9002    STR	R0, [SP, #8]
0x0F5A	0x4640    MOV	R0, R8
0x0F5C	0xF7FFFA96  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x0F60	0x9A02    LDR	R2, [SP, #8]
0x0F62	0xF7FFFAB3  BL	__Sub_FP+0
0x0F66	0xF7FFFEAD  BL	_floor+0
0x0F6A	0xF7FFFE59  BL	__FloatToSignedIntegral+0
;UART.c, 87 :: 		test = (char)(dataHolder+48);
0x0F6E	0xF2000130  ADDW	R1, R0, #48
;UART.c, 88 :: 		UART1_Write(test);
0x0F72	0xB2C8    UXTB	R0, R1
0x0F74	0xF000F9B0  BL	_UART1_Write+0
;UART.c, 90 :: 		floatHolder = (long)(dataToSend/.001);
0x0F78	0x4A6B    LDR	R2, [PC, #428]
0x0F7A	0x4648    MOV	R0, R9
0x0F7C	0xF000FD36  BL	__Div_FP+0
0x0F80	0xF7FFFE4E  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x0F84	0x4680    MOV	R8, R0
;UART.c, 91 :: 		dataHolder = (long)(floatHolder/10);
0x0F86	0x210A    MOVS	R1, #10
0x0F88	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 92 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x0F8C	0x4608    MOV	R0, R1
0x0F8E	0xF7FFFA7D  BL	__SignedIntegralToFloat+0
0x0F92	0x4A62    LDR	R2, [PC, #392]
0x0F94	0xF000FCAA  BL	__Mul_FP+0
0x0F98	0x9002    STR	R0, [SP, #8]
0x0F9A	0x4640    MOV	R0, R8
0x0F9C	0xF7FFFA76  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x0FA0	0x9A02    LDR	R2, [SP, #8]
0x0FA2	0xF7FFFA93  BL	__Sub_FP+0
0x0FA6	0xF7FFFE8D  BL	_floor+0
0x0FAA	0xF7FFFE39  BL	__FloatToSignedIntegral+0
;UART.c, 93 :: 		test = (char)(dataHolder+48);
0x0FAE	0xF2000130  ADDW	R1, R0, #48
;UART.c, 94 :: 		UART1_Write(test);
0x0FB2	0xB2C8    UXTB	R0, R1
0x0FB4	0xF000F990  BL	_UART1_Write+0
;UART.c, 96 :: 		floatHolder = (long)(dataToSend/.0001);
0x0FB8	0x4A5C    LDR	R2, [PC, #368]
0x0FBA	0x4648    MOV	R0, R9
0x0FBC	0xF000FD16  BL	__Div_FP+0
0x0FC0	0xF7FFFE2E  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x0FC4	0x4680    MOV	R8, R0
;UART.c, 97 :: 		dataHolder = (long)(floatHolder/10);
0x0FC6	0x210A    MOVS	R1, #10
0x0FC8	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 98 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x0FCC	0x4608    MOV	R0, R1
0x0FCE	0xF7FFFA5D  BL	__SignedIntegralToFloat+0
0x0FD2	0x4A52    LDR	R2, [PC, #328]
0x0FD4	0xF000FC8A  BL	__Mul_FP+0
0x0FD8	0x9002    STR	R0, [SP, #8]
0x0FDA	0x4640    MOV	R0, R8
0x0FDC	0xF7FFFA56  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x0FE0	0x9A02    LDR	R2, [SP, #8]
0x0FE2	0xF7FFFA73  BL	__Sub_FP+0
0x0FE6	0xF7FFFE6D  BL	_floor+0
0x0FEA	0xF7FFFE19  BL	__FloatToSignedIntegral+0
;UART.c, 99 :: 		test = (char)(dataHolder+48);
0x0FEE	0xF2000130  ADDW	R1, R0, #48
;UART.c, 100 :: 		UART1_Write(test);
0x0FF2	0xB2C8    UXTB	R0, R1
0x0FF4	0xF000F970  BL	_UART1_Write+0
;UART.c, 102 :: 		floatHolder = (long)(dataToSend/.00001);
0x0FF8	0x4A4D    LDR	R2, [PC, #308]
0x0FFA	0x4648    MOV	R0, R9
0x0FFC	0xF000FCF6  BL	__Div_FP+0
0x1000	0xF7FFFE0E  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x1004	0x4680    MOV	R8, R0
;UART.c, 103 :: 		dataHolder = (long)(floatHolder/10);
0x1006	0x210A    MOVS	R1, #10
0x1008	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 104 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x100C	0x4608    MOV	R0, R1
0x100E	0xF7FFFA3D  BL	__SignedIntegralToFloat+0
0x1012	0x4A42    LDR	R2, [PC, #264]
0x1014	0xF000FC6A  BL	__Mul_FP+0
0x1018	0x9002    STR	R0, [SP, #8]
0x101A	0x4640    MOV	R0, R8
0x101C	0xF7FFFA36  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x1020	0x9A02    LDR	R2, [SP, #8]
0x1022	0xF7FFFA53  BL	__Sub_FP+0
0x1026	0xF7FFFE4D  BL	_floor+0
0x102A	0xF7FFFDF9  BL	__FloatToSignedIntegral+0
;UART.c, 105 :: 		test = (char)(dataHolder+48);
0x102E	0xF2000130  ADDW	R1, R0, #48
;UART.c, 106 :: 		UART1_Write(test);
0x1032	0xB2C8    UXTB	R0, R1
0x1034	0xF000F950  BL	_UART1_Write+0
;UART.c, 108 :: 		floatHolder = (long)(dataToSend/.000001);
0x1038	0x4A3E    LDR	R2, [PC, #248]
0x103A	0x4648    MOV	R0, R9
0x103C	0xF000FCD6  BL	__Div_FP+0
0x1040	0xF7FFFDEE  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x1044	0x4680    MOV	R8, R0
;UART.c, 109 :: 		dataHolder = (long)(floatHolder/10);
0x1046	0x210A    MOVS	R1, #10
0x1048	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 110 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x104C	0x4608    MOV	R0, R1
0x104E	0xF7FFFA1D  BL	__SignedIntegralToFloat+0
0x1052	0x4A32    LDR	R2, [PC, #200]
0x1054	0xF000FC4A  BL	__Mul_FP+0
0x1058	0x9002    STR	R0, [SP, #8]
0x105A	0x4640    MOV	R0, R8
0x105C	0xF7FFFA16  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x1060	0x9A02    LDR	R2, [SP, #8]
0x1062	0xF7FFFA33  BL	__Sub_FP+0
0x1066	0xF7FFFE2D  BL	_floor+0
0x106A	0xF7FFFDD9  BL	__FloatToSignedIntegral+0
;UART.c, 111 :: 		test = (char)(dataHolder+48);
0x106E	0xF2000130  ADDW	R1, R0, #48
;UART.c, 112 :: 		UART1_Write(test);
0x1072	0xB2C8    UXTB	R0, R1
0x1074	0xF000F930  BL	_UART1_Write+0
;UART.c, 114 :: 		floatHolder = (long)(dataToSend/.0000001);
0x1078	0x4A2F    LDR	R2, [PC, #188]
0x107A	0x4648    MOV	R0, R9
0x107C	0xF000FCB6  BL	__Div_FP+0
0x1080	0xF7FFFDCE  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x1084	0x4680    MOV	R8, R0
;UART.c, 115 :: 		dataHolder = (long)(floatHolder/10);
0x1086	0x210A    MOVS	R1, #10
0x1088	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 116 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x108C	0x4608    MOV	R0, R1
0x108E	0xF7FFF9FD  BL	__SignedIntegralToFloat+0
0x1092	0x4A22    LDR	R2, [PC, #136]
0x1094	0xF000FC2A  BL	__Mul_FP+0
0x1098	0x9002    STR	R0, [SP, #8]
0x109A	0x4640    MOV	R0, R8
0x109C	0xF7FFF9F6  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x10A0	0x9A02    LDR	R2, [SP, #8]
0x10A2	0xF7FFFA13  BL	__Sub_FP+0
0x10A6	0xF7FFFE0D  BL	_floor+0
0x10AA	0xF7FFFDB9  BL	__FloatToSignedIntegral+0
;UART.c, 117 :: 		test = (char)(dataHolder+48);
0x10AE	0xF2000130  ADDW	R1, R0, #48
;UART.c, 118 :: 		UART1_Write(test);
0x10B2	0xB2C8    UXTB	R0, R1
0x10B4	0xF000F910  BL	_UART1_Write+0
;UART.c, 120 :: 		floatHolder = (long)(dataToSend/.00000001);
0x10B8	0x4A20    LDR	R2, [PC, #128]
0x10BA	0x4648    MOV	R0, R9
0x10BC	0xF000FC96  BL	__Div_FP+0
; dataToSend end address is: 36 (R9)
0x10C0	0xF7FFFDAE  BL	__FloatToSignedIntegral+0
; floatHolder start address is: 32 (R8)
0x10C4	0x4680    MOV	R8, R0
;UART.c, 121 :: 		dataHolder = (long)(floatHolder/10);
0x10C6	0x210A    MOVS	R1, #10
0x10C8	0xFB90F1F1  SDIV	R1, R0, R1
;UART.c, 122 :: 		dataHolder = ((long)floor(floatHolder - ((double)(dataHolder) * 10)));
0x10CC	0x4608    MOV	R0, R1
0x10CE	0xF7FFF9DD  BL	__SignedIntegralToFloat+0
0x10D2	0x4A12    LDR	R2, [PC, #72]
0x10D4	0xF000FC0A  BL	__Mul_FP+0
0x10D8	0x9002    STR	R0, [SP, #8]
0x10DA	0x4640    MOV	R0, R8
0x10DC	0xF7FFF9D6  BL	__SignedIntegralToFloat+0
; floatHolder end address is: 32 (R8)
0x10E0	0x9A02    LDR	R2, [SP, #8]
0x10E2	0xF7FFF9F3  BL	__Sub_FP+0
0x10E6	0xF7FFFDED  BL	_floor+0
0x10EA	0xF7FFFD99  BL	__FloatToSignedIntegral+0
;UART.c, 123 :: 		test = (char)(dataHolder+48);
0x10EE	0xF2000130  ADDW	R1, R0, #48
;UART.c, 124 :: 		UART1_Write(test);
0x10F2	0xB2C8    UXTB	R0, R1
0x10F4	0xF000F8F0  BL	_UART1_Write+0
0x10F8	0xF000B822  B	#68
0x10FC	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x1100	0xFFFFFFFF  	_UART1_Data_Ready+0
0x1104	0x12D90000  	_UART1_Write+0
0x1108	0xFFFFFFFF  	_UART1_Read+0
0x110C	0x500047C3  	#1203982336
0x1110	0x4000461C  	#1176256512
0x1114	0x0000447A  	#1148846080
0x1118	0x000042C8  	#1120403456
0x111C	0x00004120  	#1092616192
0x1120	0xCCCD3DCC  	#1036831949
0x1124	0xD70A3C23  	#1008981770
0x1128	0x126F3A83  	#981668463
0x112C	0xB71738D1  	#953267991
0x1130	0xC5AC3727  	#925353388
0x1134	0x37BD3586  	#897988541
0x1138	0xBF9533D6  	#869711765
0x113C	0xCC77322B  	#841731191
;UART.c, 125 :: 		UART1_Write(10);
0x1140	0x200A    MOVS	R0, #10
0x1142	0xF000F8C9  BL	_UART1_Write+0
;UART.c, 126 :: 		UART1_Write(13);
0x1146	0x200D    MOVS	R0, #13
0x1148	0xF000F8C6  BL	_UART1_Write+0
;UART.c, 127 :: 		}
L_end_UARTSendDouble:
0x114C	0xF8DDE000  LDR	LR, [SP, #0]
0x1150	0xB003    ADD	SP, SP, #12
0x1152	0x4770    BX	LR
; end of _UARTSendDouble
_floor:
;__Lib_CMath.c, 38 :: 		
0x0CC4	0xB082    SUB	SP, SP, #8
0x0CC6	0xF8CDE000  STR	LR, [SP, #0]
0x0CCA	0x9001    STR	R0, [SP, #4]
;__Lib_CMath.c, 42 :: 		
0x0CCC	0xA901    ADD	R1, SP, #4
0x0CCE	0x6809    LDR	R1, [R1, #0]
0x0CD0	0x0DC9    LSRS	R1, R1, #23
0x0CD2	0xF00101FF  AND	R1, R1, #255
;__Lib_CMath.c, 43 :: 		
0x0CD6	0xB209    SXTH	R1, R1
0x0CD8	0x397F    SUBS	R1, #127
0x0CDA	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x0CDC	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 44 :: 		
0x0CDE	0x2900    CMP	R1, #0
0x0CE0	0xDA0F    BGE	L_floor1
; expon end address is: 0 (R0)
;__Lib_CMath.c, 45 :: 		
0x0CE2	0x9A01    LDR	R2, [SP, #4]
0x0CE4	0xF04F0000  MOV	R0, #0
0x0CE8	0xF7FFFC72  BL	__Compare_FP+0
0x0CEC	0xF2400000  MOVW	R0, #0
0x0CF0	0xDD00    BLE	L__floor84
0x0CF2	0x2001    MOVS	R0, #1
L__floor84:
0x0CF4	0xB2C0    UXTB	R0, R0
0x0CF6	0xB108    CBZ	R0, L_floor2
;__Lib_CMath.c, 46 :: 		
0x0CF8	0x4811    LDR	R0, [PC, #68]
0x0CFA	0xE01D    B	L_end_floor
L_floor2:
;__Lib_CMath.c, 48 :: 		
0x0CFC	0xF04F0000  MOV	R0, #0
0x0D00	0xE01A    B	L_end_floor
L_floor1:
;__Lib_CMath.c, 49 :: 		
; expon start address is: 0 (R0)
0x0D02	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x0D04	0x2918    CMP	R1, #24
0x0D06	0xD901    BLS	L_floor4
;__Lib_CMath.c, 50 :: 		
0x0D08	0x9801    LDR	R0, [SP, #4]
0x0D0A	0xE015    B	L_end_floor
L_floor4:
;__Lib_CMath.c, 51 :: 		
0x0D0C	0x9801    LDR	R0, [SP, #4]
0x0D0E	0xF7FFFF87  BL	__FloatToSignedIntegral+0
0x0D12	0xF7FFFBBB  BL	__SignedIntegralToFloat+0
; i start address is: 4 (R1)
0x0D16	0x4601    MOV	R1, R0
;__Lib_CMath.c, 53 :: 		
0x0D18	0x9A01    LDR	R2, [SP, #4]
0x0D1A	0xF7FFFC59  BL	__Compare_FP+0
0x0D1E	0xF2400000  MOVW	R0, #0
0x0D22	0xDD00    BLE	L__floor85
0x0D24	0x2001    MOVS	R0, #1
L__floor85:
0x0D26	0xB2C0    UXTB	R0, R0
0x0D28	0xB128    CBZ	R0, L_floor5
;__Lib_CMath.c, 54 :: 		
0x0D2A	0x4608    MOV	R0, R1
0x0D2C	0xF04F527E  MOV	R2, #1065353216
0x0D30	0xF7FFFBCC  BL	__Sub_FP+0
; i end address is: 4 (R1)
0x0D34	0xE000    B	L_end_floor
L_floor5:
;__Lib_CMath.c, 55 :: 		
; i start address is: 4 (R1)
0x0D36	0x4608    MOV	R0, R1
; i end address is: 4 (R1)
;__Lib_CMath.c, 56 :: 		
L_end_floor:
0x0D38	0xF8DDE000  LDR	LR, [SP, #0]
0x0D3C	0xB002    ADD	SP, SP, #8
0x0D3E	0x4770    BX	LR
0x0D40	0x0000BF80  	#-1082130432
; end of _floor
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x05D0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x05D2	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x05D4	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x05D6	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x05D8	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x05DA	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x05DE	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x05E2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x05E4	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x05E6	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x05E8	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x05EA	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x05EC	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x05EE	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x05F0	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x05F2	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x05F4	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x05F6	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x05FA	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x05FE	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x0600	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x0602	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x0606	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x060A	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x060C	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x060E	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x0612	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x0616	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x0618	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x061A	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x061C	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x061E	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x0620	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x0622	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x0624	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x0626	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x0628	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x062A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x062C	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x062E	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x0630	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x0634	0xB001    ADD	SP, SP, #4
0x0636	0x4770    BX	LR
; end of __Compare_FP
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x048C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x048E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x0490	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x0492	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x0494	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x0496	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x0498	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x049A	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x049E	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x04A2	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x04A4	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x04A6	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x04A8	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x04AA	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x04AC	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x04AE	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x04B0	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x04B2	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x04B6	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x04BA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x04BC	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x04BE	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x04C2	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x04C4	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x04C8	0xB001    ADD	SP, SP, #4
0x04CA	0x4770    BX	LR
; end of __SignedIntegralToFloat
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x04CC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x04CE	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x04D2	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x04D6	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x04DA	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x04DE	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x04E0	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x04E2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x04E4	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x04E6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x04EA	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x04EC	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x04F0	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x04F2	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x04F4	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x04F8	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x04FA	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x04FC	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x04FE	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x0502	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x0506	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x0508	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x050A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x050C	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x050E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x0512	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x0514	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x0516	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x051A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x051C	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x051E	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x0522	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x0524	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x0526	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x0528	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x052A	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x052C	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x052E	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x0530	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x0532	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x0534	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x0536	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x0538	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x053A	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x053C	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x0540	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x0542	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x0546	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x0548	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x054C	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x0550	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x0552	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x0554	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x0558	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x055A	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x055C	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x055E	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x0562	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x0566	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x056A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x056C	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x056E	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x0572	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x0574	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x0578	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x057C	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x057E	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x0580	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x0582	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x0586	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x058A	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x058C	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x0590	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x0592	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x0594	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x0598	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x059A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x059C	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x059E	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x05A2	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x05A6	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x05AA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x05AE	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x05B2	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x05B4	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x05B6	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x05BA	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x05BE	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x05C0	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x05C4	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x05C6	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x05CA	0xB001    ADD	SP, SP, #4
0x05CC	0x4770    BX	LR
; end of __Sub_FP
_Throttle_Off:
;FlightControl.c, 77 :: 		void Throttle_Off(){
0x1154	0xB081    SUB	SP, SP, #4
0x1156	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 78 :: 		current_DC_2 = 5.0;
0x115A	0x490C    LDR	R1, [PC, #48]
0x115C	0x480C    LDR	R0, [PC, #48]
0x115E	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 79 :: 		DC_time = (current_DC_2*pwm_period2)/100;
0x1160	0x480C    LDR	R0, [PC, #48]
0x1162	0x6802    LDR	R2, [R0, #0]
0x1164	0x4809    LDR	R0, [PC, #36]
0x1166	0xF000FBC1  BL	__Mul_FP+0
0x116A	0x4A0B    LDR	R2, [PC, #44]
0x116C	0xF000FC3E  BL	__Div_FP+0
0x1170	0xF000FC18  BL	__FloatToUnsignedIntegral+0
0x1174	0xB280    UXTH	R0, R0
0x1176	0x4909    LDR	R1, [PC, #36]
0x1178	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 80 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x117A	0x2200    MOVS	R2, #0
0x117C	0x2100    MOVS	R1, #0
0x117E	0xF000F983  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 81 :: 		}
L_end_Throttle_Off:
0x1182	0xF8DDE000  LDR	LR, [SP, #0]
0x1186	0xB001    ADD	SP, SP, #4
0x1188	0x4770    BX	LR
0x118A	0xBF00    NOP
0x118C	0x000040A0  	#1084227584
0x1190	0x00002000  	_current_DC_2+0
0x1194	0x01602000  	_pwm_period2+0
0x1198	0x000042C8  	#1120403456
0x119C	0x015A2000  	_DC_time+0
; end of _Throttle_Off
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x11A0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x11A2	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x11A6	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x11AA	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x11AE	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x11B0	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x11B2	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x11B4	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x11B6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x11BA	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x11BC	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x11C0	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x11C2	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x11C4	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x11C8	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x11CA	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x11CC	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x11CE	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x11D2	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x11D6	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x11D8	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x11DA	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x11DC	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x11DE	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x11E2	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x11E4	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x11E6	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x11EA	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x11EC	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x11EE	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x11F2	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x11F4	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x11F6	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x11F8	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x11FA	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x11FC	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x11FE	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x1200	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x1202	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x1204	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x1206	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x1208	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x120A	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x120C	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x1210	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x1212	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x1216	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x1218	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x121C	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x1220	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x1222	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x1224	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x1228	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x122A	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x122C	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x122E	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x1232	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x1236	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x123A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x123C	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x123E	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x1242	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x1244	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x1248	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x124C	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x124E	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x1250	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x1252	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x1256	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x125A	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x125C	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x1260	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x1262	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x1264	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x1268	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x126A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x126C	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x126E	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x1272	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x1276	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x127A	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x127E	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x1282	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x1284	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x1286	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x128A	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x128E	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x1290	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x1294	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x1296	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x129A	0xB001    ADD	SP, SP, #4
0x129C	0x4770    BX	LR
; end of __Add_FP
_LoiterMode:
;FlightControl.c, 151 :: 		void LoiterMode(){
0x1B28	0xB081    SUB	SP, SP, #4
0x1B2A	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 152 :: 		DC_time = (current_DC_8*pwm_period2)/100;
0x1B2E	0x480B    LDR	R0, [PC, #44]
0x1B30	0x6802    LDR	R2, [R0, #0]
0x1B32	0x480B    LDR	R0, [PC, #44]
0x1B34	0x6800    LDR	R0, [R0, #0]
0x1B36	0xF7FFFED9  BL	__Mul_FP+0
0x1B3A	0x4A0A    LDR	R2, [PC, #40]
0x1B3C	0xF7FFFF56  BL	__Div_FP+0
0x1B40	0xF7FFFF30  BL	__FloatToUnsignedIntegral+0
0x1B44	0xB280    UXTH	R0, R0
0x1B46	0x4908    LDR	R1, [PC, #32]
0x1B48	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 153 :: 		PWM_TIM3_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x1B4A	0x2200    MOVS	R2, #0
0x1B4C	0x2100    MOVS	R1, #0
0x1B4E	0xF7FFFCC7  BL	_PWM_TIM3_Set_Duty+0
;FlightControl.c, 154 :: 		}
L_end_LoiterMode:
0x1B52	0xF8DDE000  LDR	LR, [SP, #0]
0x1B56	0xB001    ADD	SP, SP, #4
0x1B58	0x4770    BX	LR
0x1B5A	0xBF00    NOP
0x1B5C	0x01602000  	_pwm_period2+0
0x1B60	0x011C2000  	_current_DC_8+0
0x1B64	0x000042C8  	#1120403456
0x1B68	0x015A2000  	_DC_time+0
; end of _LoiterMode
_Stabilize_Alt:
;FlightControl.c, 244 :: 		void Stabilize_Alt()
0x1B6C	0xB084    SUB	SP, SP, #16
0x1B6E	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 246 :: 		uint16 sonarAlititude = 0;
;FlightControl.c, 247 :: 		uint8 failSafeCounter = 0;
0x1B72	0x2000    MOVS	R0, #0
0x1B74	0xF88D0006  STRB	R0, [SP, #6]
;FlightControl.c, 249 :: 		current_DC_3 = HOVER_THROTTLE_VALUE;
0x1B78	0x493F    LDR	R1, [PC, #252]
0x1B7A	0x4840    LDR	R0, [PC, #256]
0x1B7C	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 250 :: 		DC_time = (current_DC_3*pwm_period2)/100;
0x1B7E	0x4840    LDR	R0, [PC, #256]
0x1B80	0x6802    LDR	R2, [R0, #0]
0x1B82	0x483D    LDR	R0, [PC, #244]
0x1B84	0xF7FFFEB2  BL	__Mul_FP+0
0x1B88	0x4A3E    LDR	R2, [PC, #248]
0x1B8A	0xF7FFFF2F  BL	__Div_FP+0
0x1B8E	0xF7FFFF09  BL	__FloatToUnsignedIntegral+0
0x1B92	0xB280    UXTH	R0, R0
0x1B94	0x493C    LDR	R1, [PC, #240]
0x1B96	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 251 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x1B98	0x2200    MOVS	R2, #0
0x1B9A	0x2100    MOVS	R1, #0
0x1B9C	0xF7FFFC74  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 253 :: 		UARTSendString("Stablilizing Alititude.");
0x1BA0	0x483A    LDR	R0, [PC, #232]
0x1BA2	0xF000F9E3  BL	_UARTSendString+0
;FlightControl.c, 254 :: 		sonarAlititude = alitudeSonarRead();
0x1BA6	0xF7FFFBA7  BL	_alitudeSonarRead+0
0x1BAA	0xF8AD0004  STRH	R0, [SP, #4]
;FlightControl.c, 255 :: 		UARTSendString("1st Sonar average.");
0x1BAE	0x4838    LDR	R0, [PC, #224]
0x1BB0	0xF000F9DC  BL	_UARTSendString+0
;FlightControl.c, 256 :: 		UARTSendUint16(sonarAlititude);
0x1BB4	0xF8BD0004  LDRH	R0, [SP, #4]
0x1BB8	0xF7FFFC0A  BL	_UARTSendUint16+0
;FlightControl.c, 257 :: 		UARTSendNewLine();
0x1BBC	0xF7FFFB70  BL	_UARTSendNewLine+0
;FlightControl.c, 259 :: 		while((sonarAlititude < (ALTITUDE_HOLD - SONAR_ALITUDE_RANGE)) || (sonarAlititude > (ALTITUDE_HOLD + SONAR_ALITUDE_RANGE)))
L_Stabilize_Alt37:
0x1BC0	0xF8BD0004  LDRH	R0, [SP, #4]
0x1BC4	0x285B    CMP	R0, #91
0x1BC6	0xD304    BCC	L__Stabilize_Alt50
0x1BC8	0xF8BD0004  LDRH	R0, [SP, #4]
0x1BCC	0x2865    CMP	R0, #101
0x1BCE	0xD800    BHI	L__Stabilize_Alt49
0x1BD0	0xE04A    B	L_Stabilize_Alt38
L__Stabilize_Alt50:
L__Stabilize_Alt49:
;FlightControl.c, 261 :: 		if(failSafeCounter >= ALTITUDE_FAIL_SAFE_MAX)
0x1BD2	0xF89D0006  LDRB	R0, [SP, #6]
0x1BD6	0x281E    CMP	R0, #30
0x1BD8	0xD303    BCC	L_Stabilize_Alt41
;FlightControl.c, 263 :: 		UARTSendString("Breaking out, too many iterations.");
0x1BDA	0x482E    LDR	R0, [PC, #184]
0x1BDC	0xF000F9C6  BL	_UARTSendString+0
;FlightControl.c, 264 :: 		return;
0x1BE0	0xE045    B	L_end_Stabilize_Alt
;FlightControl.c, 265 :: 		}
L_Stabilize_Alt41:
;FlightControl.c, 266 :: 		if(sonarAlititude > ALTITUDE_HOLD)
0x1BE2	0xF8BD0004  LDRH	R0, [SP, #4]
0x1BE6	0x2860    CMP	R0, #96
0x1BE8	0xD90B    BLS	L_Stabilize_Alt42
;FlightControl.c, 268 :: 		current_DC_3 -= ALT_THROTLE_STEP_SIZE;
0x1BEA	0x4824    LDR	R0, [PC, #144]
0x1BEC	0x9003    STR	R0, [SP, #12]
0x1BEE	0x6800    LDR	R0, [R0, #0]
0x1BF0	0x4A29    LDR	R2, [PC, #164]
0x1BF2	0xF7FEFC6B  BL	__Sub_FP+0
0x1BF6	0x9903    LDR	R1, [SP, #12]
0x1BF8	0x6008    STR	R0, [R1, #0]
;FlightControl.c, 269 :: 		UARTSendString("Decrease Throttle.");
0x1BFA	0x4828    LDR	R0, [PC, #160]
0x1BFC	0xF000F9B6  BL	_UARTSendString+0
;FlightControl.c, 270 :: 		}
0x1C00	0xE00E    B	L_Stabilize_Alt43
L_Stabilize_Alt42:
;FlightControl.c, 271 :: 		else if(sonarAlititude < ALTITUDE_HOLD)
0x1C02	0xF8BD0004  LDRH	R0, [SP, #4]
0x1C06	0x2860    CMP	R0, #96
0x1C08	0xD20A    BCS	L_Stabilize_Alt44
;FlightControl.c, 273 :: 		current_DC_3 += ALT_THROTLE_STEP_SIZE;
0x1C0A	0x481C    LDR	R0, [PC, #112]
0x1C0C	0x9003    STR	R0, [SP, #12]
0x1C0E	0x6802    LDR	R2, [R0, #0]
0x1C10	0x4821    LDR	R0, [PC, #132]
0x1C12	0xF7FFFAC5  BL	__Add_FP+0
0x1C16	0x9903    LDR	R1, [SP, #12]
0x1C18	0x6008    STR	R0, [R1, #0]
;FlightControl.c, 274 :: 		UARTSendString("Increase Throttle.");
0x1C1A	0x4821    LDR	R0, [PC, #132]
0x1C1C	0xF000F9A6  BL	_UARTSendString+0
;FlightControl.c, 275 :: 		}
L_Stabilize_Alt44:
L_Stabilize_Alt43:
;FlightControl.c, 276 :: 		GPIOC_ODR.B8 = ~GPIOC_ODR.B8;
0x1C20	0x4920    LDR	R1, [PC, #128]
0x1C22	0x6808    LDR	R0, [R1, #0]
0x1C24	0xF0800101  EOR	R1, R0, #1
0x1C28	0x481E    LDR	R0, [PC, #120]
0x1C2A	0x6001    STR	R1, [R0, #0]
;FlightControl.c, 278 :: 		DC_time = (current_DC_3*pwm_period2)/100;
0x1C2C	0x4814    LDR	R0, [PC, #80]
0x1C2E	0x6802    LDR	R2, [R0, #0]
0x1C30	0x4812    LDR	R0, [PC, #72]
0x1C32	0x6800    LDR	R0, [R0, #0]
0x1C34	0xF7FFFE5A  BL	__Mul_FP+0
0x1C38	0x4A12    LDR	R2, [PC, #72]
0x1C3A	0xF7FFFED7  BL	__Div_FP+0
0x1C3E	0xF7FFFEB1  BL	__FloatToUnsignedIntegral+0
0x1C42	0xB280    UXTH	R0, R0
0x1C44	0x4910    LDR	R1, [PC, #64]
0x1C46	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 279 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x1C48	0x2200    MOVS	R2, #0
0x1C4A	0x2100    MOVS	R1, #0
0x1C4C	0xF7FFFC1C  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 281 :: 		sonarAlititude = alitudeSonarRead();
0x1C50	0xF7FFFB52  BL	_alitudeSonarRead+0
0x1C54	0xF8AD0004  STRH	R0, [SP, #4]
;FlightControl.c, 282 :: 		UARTSendUint16(sonarAlititude);
0x1C58	0xF7FFFBBA  BL	_UARTSendUint16+0
;FlightControl.c, 283 :: 		failSafeCounter++;
0x1C5C	0xF89D0006  LDRB	R0, [SP, #6]
0x1C60	0x1C40    ADDS	R0, R0, #1
0x1C62	0xF88D0006  STRB	R0, [SP, #6]
;FlightControl.c, 284 :: 		}
0x1C66	0xE7AB    B	L_Stabilize_Alt37
L_Stabilize_Alt38:
;FlightControl.c, 285 :: 		UARTSendString("Reached Altitude.");
0x1C68	0x480F    LDR	R0, [PC, #60]
0x1C6A	0xF000F97F  BL	_UARTSendString+0
;FlightControl.c, 286 :: 		}
L_end_Stabilize_Alt:
0x1C6E	0xF8DDE000  LDR	LR, [SP, #0]
0x1C72	0xB004    ADD	SP, SP, #16
0x1C74	0x4770    BX	LR
0x1C76	0xBF00    NOP
0x1C78	0x999A40C9  	#1086953882
0x1C7C	0x00042000  	_current_DC_3+0
0x1C80	0x01602000  	_pwm_period2+0
0x1C84	0x000042C8  	#1120403456
0x1C88	0x015A2000  	_DC_time+0
0x1C8C	0x00942000  	?lstr8_FlightControl+0
0x1C90	0x00AC2000  	?lstr9_FlightControl+0
0x1C94	0x00BF2000  	?lstr10_FlightControl+0
0x1C98	0xCCCD3DCC  	#1036831949
0x1C9C	0x00E22000  	?lstr11_FlightControl+0
0x1CA0	0x00F52000  	?lstr12_FlightControl+0
0x1CA4	0x01A04222  	GPIOC_ODR+0
0x1CA8	0x01082000  	?lstr13_FlightControl+0
; end of _Stabilize_Alt
_LandingMode:
;FlightControl.c, 162 :: 		void LandingMode(){
0x1CAC	0xB081    SUB	SP, SP, #4
0x1CAE	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 163 :: 		DC_time = (current_DC_9*pwm_period2)/100;
0x1CB2	0x480B    LDR	R0, [PC, #44]
0x1CB4	0x6802    LDR	R2, [R0, #0]
0x1CB6	0x480B    LDR	R0, [PC, #44]
0x1CB8	0x6800    LDR	R0, [R0, #0]
0x1CBA	0xF7FFFE17  BL	__Mul_FP+0
0x1CBE	0x4A0A    LDR	R2, [PC, #40]
0x1CC0	0xF7FFFE94  BL	__Div_FP+0
0x1CC4	0xF7FFFE6E  BL	__FloatToUnsignedIntegral+0
0x1CC8	0xB280    UXTH	R0, R0
0x1CCA	0x4908    LDR	R1, [PC, #32]
0x1CCC	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 164 :: 		PWM_TIM3_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL1);
0x1CCE	0x2200    MOVS	R2, #0
0x1CD0	0x2100    MOVS	R1, #0
0x1CD2	0xF7FFFC05  BL	_PWM_TIM3_Set_Duty+0
;FlightControl.c, 165 :: 		}
L_end_LandingMode:
0x1CD6	0xF8DDE000  LDR	LR, [SP, #0]
0x1CDA	0xB001    ADD	SP, SP, #4
0x1CDC	0x4770    BX	LR
0x1CDE	0xBF00    NOP
0x1CE0	0x01602000  	_pwm_period2+0
0x1CE4	0x00902000  	_current_DC_9+0
0x1CE8	0x000042C8  	#1120403456
0x1CEC	0x015A2000  	_DC_time+0
; end of _LandingMode
_DisArm:
;FlightControl.c, 83 :: 		void DisArm(){
0x1CF0	0xB081    SUB	SP, SP, #4
0x1CF2	0xF8CDE000  STR	LR, [SP, #0]
;FlightControl.c, 85 :: 		Throttle_Off();
0x1CF6	0xF7FFFA2D  BL	_Throttle_Off+0
;FlightControl.c, 87 :: 		Delay_ms(1000);
0x1CFA	0xF249677F  MOVW	R7, #38527
0x1CFE	0xF2C00798  MOVT	R7, #152
L_DisArm8:
0x1D02	0x1E7F    SUBS	R7, R7, #1
0x1D04	0xD1FD    BNE	L_DisArm8
0x1D06	0xBF00    NOP
0x1D08	0xBF00    NOP
0x1D0A	0xBF00    NOP
0x1D0C	0xBF00    NOP
0x1D0E	0xBF00    NOP
;FlightControl.c, 89 :: 		DC_time = (current_DC_2*pwm_period2)/100;
0x1D10	0x481E    LDR	R0, [PC, #120]
0x1D12	0x6802    LDR	R2, [R0, #0]
0x1D14	0x481E    LDR	R0, [PC, #120]
0x1D16	0x6800    LDR	R0, [R0, #0]
0x1D18	0xF7FFFDE8  BL	__Mul_FP+0
0x1D1C	0x4A1D    LDR	R2, [PC, #116]
0x1D1E	0xF7FFFE65  BL	__Div_FP+0
0x1D22	0xF7FFFE3F  BL	__FloatToUnsignedIntegral+0
0x1D26	0xB280    UXTH	R0, R0
0x1D28	0x491B    LDR	R1, [PC, #108]
0x1D2A	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 90 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL2);       //for YAW
0x1D2C	0x2201    MOVS	R2, #1
0x1D2E	0x2100    MOVS	R1, #0
0x1D30	0xF7FFFBAA  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 91 :: 		Delay_ms(3000);  //Delay for Arducopter to notice 'DISARM motors' command  (~2000 ms is the smallest amount to use)  http://copter.ardupilot.com/wiki/arming_the_motors/
0x1D34	0xF24C377F  MOVW	R7, #50047
0x1D38	0xF2C017C9  MOVT	R7, #457
0x1D3C	0xBF00    NOP
0x1D3E	0xBF00    NOP
L_DisArm10:
0x1D40	0x1E7F    SUBS	R7, R7, #1
0x1D42	0xD1FD    BNE	L_DisArm10
0x1D44	0xBF00    NOP
0x1D46	0xBF00    NOP
0x1D48	0xBF00    NOP
;FlightControl.c, 94 :: 		DC_time = (current_DC*pwm_period2)/100;
0x1D4A	0x4810    LDR	R0, [PC, #64]
0x1D4C	0x6802    LDR	R2, [R0, #0]
0x1D4E	0x4813    LDR	R0, [PC, #76]
0x1D50	0x6800    LDR	R0, [R0, #0]
0x1D52	0xF7FFFDCB  BL	__Mul_FP+0
0x1D56	0x4A0F    LDR	R2, [PC, #60]
0x1D58	0xF7FFFE48  BL	__Div_FP+0
0x1D5C	0xF7FFFE22  BL	__FloatToUnsignedIntegral+0
0x1D60	0xB280    UXTH	R0, R0
0x1D62	0x490D    LDR	R1, [PC, #52]
0x1D64	0x8008    STRH	R0, [R1, #0]
;FlightControl.c, 95 :: 		PWM_TIM2_Set_Duty(DC_time, _PWM_NON_INVERTED, _PWM_CHANNEL2);       //for YAW
0x1D66	0x2201    MOVS	R2, #1
0x1D68	0x2100    MOVS	R1, #0
0x1D6A	0xF7FFFB8D  BL	_PWM_TIM2_Set_Duty+0
;FlightControl.c, 96 :: 		Delay_ms(2000);   //Probably non necessary delay but allows time for the Ardupilot to register the DisArm stick position
0x1D6E	0xF64247FF  MOVW	R7, #11519
0x1D72	0xF2C01731  MOVT	R7, #305
0x1D76	0xBF00    NOP
0x1D78	0xBF00    NOP
L_DisArm12:
0x1D7A	0x1E7F    SUBS	R7, R7, #1
0x1D7C	0xD1FD    BNE	L_DisArm12
0x1D7E	0xBF00    NOP
0x1D80	0xBF00    NOP
0x1D82	0xBF00    NOP
;FlightControl.c, 97 :: 		}
L_end_DisArm:
0x1D84	0xF8DDE000  LDR	LR, [SP, #0]
0x1D88	0xB001    ADD	SP, SP, #4
0x1D8A	0x4770    BX	LR
0x1D8C	0x01602000  	_pwm_period2+0
0x1D90	0x00002000  	_current_DC_2+0
0x1D94	0x000042C8  	#1120403456
0x1D98	0x015A2000  	_DC_time+0
0x1D9C	0x00082000  	_current_DC+0
; end of _DisArm
___FillZeros:
;__Lib_System_101_102_103.c, 63 :: 		
0x22C8	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 65 :: 		
0x22CA	0xF04F0900  MOV	R9, #0
;__Lib_System_101_102_103.c, 66 :: 		
0x22CE	0xF04F0C00  MOV	R12, #0
;__Lib_System_101_102_103.c, 67 :: 		
0x22D2	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_101_102_103.c, 68 :: 		
0x22D6	0xDC04    BGT	L_loopFZs
;__Lib_System_101_102_103.c, 69 :: 		
0x22D8	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_101_102_103.c, 70 :: 		
0x22DC	0xDB01    BLT	L_loopFZs
;__Lib_System_101_102_103.c, 71 :: 		
0x22DE	0x46D4    MOV	R12, R10
;__Lib_System_101_102_103.c, 72 :: 		
0x22E0	0x46EA    MOV	R10, SP
;__Lib_System_101_102_103.c, 73 :: 		
L_loopFZs:
;__Lib_System_101_102_103.c, 74 :: 		
0x22E2	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_101_102_103.c, 75 :: 		
0x22E6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_101_102_103.c, 76 :: 		
0x22EA	0xD1FA    BNE	L_loopFZs
;__Lib_System_101_102_103.c, 77 :: 		
0x22EC	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_101_102_103.c, 78 :: 		
0x22F0	0xDD05    BLE	L_norep
;__Lib_System_101_102_103.c, 79 :: 		
0x22F2	0x46E2    MOV	R10, R12
;__Lib_System_101_102_103.c, 80 :: 		
0x22F4	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_101_102_103.c, 81 :: 		
0x22F8	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_101_102_103.c, 82 :: 		
0x22FC	0xE7F1    B	L_loopFZs
;__Lib_System_101_102_103.c, 83 :: 		
L_norep:
;__Lib_System_101_102_103.c, 85 :: 		
L_end___FillZeros:
0x22FE	0xB001    ADD	SP, SP, #4
0x2300	0x4770    BX	LR
; end of ___FillZeros
__Lib_System_101_102_103_InitialSetUpRCCRCC2:
;__Lib_System_101_102_103.c, 333 :: 		
0x2410	0xB082    SUB	SP, SP, #8
0x2412	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_101_102_103.c, 336 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2416	0x4A33    LDR	R2, [PC, #204]
;__Lib_System_101_102_103.c, 337 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x2418	0x4B33    LDR	R3, [PC, #204]
;__Lib_System_101_102_103.c, 338 :: 		
; Fosc_kHz start address is: 4 (R1)
0x241A	0x4934    LDR	R1, [PC, #208]
;__Lib_System_101_102_103.c, 345 :: 		
0x241C	0xF64B3080  MOVW	R0, #48000
0x2420	0x4281    CMP	R1, R0
0x2422	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC228
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 346 :: 		
0x2424	0x4832    LDR	R0, [PC, #200]
0x2426	0x6800    LDR	R0, [R0, #0]
0x2428	0xF0400102  ORR	R1, R0, #2
0x242C	0x4830    LDR	R0, [PC, #192]
0x242E	0x6001    STR	R1, [R0, #0]
0x2430	0xE011    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC229
L___Lib_System_101_102_103_InitialSetUpRCCRCC228:
;__Lib_System_101_102_103.c, 347 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2432	0xF64550C0  MOVW	R0, #24000
0x2436	0x4281    CMP	R1, R0
0x2438	0xD906    BLS	L___Lib_System_101_102_103_InitialSetUpRCCRCC230
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_101_102_103.c, 348 :: 		
0x243A	0x482D    LDR	R0, [PC, #180]
0x243C	0x6800    LDR	R0, [R0, #0]
0x243E	0xF0400101  ORR	R1, R0, #1
0x2442	0x482B    LDR	R0, [PC, #172]
0x2444	0x6001    STR	R1, [R0, #0]
0x2446	0xE006    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC231
L___Lib_System_101_102_103_InitialSetUpRCCRCC230:
;__Lib_System_101_102_103.c, 350 :: 		
0x2448	0x4829    LDR	R0, [PC, #164]
0x244A	0x6801    LDR	R1, [R0, #0]
0x244C	0xF06F0007  MVN	R0, #7
0x2450	0x4001    ANDS	R1, R0
0x2452	0x4827    LDR	R0, [PC, #156]
0x2454	0x6001    STR	R1, [R0, #0]
L___Lib_System_101_102_103_InitialSetUpRCCRCC231:
L___Lib_System_101_102_103_InitialSetUpRCCRCC229:
;__Lib_System_101_102_103.c, 352 :: 		
0x2456	0xF7FFFF55  BL	__Lib_System_101_102_103_SystemClockSetDefault+0
;__Lib_System_101_102_103.c, 354 :: 		
0x245A	0x4826    LDR	R0, [PC, #152]
0x245C	0x6003    STR	R3, [R0, #0]
;__Lib_System_101_102_103.c, 355 :: 		
0x245E	0x4826    LDR	R0, [PC, #152]
0x2460	0xEA020100  AND	R1, R2, R0, LSL #0
0x2464	0x4825    LDR	R0, [PC, #148]
0x2466	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 357 :: 		
0x2468	0xF0020001  AND	R0, R2, #1
0x246C	0xB140    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC243
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x246E	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 358 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC233:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2470	0x4822    LDR	R0, [PC, #136]
0x2472	0x6800    LDR	R0, [R0, #0]
0x2474	0xF0000002  AND	R0, R0, #2
0x2478	0x2800    CMP	R0, #0
0x247A	0xD100    BNE	L___Lib_System_101_102_103_InitialSetUpRCCRCC234
;__Lib_System_101_102_103.c, 359 :: 		
0x247C	0xE7F8    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC233
L___Lib_System_101_102_103_InitialSetUpRCCRCC234:
;__Lib_System_101_102_103.c, 360 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x247E	0xE000    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC232
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC243:
;__Lib_System_101_102_103.c, 357 :: 		
0x2480	0x4619    MOV	R1, R3
;__Lib_System_101_102_103.c, 360 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC232:
;__Lib_System_101_102_103.c, 362 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2482	0xF4023080  AND	R0, R2, #65536
0x2486	0xB148    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC244
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_101_102_103.c, 363 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC236:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x2488	0x481C    LDR	R0, [PC, #112]
0x248A	0x6800    LDR	R0, [R0, #0]
0x248C	0xF4003000  AND	R0, R0, #131072
0x2490	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC237
;__Lib_System_101_102_103.c, 364 :: 		
0x2492	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC236
L___Lib_System_101_102_103_InitialSetUpRCCRCC237:
;__Lib_System_101_102_103.c, 365 :: 		
0x2494	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x2496	0x460A    MOV	R2, R1
0x2498	0x9901    LDR	R1, [SP, #4]
0x249A	0xE002    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC235
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC244:
;__Lib_System_101_102_103.c, 362 :: 		
0x249C	0x9101    STR	R1, [SP, #4]
0x249E	0x4611    MOV	R1, R2
0x24A0	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_101_102_103.c, 365 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC235:
;__Lib_System_101_102_103.c, 367 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x24A2	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x24A6	0xB170    CBZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC245
;__Lib_System_101_102_103.c, 368 :: 		
0x24A8	0x4814    LDR	R0, [PC, #80]
0x24AA	0x6800    LDR	R0, [R0, #0]
0x24AC	0xF0407180  ORR	R1, R0, #16777216
0x24B0	0x4812    LDR	R0, [PC, #72]
0x24B2	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x24B4	0x4611    MOV	R1, R2
;__Lib_System_101_102_103.c, 369 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
0x24B6	0x4811    LDR	R0, [PC, #68]
0x24B8	0x6800    LDR	R0, [R0, #0]
0x24BA	0xF0007000  AND	R0, R0, #33554432
0x24BE	0xB900    CBNZ	R0, L___Lib_System_101_102_103_InitialSetUpRCCRCC240
;__Lib_System_101_102_103.c, 370 :: 		
0x24C0	0xE7F9    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC239
L___Lib_System_101_102_103_InitialSetUpRCCRCC240:
;__Lib_System_101_102_103.c, 371 :: 		
0x24C2	0x460A    MOV	R2, R1
0x24C4	0xE7FF    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC238
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_101_102_103_InitialSetUpRCCRCC245:
;__Lib_System_101_102_103.c, 367 :: 		
;__Lib_System_101_102_103.c, 371 :: 		
L___Lib_System_101_102_103_InitialSetUpRCCRCC238:
;__Lib_System_101_102_103.c, 374 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_101_102_103_InitialSetUpRCCRCC241:
; ulRCC_CFGR start address is: 8 (R2)
0x24C6	0x480B    LDR	R0, [PC, #44]
0x24C8	0x6800    LDR	R0, [R0, #0]
0x24CA	0xF000010C  AND	R1, R0, #12
0x24CE	0x0090    LSLS	R0, R2, #2
0x24D0	0xF000000C  AND	R0, R0, #12
0x24D4	0x4281    CMP	R1, R0
0x24D6	0xD000    BEQ	L___Lib_System_101_102_103_InitialSetUpRCCRCC242
;__Lib_System_101_102_103.c, 375 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x24D8	0xE7F5    B	L___Lib_System_101_102_103_InitialSetUpRCCRCC241
L___Lib_System_101_102_103_InitialSetUpRCCRCC242:
;__Lib_System_101_102_103.c, 377 :: 		
L_end_InitialSetUpRCCRCC2:
0x24DA	0xF8DDE000  LDR	LR, [SP, #0]
0x24DE	0xB002    ADD	SP, SP, #8
0x24E0	0x4770    BX	LR
0x24E2	0xBF00    NOP
0x24E4	0x00810100  	#16777345
0x24E8	0x04020034  	#3408898
0x24EC	0xEA600000  	#60000
0x24F0	0x20004002  	FLASH_ACR+0
0x24F4	0x10044002  	RCC_CFGR+0
0x24F8	0xFFFF000F  	#1048575
0x24FC	0x10004002  	RCC_CR+0
; end of __Lib_System_101_102_103_InitialSetUpRCCRCC2
__Lib_System_101_102_103_SystemClockSetDefault:
;__Lib_System_101_102_103.c, 312 :: 		
0x2304	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 315 :: 		
0x2306	0x480F    LDR	R0, [PC, #60]
0x2308	0x6800    LDR	R0, [R0, #0]
0x230A	0xF0400101  ORR	R1, R0, #1
0x230E	0x480D    LDR	R0, [PC, #52]
0x2310	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 318 :: 		
0x2312	0x490D    LDR	R1, [PC, #52]
0x2314	0x480D    LDR	R0, [PC, #52]
0x2316	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 321 :: 		
0x2318	0x480A    LDR	R0, [PC, #40]
0x231A	0x6801    LDR	R1, [R0, #0]
0x231C	0x480C    LDR	R0, [PC, #48]
0x231E	0x4001    ANDS	R1, R0
0x2320	0x4808    LDR	R0, [PC, #32]
0x2322	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 324 :: 		
0x2324	0x4807    LDR	R0, [PC, #28]
0x2326	0x6801    LDR	R1, [R0, #0]
0x2328	0xF46F2080  MVN	R0, #262144
0x232C	0x4001    ANDS	R1, R0
0x232E	0x4805    LDR	R0, [PC, #20]
0x2330	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 327 :: 		
0x2332	0x4806    LDR	R0, [PC, #24]
0x2334	0x6801    LDR	R1, [R0, #0]
0x2336	0xF46F00FE  MVN	R0, #8323072
0x233A	0x4001    ANDS	R1, R0
0x233C	0x4803    LDR	R0, [PC, #12]
0x233E	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 331 :: 		
L_end_SystemClockSetDefault:
0x2340	0xB001    ADD	SP, SP, #4
0x2342	0x4770    BX	LR
0x2344	0x10004002  	RCC_CR+0
0x2348	0x0000F8FF  	#-117506048
0x234C	0x10044002  	RCC_CFGR+0
0x2350	0xFFFFFEF6  	#-17367041
; end of __Lib_System_101_102_103_SystemClockSetDefault
__Lib_System_101_102_103_InitialSetUpFosc:
;__Lib_System_101_102_103.c, 379 :: 		
0x23E4	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 380 :: 		
0x23E6	0x4902    LDR	R1, [PC, #8]
0x23E8	0x4802    LDR	R0, [PC, #8]
0x23EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_101_102_103.c, 381 :: 		
L_end_InitialSetUpFosc:
0x23EC	0xB001    ADD	SP, SP, #4
0x23EE	0x4770    BX	LR
0x23F0	0xEA600000  	#60000
0x23F4	0x01702000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_101_102_103_InitialSetUpFosc
___GenExcept:
;__Lib_System_101_102_103.c, 262 :: 		
0x23DC	0xB081    SUB	SP, SP, #4
;__Lib_System_101_102_103.c, 263 :: 		
L___GenExcept24:
0x23DE	0xE7FE    B	L___GenExcept24
;__Lib_System_101_102_103.c, 264 :: 		
L_end___GenExcept:
0x23E0	0xB001    ADD	SP, SP, #4
0x23E2	0x4770    BX	LR
; end of ___GenExcept
0x2908	0xB500    PUSH	(R14)
0x290A	0xF8DFB024  LDR	R11, [PC, #36]
0x290E	0xF8DFA024  LDR	R10, [PC, #36]
0x2912	0xF8DFC024  LDR	R12, [PC, #36]
0x2916	0xF7FEF855  BL	2500
0x291A	0xF8DFB020  LDR	R11, [PC, #32]
0x291E	0xF8DFA020  LDR	R10, [PC, #32]
0x2922	0xF8DFC020  LDR	R12, [PC, #32]
0x2926	0xF7FEF84D  BL	2500
0x292A	0xBD00    POP	(R15)
0x292C	0x4770    BX	LR
0x292E	0xBF00    NOP
0x2930	0x00002000  	#536870912
0x2934	0x015A2000  	#536871258
0x2938	0x25000000  	#9472
0x293C	0x015C2000  	#536871260
0x2940	0x01602000  	#536871264
0x2944	0x12F40000  	#4852
0x29A4	0xB500    PUSH	(R14)
0x29A6	0xF8DFB010  LDR	R11, [PC, #16]
0x29AA	0xF8DFA010  LDR	R10, [PC, #16]
0x29AE	0xF7FFFC8B  BL	8904
0x29B2	0xBD00    POP	(R15)
0x29B4	0x4770    BX	LR
0x29B6	0xBF00    NOP
0x29B8	0x00002000  	#536870912
0x29BC	0x01842000  	#536871300
_SysTick_ISR:
;main.c, 178 :: 		void SysTick_ISR() iv IVT_INT_SysTick ics ICS_AUTO          // once every mS
;main.c, 180 :: 		GPIOC_ODR ^= _GPIO_PINMASK_9;
0x2388	0x480F    LDR	R0, [PC, #60]
0x238A	0x6800    LDR	R0, [R0, #0]
0x238C	0xF4807100  EOR	R1, R0, #512
0x2390	0x480D    LDR	R0, [PC, #52]
0x2392	0x6001    STR	R1, [R0, #0]
;main.c, 181 :: 		TIM2_SR.UIF = 0;
0x2394	0x2100    MOVS	R1, #0
0x2396	0xB249    SXTB	R1, R1
0x2398	0x480C    LDR	R0, [PC, #48]
0x239A	0x6001    STR	R1, [R0, #0]
;main.c, 182 :: 		msTicks++;
0x239C	0x480C    LDR	R0, [PC, #48]
0x239E	0x6800    LDR	R0, [R0, #0]
0x23A0	0x1C41    ADDS	R1, R0, #1
0x23A2	0x480B    LDR	R0, [PC, #44]
0x23A4	0x6001    STR	R1, [R0, #0]
;main.c, 183 :: 		current_func++;                                           //switch to next function
0x23A6	0x490B    LDR	R1, [PC, #44]
0x23A8	0xF9B10000  LDRSH	R0, [R1, #0]
0x23AC	0x1C40    ADDS	R0, R0, #1
0x23AE	0xB200    SXTH	R0, R0
0x23B0	0x8008    STRH	R0, [R1, #0]
;main.c, 184 :: 		if (current_func == NUM_FUNC)                              //test for end of function
0x23B2	0x2801    CMP	R0, #1
0x23B4	0xD103    BNE	L_SysTick_ISR13
;main.c, 185 :: 		current_func = 0;                                        //if so, restart at first function
0x23B6	0x2100    MOVS	R1, #0
0x23B8	0xB209    SXTH	R1, R1
0x23BA	0x4806    LDR	R0, [PC, #24]
0x23BC	0x8001    STRH	R1, [R0, #0]
L_SysTick_ISR13:
;main.c, 186 :: 		func_flag = 1;                                    //tell main() that there is a function ready
0x23BE	0x2101    MOVS	R1, #1
0x23C0	0xB209    SXTH	R1, R1
0x23C2	0x4805    LDR	R0, [PC, #20]
0x23C4	0x8001    STRH	R1, [R0, #0]
;main.c, 187 :: 		}
L_end_SysTick_ISR:
0x23C6	0x4770    BX	LR
0x23C8	0x100C4001  	GPIOC_ODR+0
0x23CC	0x02004200  	TIM2_SR+0
0x23D0	0x015C2000  	_msTicks+0
0x23D4	0x008E2000  	_current_func+0
0x23D8	0x011A2000  	_func_flag+0
; end of _SysTick_ISR
;main.c,0 :: ?ICS_msTicks [4]
0x12F4	0x00000000 ;?ICS_msTicks+0
; end of ?ICS_msTicks
;__Lib_System_101_102_103.c,384 :: __Lib_System_101_102_103_ADCPrescTable [4]
0x1AD4	0x08060402 ;__Lib_System_101_102_103_ADCPrescTable+0
; end of __Lib_System_101_102_103_ADCPrescTable
;FlightControl.c,0 :: ?ICS_current_DC_2 [4]
0x2500	0x40A00000 ;?ICS_current_DC_2+0
; end of ?ICS_current_DC_2
;FlightControl.c,0 :: ?ICS_current_DC_3 [4]
0x2504	0x40B00000 ;?ICS_current_DC_3+0
; end of ?ICS_current_DC_3
;FlightControl.c,0 :: ?ICS_current_DC [4]
0x2508	0x40ECCCCD ;?ICS_current_DC+0
; end of ?ICS_current_DC
;FlightControl.c,0 :: ?ICS_current_DC_4 [4]
0x250C	0x411E6666 ;?ICS_current_DC_4+0
; end of ?ICS_current_DC_4
;,0 :: _initBlock_6 [28]
; Containing: ?ICS?lstr1_FlightControl [13]
;             ?ICS?lstr2_FlightControl [15]
0x2510	0x696B6154 ;_initBlock_6+0 : ?ICS?lstr1_FlightControl at 0x2510
0x2514	0x6F20676E ;_initBlock_6+4
0x2518	0x2E376666 ;_initBlock_6+8
0x251C	0x6E6F5300 ;_initBlock_6+12 : ?ICS?lstr2_FlightControl at 0x251D
0x2520	0x61207261 ;_initBlock_6+16
0x2524	0x61726576 ;_initBlock_6+20
0x2528	0x002E6567 ;_initBlock_6+24
; end of _initBlock_6
;,0 :: _initBlock_7 [98]
; Containing: ?ICS?lstr3_FlightControl [9]
;             ?ICS?lstr4_FlightControl [26]
;             ?ICS?lstr5_FlightControl [14]
;             ?ICS?lstr6_FlightControl [30]
;             ?ICS?lstr7_FlightControl [19]
0x252C	0x6F726854 ;_initBlock_7+0 : ?ICS?lstr3_FlightControl at 0x252C
0x2530	0x656C7474 ;_initBlock_7+4
0x2534	0x69614600 ;_initBlock_7+8 : ?ICS?lstr4_FlightControl at 0x2535
0x2538	0x2064656C ;_initBlock_7+12
0x253C	0x72206F74 ;_initBlock_7+16
0x2540	0x68636165 ;_initBlock_7+20
0x2544	0x746C6120 ;_initBlock_7+24
0x2548	0x64757469 ;_initBlock_7+28
0x254C	0x4D002E65 ;_initBlock_7+32 : ?ICS?lstr5_FlightControl at 0x254F
0x2550	0x54207861 ;_initBlock_7+36
0x2554	0x746F7268 ;_initBlock_7+40
0x2558	0x2E656C74 ;_initBlock_7+44
0x255C	0x6E6F5300 ;_initBlock_7+48 : ?ICS?lstr6_FlightControl at 0x255D
0x2560	0x72207261 ;_initBlock_7+52
0x2564	0x73646165 ;_initBlock_7+56
0x2568	0x35353220 ;_initBlock_7+60
0x256C	0x74657220 ;_initBlock_7+64
0x2570	0x206E7275 ;_initBlock_7+68
0x2574	0x736C6166 ;_initBlock_7+72
0x2578	0x52002E65 ;_initBlock_7+76 : ?ICS?lstr7_FlightControl at 0x257B
0x257C	0x68636165 ;_initBlock_7+80
0x2580	0x41206465 ;_initBlock_7+84
0x2584	0x7574696C ;_initBlock_7+88
0x2588	0x65647574 ;_initBlock_7+92
0x258C	0x002E ;_initBlock_7+96
; end of _initBlock_7
;main.c,0 :: ?ICS_current_func [2]
0x258E	0x0000 ;?ICS_current_func+0
; end of ?ICS_current_func
;FlightControl.c,0 :: ?ICS_current_DC_9 [4]
0x2590	0x4104CCCD ;?ICS_current_DC_9+0
; end of ?ICS_current_DC_9
;FlightControl.c,0 :: ?ICS?lstr8_FlightControl [24]
0x2594	0x62617453 ;?ICS?lstr8_FlightControl+0
0x2598	0x696C696C ;?ICS?lstr8_FlightControl+4
0x259C	0x676E697A ;?ICS?lstr8_FlightControl+8
0x25A0	0x696C4120 ;?ICS?lstr8_FlightControl+12
0x25A4	0x75746974 ;?ICS?lstr8_FlightControl+16
0x25A8	0x002E6564 ;?ICS?lstr8_FlightControl+20
; end of ?ICS?lstr8_FlightControl
;,0 :: _initBlock_11 [54]
; Containing: ?ICS?lstr9_FlightControl [19]
;             ?ICS?lstr10_FlightControl [35]
0x25AC	0x20747331 ;_initBlock_11+0 : ?ICS?lstr9_FlightControl at 0x25AC
0x25B0	0x616E6F53 ;_initBlock_11+4
0x25B4	0x76612072 ;_initBlock_11+8
0x25B8	0x67617265 ;_initBlock_11+12
0x25BC	0x42002E65 ;_initBlock_11+16 : ?ICS?lstr10_FlightControl at 0x25BF
0x25C0	0x6B616572 ;_initBlock_11+20
0x25C4	0x20676E69 ;_initBlock_11+24
0x25C8	0x2C74756F ;_initBlock_11+28
0x25CC	0x6F6F7420 ;_initBlock_11+32
0x25D0	0x6E616D20 ;_initBlock_11+36
0x25D4	0x74692079 ;_initBlock_11+40
0x25D8	0x74617265 ;_initBlock_11+44
0x25DC	0x736E6F69 ;_initBlock_11+48
0x25E0	0x002E ;_initBlock_11+52
; end of _initBlock_11
;,0 :: _initBlock_12 [38]
; Containing: ?ICS?lstr11_FlightControl [19]
;             ?ICS?lstr12_FlightControl [19]
0x25E2	0x72636544 ;_initBlock_12+0 : ?ICS?lstr11_FlightControl at 0x25E2
0x25E6	0x65736165 ;_initBlock_12+4
0x25EA	0x72685420 ;_initBlock_12+8
0x25EE	0x6C74746F ;_initBlock_12+12
0x25F2	0x49002E65 ;_initBlock_12+16 : ?ICS?lstr12_FlightControl at 0x25F5
0x25F6	0x6572636E ;_initBlock_12+20
0x25FA	0x20657361 ;_initBlock_12+24
0x25FE	0x6F726854 ;_initBlock_12+28
0x2602	0x656C7474 ;_initBlock_12+32
0x2606	0x002E ;_initBlock_12+36
; end of _initBlock_12
;FlightControl.c,0 :: ?ICS?lstr13_FlightControl [18]
0x2608	0x63616552 ;?ICS?lstr13_FlightControl+0
0x260C	0x20646568 ;?ICS?lstr13_FlightControl+4
0x2610	0x69746C41 ;?ICS?lstr13_FlightControl+8
0x2614	0x65647574 ;?ICS?lstr13_FlightControl+12
0x2618	0x002E ;?ICS?lstr13_FlightControl+16
; end of ?ICS?lstr13_FlightControl
;main.c,0 :: ?ICS_func_flag [2]
0x261A	0x0000 ;?ICS_func_flag+0
; end of ?ICS_func_flag
;FlightControl.c,0 :: ?ICS_current_DC_8 [4]
0x261C	0x41180000 ;?ICS_current_DC_8+0
; end of ?ICS_current_DC_8
;main.c,0 :: ?ICS?lstr1_main [22]
0x2620	0x616C6544 ;?ICS?lstr1_main+0
0x2624	0x6F662079 ;?ICS?lstr1_main+4
0x2628	0x50472072 ;?ICS?lstr1_main+8
0x262C	0x69532053 ;?ICS?lstr1_main+12
0x2630	0x6C616E67 ;?ICS?lstr1_main+16
0x2634	0x002E ;?ICS?lstr1_main+20
; end of ?ICS?lstr1_main
;,0 :: _initBlock_17 [36]
; Containing: ?ICS?lstr2_main [17]
;             ?ICS?lstr3_main [19]
0x2636	0x72617453 ;_initBlock_17+0 : ?ICS?lstr2_main at 0x2636
0x263A	0x676E6974 ;_initBlock_17+4
0x263E	0x73657420 ;_initBlock_17+8
0x2642	0x2E303174 ;_initBlock_17+12
0x2646	0x74655200 ;_initBlock_17+16 : ?ICS?lstr3_main at 0x2647
0x264A	0x696E7275 ;_initBlock_17+20
0x264E	0x7420676E ;_initBlock_17+24
0x2652	0x6162206F ;_initBlock_17+28
0x2656	0x002E6573 ;_initBlock_17+32
; end of _initBlock_17
;__Lib_GPIO_32F10x_Defs.c,390 :: __GPIO_MODULE_TIM3_CH1_PA6 [108]
0x265C	0x00000006 ;__GPIO_MODULE_TIM3_CH1_PA6+0
0x2660	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH1_PA6+4
0x2664	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+8
0x2668	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+12
0x266C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+16
0x2670	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+20
0x2674	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+24
0x2678	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+28
0x267C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+32
0x2680	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+36
0x2684	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+40
0x2688	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+44
0x268C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+48
0x2690	0x00000818 ;__GPIO_MODULE_TIM3_CH1_PA6+52
0x2694	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+56
0x2698	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+60
0x269C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+64
0x26A0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+68
0x26A4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+72
0x26A8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+76
0x26AC	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+80
0x26B0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+84
0x26B4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+88
0x26B8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+92
0x26BC	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+96
0x26C0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+100
0x26C4	0x001A0C00 ;__GPIO_MODULE_TIM3_CH1_PA6+104
; end of __GPIO_MODULE_TIM3_CH1_PA6
;__Lib_GPIO_32F10x_Defs.c,697 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x26C8	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x26CC	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x26D0	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x26D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x26D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x26DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x26E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x26E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x26E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x26EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x26F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x26F4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x26F8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x26FC	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x2700	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x2704	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2708	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x270C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2710	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2714	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2718	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x271C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2720	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2724	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2728	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x272C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2730	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,362 :: __GPIO_MODULE_TIM2_CH4_PA3 [108]
0x2734	0x00000003 ;__GPIO_MODULE_TIM2_CH4_PA3+0
0x2738	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH4_PA3+4
0x273C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+8
0x2740	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+12
0x2744	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+16
0x2748	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+20
0x274C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+24
0x2750	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+28
0x2754	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+32
0x2758	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+36
0x275C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+40
0x2760	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+44
0x2764	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+48
0x2768	0x00000818 ;__GPIO_MODULE_TIM2_CH4_PA3+52
0x276C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+56
0x2770	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+60
0x2774	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+64
0x2778	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+68
0x277C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+72
0x2780	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+76
0x2784	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+80
0x2788	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+84
0x278C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+88
0x2790	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+92
0x2794	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+96
0x2798	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+100
0x279C	0x00180300 ;__GPIO_MODULE_TIM2_CH4_PA3+104
; end of __GPIO_MODULE_TIM2_CH4_PA3
;__Lib_GPIO_32F10x_Defs.c,347 :: __GPIO_MODULE_TIM2_CH1_PA0 [108]
0x27A0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+0
0x27A4	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA0+4
0x27A8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+8
0x27AC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+12
0x27B0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+16
0x27B4	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+20
0x27B8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+24
0x27BC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+28
0x27C0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+32
0x27C4	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+36
0x27C8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+40
0x27CC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+44
0x27D0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+48
0x27D4	0x00000818 ;__GPIO_MODULE_TIM2_CH1_PA0+52
0x27D8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+56
0x27DC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+60
0x27E0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+64
0x27E4	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+68
0x27E8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+72
0x27EC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+76
0x27F0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+80
0x27F4	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+84
0x27F8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+88
0x27FC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+92
0x2800	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+96
0x2804	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+100
0x2808	0x00180300 ;__GPIO_MODULE_TIM2_CH1_PA0+104
; end of __GPIO_MODULE_TIM2_CH1_PA0
;__Lib_GPIO_32F10x_Defs.c,352 :: __GPIO_MODULE_TIM2_CH2_PA1 [108]
0x280C	0x00000001 ;__GPIO_MODULE_TIM2_CH2_PA1+0
0x2810	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH2_PA1+4
0x2814	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+8
0x2818	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+12
0x281C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+16
0x2820	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+20
0x2824	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+24
0x2828	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+28
0x282C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+32
0x2830	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+36
0x2834	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+40
0x2838	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+44
0x283C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+48
0x2840	0x00000818 ;__GPIO_MODULE_TIM2_CH2_PA1+52
0x2844	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+56
0x2848	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+60
0x284C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+64
0x2850	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+68
0x2854	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+72
0x2858	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+76
0x285C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+80
0x2860	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+84
0x2864	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+88
0x2868	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+92
0x286C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+96
0x2870	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+100
0x2874	0x00180300 ;__GPIO_MODULE_TIM2_CH2_PA1+104
; end of __GPIO_MODULE_TIM2_CH2_PA1
;__Lib_GPIO_32F10x_Defs.c,357 :: __GPIO_MODULE_TIM2_CH3_PA2 [108]
0x2878	0x00000002 ;__GPIO_MODULE_TIM2_CH3_PA2+0
0x287C	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH3_PA2+4
0x2880	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+8
0x2884	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+12
0x2888	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+16
0x288C	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+20
0x2890	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+24
0x2894	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+28
0x2898	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+32
0x289C	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+36
0x28A0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+40
0x28A4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+44
0x28A8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+48
0x28AC	0x00000818 ;__GPIO_MODULE_TIM2_CH3_PA2+52
0x28B0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+56
0x28B4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+60
0x28B8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+64
0x28BC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+68
0x28C0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+72
0x28C4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+76
0x28C8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+80
0x28CC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+84
0x28D0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+88
0x28D4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+92
0x28D8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+96
0x28DC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+100
0x28E0	0x00180300 ;__GPIO_MODULE_TIM2_CH3_PA2+104
; end of __GPIO_MODULE_TIM2_CH3_PA2
;FlightControl.c,0 :: ?ICSalitudeSonarRead_sonarArray_L0 [20]
0x28E4	0x00000000 ;?ICSalitudeSonarRead_sonarArray_L0+0
0x28E8	0x00000000 ;?ICSalitudeSonarRead_sonarArray_L0+4
0x28EC	0x00000000 ;?ICSalitudeSonarRead_sonarArray_L0+8
0x28F0	0x00000000 ;?ICSalitudeSonarRead_sonarArray_L0+12
0x28F4	0x00000000 ;?ICSalitudeSonarRead_sonarArray_L0+16
; end of ?ICSalitudeSonarRead_sonarArray_L0
;__Lib_System_101_102_103.c,383 :: __Lib_System_101_102_103_APBAHBPrescTable [16]
0x28F8	0x00000000 ;__Lib_System_101_102_103_APBAHBPrescTable+0
0x28FC	0x04030201 ;__Lib_System_101_102_103_APBAHBPrescTable+4
0x2900	0x04030201 ;__Lib_System_101_102_103_APBAHBPrescTable+8
0x2904	0x09080706 ;__Lib_System_101_102_103_APBAHBPrescTable+12
; end of __Lib_System_101_102_103_APBAHBPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0130     [140]    _GPIO_Clk_Enable
0x01BC     [500]    _GPIO_Config
0x03B0      [24]    _Delay_1us
0x03C8      [12]    _Get_Fosc_kHz
0x03D4     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x046C      [30]    __Lib_UART_123_45_UARTx_Write
0x048C      [64]    __SignedIntegralToFloat
0x04CC     [258]    __Sub_FP
0x05D0     [104]    __Compare_FP
0x0638     [150]    __Lib_ADC_123_32F10x_16ch_ADCx_Get_Sample
0x06D0      [50]    __Lib_UART_123_45_UARTx_Write_Text
0x0704     [296]    __Lib_ADC_123_32F10x_16ch_ADCx_Init
0x082C      [28]    _ADC1_Get_Sample
0x0848     [380]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
0x09C4      [20]    ___CC2DW
0x09D8     [272]    _GPIO_Alternate_Function_Enable
0x0AE8     [168]    _RCC_GetClocksFrequency
0x0B90     [142]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
0x0C20      [66]    __FloatToSignedIntegral
0x0C64      [24]    _GPIO_Analog_Input
0x0C7C      [70]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
0x0CC4     [128]    _floor
0x0D44      [28]    _GPIO_Digital_Output
0x0D60      [40]    _UART_Set_Active
0x0D88      [28]    _UART1_Write_Text
0x0DA4     [944]    _UARTSendDouble
0x1154      [76]    _Throttle_Off
0x11A0     [254]    __Add_FP
0x12A0      [56]    _UARTSendNewLine
0x12D8      [28]    _UART1_Write
0x12F8     [216]    _alitudeSonarRead
0x13D0     [184]    _UARTSendUint16
0x1488      [32]    _PWM_TIM2_Set_Duty
0x14A8      [28]    _PWM_TIM2_Init
0x14C4      [28]    _PWM_TIM2_Start
0x14E0      [32]    _PWM_TIM3_Set_Duty
0x1500     [340]    _ADC_Set_Input_Channel
0x1654     [584]    __Lib_UART_123_45_UARTx_Init_Advanced
0x189C      [28]    _PWM_TIM3_Init
0x18B8      [52]    _ADC1_Init
0x18EC     [138]    __Mul_FP
0x1978      [44]    __UnsignedIntegralToFloat
0x19A4      [70]    __FloatToUnsignedIntegral
0x19EC     [164]    __Div_FP
0x1A90      [28]    _PWM_TIM3_Start
0x1AAC      [40]    _UART1_Init_Advanced
0x1AD8      [80]    _Init_LED
0x1B28      [68]    _LoiterMode
0x1B6C     [320]    _Stabilize_Alt
0x1CAC      [68]    _LandingMode
0x1CF0     [176]    _DisArm
0x1DA0      [48]    _Init_ADC
0x1DD0     [412]    _TakeOff
0x1F6C      [64]    _UARTSendString
0x1FAC      [68]    _StabilizeMode
0x1FF0     [192]    _Arm
0x20B0     [272]    _Init_Pwm
0x21C0     [192]    _mainTestingThread
0x2280      [26]    _Flight_Control_Init
0x229C      [44]    _UARTDebugInit
0x22C8      [58]    ___FillZeros
0x2304      [80]    __Lib_System_101_102_103_SystemClockSetDefault
0x2358      [48]    _init_prog
0x2388      [84]    _SysTick_ISR
0x23DC       [8]    ___GenExcept
0x23E4      [20]    __Lib_System_101_102_103_InitialSetUpFosc
0x23F8      [22]    _main
0x2410     [240]    __Lib_System_101_102_103_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    _current_DC_2
0x20000004       [4]    _current_DC_3
0x20000008       [4]    _current_DC
0x2000000C       [4]    _current_DC_4
0x20000010      [13]    ?lstr1_FlightControl
0x2000001D      [15]    ?lstr2_FlightControl
0x2000002C       [9]    ?lstr3_FlightControl
0x20000035      [26]    ?lstr4_FlightControl
0x2000004F      [14]    ?lstr5_FlightControl
0x2000005D      [30]    ?lstr6_FlightControl
0x2000007B      [19]    ?lstr7_FlightControl
0x2000008E       [2]    _current_func
0x20000090       [4]    _current_DC_9
0x20000094      [24]    ?lstr8_FlightControl
0x200000AC      [19]    ?lstr9_FlightControl
0x200000BF      [35]    ?lstr10_FlightControl
0x200000E2      [19]    ?lstr11_FlightControl
0x200000F5      [19]    ?lstr12_FlightControl
0x20000108      [18]    ?lstr13_FlightControl
0x2000011A       [2]    _func_flag
0x2000011C       [4]    _current_DC_8
0x20000120      [22]    ?lstr1_main
0x20000136      [17]    ?lstr2_main
0x20000147      [19]    ?lstr3_main
0x2000015A       [2]    _DC_time
0x2000015C       [4]    _msTicks
0x20000160       [4]    _pwm_period2
0x20000164       [4]    _pwm_period1
0x20000168       [2]    _DC_time_2
0x2000016A       [2]    _DC_time_3
0x2000016C       [4]    _ADC_Get_Sample_Ptr
0x20000170       [4]    ___System_CLOCK_IN_KHZ
0x20000174       [4]    _UART_Rd_Ptr
0x20000178       [4]    _UART_Wr_Ptr
0x2000017C       [4]    _UART_Rdy_Ptr
0x20000180       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x12F4       [4]    ?ICS_msTicks
0x1AD4       [4]    __Lib_System_101_102_103_ADCPrescTable
0x2500       [4]    ?ICS_current_DC_2
0x2504       [4]    ?ICS_current_DC_3
0x2508       [4]    ?ICS_current_DC
0x250C       [4]    ?ICS_current_DC_4
0x2510      [13]    ?ICS?lstr1_FlightControl
0x251D      [15]    ?ICS?lstr2_FlightControl
0x252C       [9]    ?ICS?lstr3_FlightControl
0x2535      [26]    ?ICS?lstr4_FlightControl
0x254F      [14]    ?ICS?lstr5_FlightControl
0x255D      [30]    ?ICS?lstr6_FlightControl
0x257B      [19]    ?ICS?lstr7_FlightControl
0x258E       [2]    ?ICS_current_func
0x2590       [4]    ?ICS_current_DC_9
0x2594      [24]    ?ICS?lstr8_FlightControl
0x25AC      [19]    ?ICS?lstr9_FlightControl
0x25BF      [35]    ?ICS?lstr10_FlightControl
0x25E2      [19]    ?ICS?lstr11_FlightControl
0x25F5      [19]    ?ICS?lstr12_FlightControl
0x2608      [18]    ?ICS?lstr13_FlightControl
0x261A       [2]    ?ICS_func_flag
0x261C       [4]    ?ICS_current_DC_8
0x2620      [22]    ?ICS?lstr1_main
0x2636      [17]    ?ICS?lstr2_main
0x2647      [19]    ?ICS?lstr3_main
0x265C     [108]    __GPIO_MODULE_TIM3_CH1_PA6
0x26C8     [108]    __GPIO_MODULE_USART1_PA9_10
0x2734     [108]    __GPIO_MODULE_TIM2_CH4_PA3
0x27A0     [108]    __GPIO_MODULE_TIM2_CH1_PA0
0x280C     [108]    __GPIO_MODULE_TIM2_CH2_PA1
0x2878     [108]    __GPIO_MODULE_TIM2_CH3_PA2
0x28E4      [20]    ?ICSalitudeSonarRead_sonarArray_L0
0x28F8      [16]    __Lib_System_101_102_103_APBAHBPrescTable
